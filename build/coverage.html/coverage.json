{"/home/travis/build/npmtest/node-npmtest-ng-annotate/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_ng_annotate */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/lib.npmtest_ng_annotate.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/lib.npmtest_ng_annotate.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":56}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":62}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_ng_annotate */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_ng_annotate = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_ng_annotate = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":55}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":69},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-ng-annotate && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_ng_annotate */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_ng_annotate","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_ng_annotate.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_ng_annotate.rollup.js'] =","            local.assetsDict['/assets.npmtest_ng_annotate.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_ng_annotate.__dirname + '/lib.npmtest_ng_annotate.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/ng-annotate-main.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/ng-annotate-main.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":1,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":1,"176":0,"177":1,"178":0,"179":1,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":1,"201":0,"202":0,"203":0,"204":1,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":0,"225":0,"226":1,"227":0,"228":0,"229":0,"230":0,"231":0,"232":1,"233":0,"234":0,"235":0,"236":1,"237":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":1,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":1,"277":0,"278":0,"279":1,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":1,"300":0,"301":0,"302":0,"303":1,"304":0,"305":0,"306":0,"307":0,"308":0,"309":1,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":1,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":1,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":1,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":1,"374":0,"375":0,"376":0,"377":0,"378":0,"379":1,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":1,"403":0,"404":0,"405":0,"406":1,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":1,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":1,"435":0,"436":1,"437":0,"438":0,"439":1,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":1,"451":0,"452":1,"453":0,"454":1,"455":0,"456":1,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":1,"466":1,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":1,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0},"b":{"1":[0,0,0],"2":[0,0,0,0,0,0,0,0,0],"3":[0,0,0,0,0],"4":[0,0],"5":[0,0,0,0,0,0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0,0,0,0,0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0,0,0],"38":[0,0,0,0,0,0,0],"39":[0,0,0,0,0],"40":[0,0],"41":[0,0,0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0,0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0,0,0],"55":[0,0],"56":[0,0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0,0],"61":[0,0,0,0,0],"62":[0,0],"63":[0,0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0,0,0,0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0,0,0,0,0,0,0,0,0,0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0},"fnMap":{"1":{"name":"match","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":40}}},"2":{"name":"matchMaterialShowModalOpen","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":42}}},"3":{"name":"matchDirectiveReturnObject","line":70,"loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":42}}},"4":{"name":"limit","line":79,"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":27}}},"5":{"name":"matchProviderGet","line":86,"loc":{"start":{"line":86,"column":0},"end":{"line":86,"column":32}}},"6":{"name":"matchNgRoute","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":28}}},"7":{"name":"matchNgUi","line":139,"loc":{"start":{"line":139,"column":0},"end":{"line":139,"column":25}}},"8":{"name":"recursiveMatch","line":201,"loc":{"start":{"line":201,"column":4},"end":{"line":201,"column":50}}},"9":{"name":"matchStateProps","line":219,"loc":{"start":{"line":219,"column":4},"end":{"line":219,"column":41}}},"10":{"name":"(anonymous_10)","line":235,"loc":{"start":{"line":235,"column":33},"end":{"line":235,"column":48}}},"11":{"name":"(anonymous_11)","line":247,"loc":{"start":{"line":247,"column":42},"end":{"line":247,"column":57}}},"12":{"name":"matchInjectorInvoke","line":259,"loc":{"start":{"line":259,"column":0},"end":{"line":259,"column":35}}},"13":{"name":"matchHttpProvider","line":272,"loc":{"start":{"line":272,"column":0},"end":{"line":272,"column":33}}},"14":{"name":"matchControllerProvider","line":287,"loc":{"start":{"line":287,"column":0},"end":{"line":287,"column":39}}},"15":{"name":"matchProvide","line":305,"loc":{"start":{"line":305,"column":0},"end":{"line":305,"column":33}}},"16":{"name":"matchRegular","line":332,"loc":{"start":{"line":332,"column":0},"end":{"line":332,"column":33}}},"17":{"name":"isReDef","line":395,"loc":{"start":{"line":395,"column":0},"end":{"line":395,"column":28}}},"18":{"name":"isLongDef","line":400,"loc":{"start":{"line":400,"column":0},"end":{"line":400,"column":25}}},"19":{"name":"last","line":406,"loc":{"start":{"line":406,"column":0},"end":{"line":406,"column":19}}},"20":{"name":"matchProp","line":410,"loc":{"start":{"line":410,"column":0},"end":{"line":410,"column":32}}},"21":{"name":"matchResolve","line":421,"loc":{"start":{"line":421,"column":0},"end":{"line":421,"column":29}}},"22":{"name":"(anonymous_22)","line":424,"loc":{"start":{"line":424,"column":44},"end":{"line":424,"column":59}}},"23":{"name":"renamedString","line":431,"loc":{"start":{"line":431,"column":0},"end":{"line":431,"column":44}}},"24":{"name":"stringify","line":438,"loc":{"start":{"line":438,"column":0},"end":{"line":438,"column":35}}},"25":{"name":"(anonymous_25)","line":439,"loc":{"start":{"line":439,"column":25},"end":{"line":439,"column":39}}},"26":{"name":"parseExpressionOfType","line":444,"loc":{"start":{"line":444,"column":0},"end":{"line":444,"column":42}}},"27":{"name":"replaceNodeWith","line":451,"loc":{"start":{"line":451,"column":0},"end":{"line":451,"column":40}}},"28":{"name":"(anonymous_28)","line":455,"loc":{"start":{"line":455,"column":17},"end":{"line":455,"column":31}}},"29":{"name":"(anonymous_29)","line":467,"loc":{"start":{"line":467,"column":17},"end":{"line":467,"column":31}}},"30":{"name":"insertArray","line":482,"loc":{"start":{"line":482,"column":0},"end":{"line":482,"column":63}}},"31":{"name":"replaceArray","line":505,"loc":{"start":{"line":505,"column":0},"end":{"line":505,"column":51}}},"32":{"name":"removeArray","line":524,"loc":{"start":{"line":524,"column":0},"end":{"line":524,"column":39}}},"33":{"name":"renameProviderDeclarationSite","line":547,"loc":{"start":{"line":547,"column":0},"end":{"line":547,"column":68}}},"34":{"name":"judgeSuspects","line":564,"loc":{"start":{"line":564,"column":0},"end":{"line":564,"column":28}}},"35":{"name":"(anonymous_35)","line":582,"loc":{"start":{"line":582,"column":48},"end":{"line":582,"column":65}}},"36":{"name":"(anonymous_36)","line":597,"loc":{"start":{"line":597,"column":26},"end":{"line":597,"column":43}}},"37":{"name":"propagateModuleContextAndMethodName","line":617,"loc":{"start":{"line":617,"column":4},"end":{"line":617,"column":59}}},"38":{"name":"(anonymous_38)","line":618,"loc":{"start":{"line":618,"column":25},"end":{"line":618,"column":42}}},"39":{"name":"findOuterMethodName","line":632,"loc":{"start":{"line":632,"column":4},"end":{"line":632,"column":39}}},"40":{"name":"setChainedAndMethodNameThroughIifesAndReferences","line":638,"loc":{"start":{"line":638,"column":4},"end":{"line":638,"column":72}}},"41":{"name":"(anonymous_41)","line":640,"loc":{"start":{"line":640,"column":25},"end":{"line":640,"column":42}}},"42":{"name":"isInsideModuleContext","line":668,"loc":{"start":{"line":668,"column":4},"end":{"line":668,"column":41}}},"43":{"name":"makeUnique","line":675,"loc":{"start":{"line":675,"column":4},"end":{"line":675,"column":39}}},"44":{"name":"(anonymous_44)","line":676,"loc":{"start":{"line":676,"column":31},"end":{"line":676,"column":48}}},"45":{"name":"followReference","line":686,"loc":{"start":{"line":686,"column":0},"end":{"line":686,"column":31}}},"46":{"name":"posToLine","line":723,"loc":{"start":{"line":723,"column":0},"end":{"line":723,"column":29}}},"47":{"name":"firstNonPrologueStatement","line":742,"loc":{"start":{"line":742,"column":0},"end":{"line":742,"column":41}}},"48":{"name":"judgeInjectArraySuspect","line":757,"loc":{"start":{"line":757,"column":0},"end":{"line":757,"column":44}}},"49":{"name":"getIndent","line":842,"loc":{"start":{"line":842,"column":4},"end":{"line":842,"column":28}}},"50":{"name":"addRemoveInjectArray","line":851,"loc":{"start":{"line":851,"column":4},"end":{"line":851,"column":77}}},"51":{"name":"(anonymous_51)","line":859,"loc":{"start":{"line":859,"column":35},"end":{"line":859,"column":56}}},"52":{"name":"hasInjectArray","line":891,"loc":{"start":{"line":891,"column":8},"end":{"line":891,"column":38}}},"53":{"name":"skipPrevNewline","line":901,"loc":{"start":{"line":901,"column":8},"end":{"line":901,"column":43}}},"54":{"name":"jumpOverIife","line":960,"loc":{"start":{"line":960,"column":0},"end":{"line":960,"column":28}}},"55":{"name":"addModuleContextDependentSuspect","line":977,"loc":{"start":{"line":977,"column":0},"end":{"line":977,"column":55}}},"56":{"name":"addModuleContextIndependentSuspect","line":981,"loc":{"start":{"line":981,"column":0},"end":{"line":981,"column":57}}},"57":{"name":"isAnnotatedArray","line":986,"loc":{"start":{"line":986,"column":0},"end":{"line":986,"column":32}}},"58":{"name":"isFunctionExpressionWithArgs","line":1007,"loc":{"start":{"line":1007,"column":0},"end":{"line":1007,"column":44}}},"59":{"name":"isFunctionDeclarationWithArgs","line":1010,"loc":{"start":{"line":1010,"column":0},"end":{"line":1010,"column":45}}},"60":{"name":"isGenericProviderName","line":1013,"loc":{"start":{"line":1013,"column":0},"end":{"line":1013,"column":37}}},"61":{"name":"uniqifyFragments","line":1017,"loc":{"start":{"line":1017,"column":0},"end":{"line":1017,"column":37}}},"62":{"name":"ngAnnotate","line":1037,"loc":{"start":{"line":1037,"column":17},"end":{"line":1037,"column":51}}},"63":{"name":"(anonymous_63)","line":1056,"loc":{"start":{"line":1056,"column":31},"end":{"line":1056,"column":47}}},"64":{"name":"(anonymous_64)","line":1129,"loc":{"start":{"line":1129,"column":21},"end":{"line":1129,"column":37}}},"65":{"name":"(anonymous_65)","line":1161,"loc":{"start":{"line":1161,"column":41},"end":{"line":1161,"column":60}}},"66":{"name":"matchPlugins","line":1167,"loc":{"start":{"line":1167,"column":4},"end":{"line":1167,"column":46}}},"67":{"name":"(anonymous_67)","line":1179,"loc":{"start":{"line":1179,"column":20},"end":{"line":1179,"column":37}}},"68":{"name":"(anonymous_68)","line":1183,"loc":{"start":{"line":1183,"column":24},"end":{"line":1183,"column":39}}},"69":{"name":"(anonymous_69)","line":1186,"loc":{"start":{"line":1186,"column":13},"end":{"line":1186,"column":28}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":28}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":56}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":91}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":34}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":34}},"16":{"start":{"line":22,"column":0},"end":{"line":22,"column":29}},"17":{"start":{"line":23,"column":0},"end":{"line":23,"column":33}},"18":{"start":{"line":24,"column":0},"end":{"line":24,"column":29}},"19":{"start":{"line":25,"column":0},"end":{"line":25,"column":23}},"20":{"start":{"line":27,"column":0},"end":{"line":45,"column":1}},"21":{"start":{"line":28,"column":4},"end":{"line":32,"column":10}},"22":{"start":{"line":38,"column":4},"end":{"line":39,"column":228}},"23":{"start":{"line":41,"column":4},"end":{"line":44,"column":31}},"24":{"start":{"line":47,"column":0},"end":{"line":68,"column":1}},"25":{"start":{"line":54,"column":4},"end":{"line":54,"column":29}},"26":{"start":{"line":55,"column":4},"end":{"line":55,"column":28}},"27":{"start":{"line":56,"column":4},"end":{"line":56,"column":33}},"28":{"start":{"line":57,"column":4},"end":{"line":57,"column":30}},"29":{"start":{"line":59,"column":4},"end":{"line":66,"column":5}},"30":{"start":{"line":62,"column":8},"end":{"line":62,"column":39}},"31":{"start":{"line":63,"column":8},"end":{"line":63,"column":51}},"32":{"start":{"line":64,"column":8},"end":{"line":64,"column":49}},"33":{"start":{"line":65,"column":8},"end":{"line":65,"column":35}},"34":{"start":{"line":67,"column":4},"end":{"line":67,"column":17}},"35":{"start":{"line":70,"column":0},"end":{"line":77,"column":1}},"36":{"start":{"line":74,"column":4},"end":{"line":76,"column":59}},"37":{"start":{"line":79,"column":0},"end":{"line":84,"column":1}},"38":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"39":{"start":{"line":81,"column":8},"end":{"line":81,"column":39}},"40":{"start":{"line":83,"column":4},"end":{"line":83,"column":16}},"41":{"start":{"line":86,"column":0},"end":{"line":97,"column":1}},"42":{"start":{"line":90,"column":4},"end":{"line":90,"column":19}},"43":{"start":{"line":91,"column":4},"end":{"line":91,"column":13}},"44":{"start":{"line":92,"column":4},"end":{"line":96,"column":82}},"45":{"start":{"line":99,"column":0},"end":{"line":137,"column":1}},"46":{"start":{"line":107,"column":4},"end":{"line":107,"column":29}},"47":{"start":{"line":108,"column":4},"end":{"line":108,"column":28}},"48":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"49":{"start":{"line":110,"column":8},"end":{"line":110,"column":21}},"50":{"start":{"line":112,"column":4},"end":{"line":112,"column":41}},"51":{"start":{"line":114,"column":4},"end":{"line":114,"column":33}},"52":{"start":{"line":115,"column":4},"end":{"line":117,"column":5}},"53":{"start":{"line":116,"column":8},"end":{"line":116,"column":21}},"54":{"start":{"line":119,"column":4},"end":{"line":119,"column":30}},"55":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"56":{"start":{"line":121,"column":8},"end":{"line":121,"column":21}},"57":{"start":{"line":123,"column":4},"end":{"line":123,"column":30}},"58":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"59":{"start":{"line":125,"column":8},"end":{"line":125,"column":21}},"60":{"start":{"line":128,"column":4},"end":{"line":128,"column":37}},"61":{"start":{"line":129,"column":4},"end":{"line":131,"column":6}},"62":{"start":{"line":133,"column":4},"end":{"line":133,"column":45}},"63":{"start":{"line":135,"column":4},"end":{"line":135,"column":42}},"64":{"start":{"line":136,"column":4},"end":{"line":136,"column":60}},"65":{"start":{"line":139,"column":0},"end":{"line":257,"column":1}},"66":{"start":{"line":160,"column":4},"end":{"line":160,"column":29}},"67":{"start":{"line":161,"column":4},"end":{"line":161,"column":28}},"68":{"start":{"line":162,"column":4},"end":{"line":162,"column":33}},"69":{"start":{"line":163,"column":4},"end":{"line":163,"column":30}},"70":{"start":{"line":166,"column":4},"end":{"line":173,"column":5}},"71":{"start":{"line":167,"column":8},"end":{"line":167,"column":49}},"72":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"73":{"start":{"line":170,"column":12},"end":{"line":170,"column":30}},"74":{"start":{"line":172,"column":8},"end":{"line":172,"column":21}},"75":{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},"76":{"start":{"line":177,"column":8},"end":{"line":177,"column":21}},"77":{"start":{"line":179,"column":4},"end":{"line":179,"column":41}},"78":{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},"79":{"start":{"line":182,"column":8},"end":{"line":182,"column":21}},"80":{"start":{"line":187,"column":4},"end":{"line":189,"column":5}},"81":{"start":{"line":188,"column":8},"end":{"line":188,"column":21}},"82":{"start":{"line":191,"column":4},"end":{"line":191,"column":69}},"83":{"start":{"line":193,"column":4},"end":{"line":193,"column":17}},"84":{"start":{"line":195,"column":4},"end":{"line":195,"column":30}},"85":{"start":{"line":197,"column":4},"end":{"line":197,"column":42}},"86":{"start":{"line":198,"column":4},"end":{"line":198,"column":60}},"87":{"start":{"line":201,"column":4},"end":{"line":217,"column":5}},"88":{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},"89":{"start":{"line":203,"column":12},"end":{"line":203,"column":25}},"90":{"start":{"line":206,"column":8},"end":{"line":206,"column":57}},"91":{"start":{"line":208,"column":8},"end":{"line":208,"column":41}},"92":{"start":{"line":210,"column":8},"end":{"line":210,"column":72}},"93":{"start":{"line":211,"column":8},"end":{"line":211,"column":83}},"94":{"start":{"line":213,"column":8},"end":{"line":215,"column":9}},"95":{"start":{"line":214,"column":12},"end":{"line":214,"column":19}},"96":{"start":{"line":216,"column":8},"end":{"line":216,"column":41}},"97":{"start":{"line":219,"column":4},"end":{"line":256,"column":5}},"98":{"start":{"line":220,"column":8},"end":{"line":226,"column":10}},"99":{"start":{"line":227,"column":8},"end":{"line":227,"column":36}},"100":{"start":{"line":230,"column":8},"end":{"line":230,"column":49}},"101":{"start":{"line":233,"column":8},"end":{"line":233,"column":43}},"102":{"start":{"line":234,"column":8},"end":{"line":242,"column":9}},"103":{"start":{"line":235,"column":12},"end":{"line":241,"column":15}},"104":{"start":{"line":236,"column":16},"end":{"line":240,"column":17}},"105":{"start":{"line":237,"column":20},"end":{"line":237,"column":72}},"106":{"start":{"line":239,"column":20},"end":{"line":239,"column":41}},"107":{"start":{"line":245,"column":8},"end":{"line":245,"column":51}},"108":{"start":{"line":246,"column":8},"end":{"line":255,"column":9}},"109":{"start":{"line":247,"column":12},"end":{"line":254,"column":15}},"110":{"start":{"line":248,"column":16},"end":{"line":253,"column":17}},"111":{"start":{"line":249,"column":20},"end":{"line":249,"column":77}},"112":{"start":{"line":250,"column":20},"end":{"line":250,"column":85}},"113":{"start":{"line":251,"column":20},"end":{"line":251,"column":83}},"114":{"start":{"line":252,"column":20},"end":{"line":252,"column":77}},"115":{"start":{"line":259,"column":0},"end":{"line":270,"column":1}},"116":{"start":{"line":263,"column":4},"end":{"line":263,"column":29}},"117":{"start":{"line":264,"column":4},"end":{"line":264,"column":28}},"118":{"start":{"line":265,"column":4},"end":{"line":265,"column":33}},"119":{"start":{"line":267,"column":4},"end":{"line":269,"column":53}},"120":{"start":{"line":272,"column":0},"end":{"line":285,"column":1}},"121":{"start":{"line":277,"column":4},"end":{"line":277,"column":29}},"122":{"start":{"line":278,"column":4},"end":{"line":278,"column":28}},"123":{"start":{"line":279,"column":4},"end":{"line":279,"column":33}},"124":{"start":{"line":281,"column":4},"end":{"line":284,"column":54}},"125":{"start":{"line":287,"column":0},"end":{"line":303,"column":1}},"126":{"start":{"line":291,"column":4},"end":{"line":291,"column":29}},"127":{"start":{"line":292,"column":4},"end":{"line":292,"column":28}},"128":{"start":{"line":293,"column":4},"end":{"line":293,"column":33}},"129":{"start":{"line":294,"column":4},"end":{"line":294,"column":30}},"130":{"start":{"line":296,"column":4},"end":{"line":297,"column":67}},"131":{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},"132":{"start":{"line":300,"column":8},"end":{"line":300,"column":41}},"133":{"start":{"line":302,"column":4},"end":{"line":302,"column":18}},"134":{"start":{"line":305,"column":0},"end":{"line":330,"column":1}},"135":{"start":{"line":312,"column":4},"end":{"line":312,"column":29}},"136":{"start":{"line":313,"column":4},"end":{"line":313,"column":28}},"137":{"start":{"line":314,"column":4},"end":{"line":314,"column":33}},"138":{"start":{"line":315,"column":4},"end":{"line":315,"column":30}},"139":{"start":{"line":317,"column":4},"end":{"line":319,"column":37}},"140":{"start":{"line":321,"column":4},"end":{"line":328,"column":5}},"141":{"start":{"line":322,"column":8},"end":{"line":322,"column":41}},"142":{"start":{"line":324,"column":8},"end":{"line":327,"column":9}},"143":{"start":{"line":326,"column":12},"end":{"line":326,"column":24}},"144":{"start":{"line":329,"column":4},"end":{"line":329,"column":18}},"145":{"start":{"line":332,"column":0},"end":{"line":388,"column":1}},"146":{"start":{"line":334,"column":4},"end":{"line":334,"column":29}},"147":{"start":{"line":335,"column":4},"end":{"line":335,"column":28}},"148":{"start":{"line":336,"column":4},"end":{"line":336,"column":33}},"149":{"start":{"line":340,"column":4},"end":{"line":346,"column":5}},"150":{"start":{"line":341,"column":8},"end":{"line":341,"column":36}},"151":{"start":{"line":342,"column":8},"end":{"line":345,"column":9}},"152":{"start":{"line":343,"column":12},"end":{"line":343,"column":43}},"153":{"start":{"line":344,"column":12},"end":{"line":344,"column":32}},"154":{"start":{"line":350,"column":4},"end":{"line":352,"column":5}},"155":{"start":{"line":351,"column":8},"end":{"line":351,"column":21}},"156":{"start":{"line":354,"column":4},"end":{"line":355,"column":213}},"157":{"start":{"line":356,"column":4},"end":{"line":358,"column":5}},"158":{"start":{"line":357,"column":8},"end":{"line":357,"column":21}},"159":{"start":{"line":359,"column":4},"end":{"line":359,"column":35}},"160":{"start":{"line":361,"column":4},"end":{"line":363,"column":5}},"161":{"start":{"line":362,"column":8},"end":{"line":362,"column":21}},"162":{"start":{"line":365,"column":4},"end":{"line":365,"column":30}},"163":{"start":{"line":366,"column":4},"end":{"line":368,"column":96}},"164":{"start":{"line":370,"column":4},"end":{"line":376,"column":5}},"165":{"start":{"line":371,"column":8},"end":{"line":371,"column":122}},"166":{"start":{"line":372,"column":8},"end":{"line":374,"column":9}},"167":{"start":{"line":373,"column":12},"end":{"line":373,"column":25}},"168":{"start":{"line":375,"column":8},"end":{"line":375,"column":32}},"169":{"start":{"line":378,"column":4},"end":{"line":380,"column":5}},"170":{"start":{"line":379,"column":8},"end":{"line":379,"column":41}},"171":{"start":{"line":382,"column":4},"end":{"line":386,"column":5}},"172":{"start":{"line":384,"column":8},"end":{"line":384,"column":43}},"173":{"start":{"line":385,"column":8},"end":{"line":385,"column":46}},"174":{"start":{"line":387,"column":4},"end":{"line":387,"column":18}},"175":{"start":{"line":395,"column":0},"end":{"line":397,"column":1}},"176":{"start":{"line":396,"column":4},"end":{"line":396,"column":52}},"177":{"start":{"line":400,"column":0},"end":{"line":404,"column":1}},"178":{"start":{"line":401,"column":4},"end":{"line":403,"column":71}},"179":{"start":{"line":406,"column":0},"end":{"line":408,"column":1}},"180":{"start":{"line":407,"column":4},"end":{"line":407,"column":31}},"181":{"start":{"line":410,"column":0},"end":{"line":419,"column":1}},"182":{"start":{"line":411,"column":4},"end":{"line":417,"column":5}},"183":{"start":{"line":412,"column":8},"end":{"line":412,"column":28}},"184":{"start":{"line":413,"column":8},"end":{"line":416,"column":9}},"185":{"start":{"line":415,"column":12},"end":{"line":415,"column":30}},"186":{"start":{"line":418,"column":4},"end":{"line":418,"column":16}},"187":{"start":{"line":421,"column":0},"end":{"line":429,"column":1}},"188":{"start":{"line":422,"column":4},"end":{"line":422,"column":52}},"189":{"start":{"line":423,"column":4},"end":{"line":427,"column":5}},"190":{"start":{"line":424,"column":8},"end":{"line":426,"column":11}},"191":{"start":{"line":425,"column":12},"end":{"line":425,"column":30}},"192":{"start":{"line":428,"column":4},"end":{"line":428,"column":14}},"193":{"start":{"line":431,"column":0},"end":{"line":436,"column":1}},"194":{"start":{"line":432,"column":4},"end":{"line":434,"column":5}},"195":{"start":{"line":433,"column":8},"end":{"line":433,"column":64}},"196":{"start":{"line":435,"column":4},"end":{"line":435,"column":26}},"197":{"start":{"line":438,"column":0},"end":{"line":442,"column":1}},"198":{"start":{"line":439,"column":4},"end":{"line":441,"column":24}},"199":{"start":{"line":440,"column":8},"end":{"line":440,"column":58}},"200":{"start":{"line":444,"column":0},"end":{"line":448,"column":1}},"201":{"start":{"line":445,"column":4},"end":{"line":445,"column":46}},"202":{"start":{"line":446,"column":4},"end":{"line":446,"column":31}},"203":{"start":{"line":447,"column":4},"end":{"line":447,"column":16}},"204":{"start":{"line":451,"column":0},"end":{"line":480,"column":1}},"205":{"start":{"line":452,"column":4},"end":{"line":452,"column":21}},"206":{"start":{"line":453,"column":4},"end":{"line":453,"column":30}},"207":{"start":{"line":454,"column":4},"end":{"line":454,"column":35}},"208":{"start":{"line":455,"column":4},"end":{"line":460,"column":7}},"209":{"start":{"line":456,"column":8},"end":{"line":459,"column":9}},"210":{"start":{"line":457,"column":12},"end":{"line":457,"column":34}},"211":{"start":{"line":458,"column":12},"end":{"line":458,"column":24}},"212":{"start":{"line":462,"column":4},"end":{"line":464,"column":5}},"213":{"start":{"line":463,"column":8},"end":{"line":463,"column":15}},"214":{"start":{"line":467,"column":4},"end":{"line":477,"column":7}},"215":{"start":{"line":468,"column":8},"end":{"line":476,"column":9}},"216":{"start":{"line":469,"column":12},"end":{"line":469,"column":34}},"217":{"start":{"line":470,"column":12},"end":{"line":475,"column":13}},"218":{"start":{"line":471,"column":16},"end":{"line":474,"column":17}},"219":{"start":{"line":472,"column":20},"end":{"line":472,"column":37}},"220":{"start":{"line":473,"column":20},"end":{"line":473,"column":32}},"221":{"start":{"line":479,"column":4},"end":{"line":479,"column":17}},"222":{"start":{"line":482,"column":0},"end":{"line":503,"column":1}},"223":{"start":{"line":483,"column":4},"end":{"line":483,"column":63}},"224":{"start":{"line":485,"column":4},"end":{"line":493,"column":7}},"225":{"start":{"line":494,"column":4},"end":{"line":502,"column":7}},"226":{"start":{"line":505,"column":0},"end":{"line":522,"column":1}},"227":{"start":{"line":506,"column":4},"end":{"line":506,"column":50}},"228":{"start":{"line":508,"column":4},"end":{"line":510,"column":5}},"229":{"start":{"line":509,"column":8},"end":{"line":509,"column":45}},"230":{"start":{"line":512,"column":4},"end":{"line":512,"column":63}},"231":{"start":{"line":513,"column":4},"end":{"line":521,"column":7}},"232":{"start":{"line":524,"column":0},"end":{"line":545,"column":1}},"233":{"start":{"line":525,"column":4},"end":{"line":525,"column":50}},"234":{"start":{"line":527,"column":4},"end":{"line":535,"column":7}},"235":{"start":{"line":536,"column":4},"end":{"line":544,"column":7}},"236":{"start":{"line":547,"column":0},"end":{"line":562,"column":1}},"237":{"start":{"line":548,"column":4},"end":{"line":561,"column":7}},"238":{"start":{"line":564,"column":0},"end":{"line":684,"column":1}},"239":{"start":{"line":565,"column":4},"end":{"line":565,"column":24}},"240":{"start":{"line":566,"column":4},"end":{"line":566,"column":34}},"241":{"start":{"line":567,"column":4},"end":{"line":567,"column":24}},"242":{"start":{"line":568,"column":4},"end":{"line":568,"column":30}},"243":{"start":{"line":570,"column":4},"end":{"line":570,"column":47}},"244":{"start":{"line":572,"column":4},"end":{"line":579,"column":5}},"245":{"start":{"line":575,"column":8},"end":{"line":575,"column":54}},"246":{"start":{"line":576,"column":8},"end":{"line":578,"column":9}},"247":{"start":{"line":577,"column":12},"end":{"line":577,"column":18}},"248":{"start":{"line":582,"column":4},"end":{"line":595,"column":27}},"249":{"start":{"line":583,"column":8},"end":{"line":583,"column":42}},"250":{"start":{"line":584,"column":8},"end":{"line":584,"column":66}},"251":{"start":{"line":586,"column":8},"end":{"line":588,"column":9}},"252":{"start":{"line":587,"column":12},"end":{"line":587,"column":24}},"253":{"start":{"line":590,"column":8},"end":{"line":592,"column":9}},"254":{"start":{"line":591,"column":12},"end":{"line":591,"column":24}},"255":{"start":{"line":594,"column":8},"end":{"line":594,"column":33}},"256":{"start":{"line":597,"column":4},"end":{"line":614,"column":7}},"257":{"start":{"line":598,"column":8},"end":{"line":600,"column":9}},"258":{"start":{"line":599,"column":12},"end":{"line":599,"column":19}},"259":{"start":{"line":602,"column":8},"end":{"line":613,"column":9}},"260":{"start":{"line":603,"column":12},"end":{"line":603,"column":55}},"261":{"start":{"line":604,"column":15},"end":{"line":613,"column":9}},"262":{"start":{"line":605,"column":12},"end":{"line":605,"column":43}},"263":{"start":{"line":606,"column":15},"end":{"line":613,"column":9}},"264":{"start":{"line":607,"column":12},"end":{"line":607,"column":54}},"265":{"start":{"line":608,"column":15},"end":{"line":613,"column":9}},"266":{"start":{"line":609,"column":12},"end":{"line":609,"column":66}},"267":{"start":{"line":612,"column":12},"end":{"line":612,"column":49}},"268":{"start":{"line":617,"column":4},"end":{"line":630,"column":5}},"269":{"start":{"line":618,"column":8},"end":{"line":629,"column":11}},"270":{"start":{"line":619,"column":12},"end":{"line":621,"column":13}},"271":{"start":{"line":620,"column":16},"end":{"line":620,"column":49}},"272":{"start":{"line":623,"column":12},"end":{"line":628,"column":13}},"273":{"start":{"line":624,"column":16},"end":{"line":624,"column":61}},"274":{"start":{"line":625,"column":16},"end":{"line":627,"column":17}},"275":{"start":{"line":626,"column":20},"end":{"line":626,"column":52}},"276":{"start":{"line":632,"column":4},"end":{"line":636,"column":5}},"277":{"start":{"line":633,"column":8},"end":{"line":634,"column":9}},"278":{"start":{"line":635,"column":8},"end":{"line":635,"column":46}},"279":{"start":{"line":638,"column":4},"end":{"line":666,"column":5}},"280":{"start":{"line":639,"column":8},"end":{"line":639,"column":29}},"281":{"start":{"line":640,"column":8},"end":{"line":664,"column":11}},"282":{"start":{"line":641,"column":12},"end":{"line":641,"column":46}},"283":{"start":{"line":642,"column":12},"end":{"line":651,"column":13}},"284":{"start":{"line":643,"column":16},"end":{"line":646,"column":17}},"285":{"start":{"line":644,"column":20},"end":{"line":644,"column":36}},"286":{"start":{"line":645,"column":20},"end":{"line":645,"column":53}},"287":{"start":{"line":647,"column":16},"end":{"line":650,"column":17}},"288":{"start":{"line":648,"column":20},"end":{"line":648,"column":36}},"289":{"start":{"line":649,"column":20},"end":{"line":649,"column":60}},"290":{"start":{"line":653,"column":12},"end":{"line":653,"column":70}},"291":{"start":{"line":654,"column":12},"end":{"line":663,"column":13}},"292":{"start":{"line":655,"column":16},"end":{"line":658,"column":17}},"293":{"start":{"line":656,"column":20},"end":{"line":656,"column":36}},"294":{"start":{"line":657,"column":20},"end":{"line":657,"column":64}},"295":{"start":{"line":659,"column":16},"end":{"line":662,"column":17}},"296":{"start":{"line":660,"column":20},"end":{"line":660,"column":36}},"297":{"start":{"line":661,"column":20},"end":{"line":661,"column":71}},"298":{"start":{"line":665,"column":8},"end":{"line":665,"column":24}},"299":{"start":{"line":668,"column":4},"end":{"line":673,"column":5}},"300":{"start":{"line":669,"column":8},"end":{"line":669,"column":35}},"301":{"start":{"line":670,"column":8},"end":{"line":671,"column":9}},"302":{"start":{"line":672,"column":8},"end":{"line":672,"column":32}},"303":{"start":{"line":675,"column":4},"end":{"line":683,"column":5}},"304":{"start":{"line":676,"column":8},"end":{"line":682,"column":11}},"305":{"start":{"line":677,"column":12},"end":{"line":679,"column":13}},"306":{"start":{"line":678,"column":16},"end":{"line":678,"column":29}},"307":{"start":{"line":680,"column":12},"end":{"line":680,"column":31}},"308":{"start":{"line":681,"column":12},"end":{"line":681,"column":24}},"309":{"start":{"line":686,"column":0},"end":{"line":720,"column":1}},"310":{"start":{"line":687,"column":4},"end":{"line":689,"column":5}},"311":{"start":{"line":688,"column":8},"end":{"line":688,"column":20}},"312":{"start":{"line":691,"column":4},"end":{"line":691,"column":46}},"313":{"start":{"line":692,"column":4},"end":{"line":694,"column":5}},"314":{"start":{"line":693,"column":8},"end":{"line":693,"column":20}},"315":{"start":{"line":696,"column":4},"end":{"line":696,"column":50}},"316":{"start":{"line":697,"column":4},"end":{"line":697,"column":40}},"317":{"start":{"line":698,"column":4},"end":{"line":700,"column":5}},"318":{"start":{"line":699,"column":8},"end":{"line":699,"column":20}},"319":{"start":{"line":701,"column":4},"end":{"line":701,"column":28}},"320":{"start":{"line":703,"column":4},"end":{"line":715,"column":5}},"321":{"start":{"line":704,"column":8},"end":{"line":704,"column":47}},"322":{"start":{"line":706,"column":8},"end":{"line":706,"column":22}},"323":{"start":{"line":707,"column":11},"end":{"line":715,"column":5}},"324":{"start":{"line":708,"column":8},"end":{"line":708,"column":81}},"325":{"start":{"line":714,"column":8},"end":{"line":714,"column":22}},"326":{"start":{"line":719,"column":4},"end":{"line":719,"column":16}},"327":{"start":{"line":723,"column":0},"end":{"line":740,"column":1}},"328":{"start":{"line":724,"column":4},"end":{"line":726,"column":5}},"329":{"start":{"line":725,"column":8},"end":{"line":725,"column":29}},"330":{"start":{"line":728,"column":4},"end":{"line":730,"column":5}},"331":{"start":{"line":729,"column":8},"end":{"line":729,"column":18}},"332":{"start":{"line":732,"column":4},"end":{"line":732,"column":17}},"333":{"start":{"line":733,"column":4},"end":{"line":737,"column":5}},"334":{"start":{"line":734,"column":8},"end":{"line":736,"column":9}},"335":{"start":{"line":735,"column":12},"end":{"line":735,"column":19}},"336":{"start":{"line":739,"column":4},"end":{"line":739,"column":16}},"337":{"start":{"line":742,"column":0},"end":{"line":755,"column":1}},"338":{"start":{"line":743,"column":4},"end":{"line":753,"column":5}},"339":{"start":{"line":744,"column":8},"end":{"line":746,"column":9}},"340":{"start":{"line":745,"column":12},"end":{"line":745,"column":27}},"341":{"start":{"line":748,"column":8},"end":{"line":748,"column":38}},"342":{"start":{"line":749,"column":8},"end":{"line":749,"column":90}},"343":{"start":{"line":750,"column":8},"end":{"line":752,"column":9}},"344":{"start":{"line":751,"column":12},"end":{"line":751,"column":27}},"345":{"start":{"line":754,"column":4},"end":{"line":754,"column":16}},"346":{"start":{"line":757,"column":0},"end":{"line":958,"column":1}},"347":{"start":{"line":758,"column":4},"end":{"line":773,"column":5}},"348":{"start":{"line":765,"column":8},"end":{"line":768,"column":9}},"349":{"start":{"line":767,"column":12},"end":{"line":767,"column":19}},"350":{"start":{"line":772,"column":8},"end":{"line":772,"column":36}},"351":{"start":{"line":777,"column":4},"end":{"line":777,"column":21}},"352":{"start":{"line":778,"column":4},"end":{"line":778,"column":30}},"353":{"start":{"line":779,"column":4},"end":{"line":785,"column":5}},"354":{"start":{"line":780,"column":8},"end":{"line":780,"column":29}},"355":{"start":{"line":781,"column":8},"end":{"line":781,"column":38}},"356":{"start":{"line":782,"column":8},"end":{"line":782,"column":25}},"357":{"start":{"line":784,"column":8},"end":{"line":784,"column":21}},"358":{"start":{"line":788,"column":4},"end":{"line":790,"column":5}},"359":{"start":{"line":789,"column":8},"end":{"line":789,"column":15}},"360":{"start":{"line":792,"column":4},"end":{"line":795,"column":6}},"361":{"start":{"line":796,"column":4},"end":{"line":796,"column":69}},"362":{"start":{"line":798,"column":4},"end":{"line":798,"column":30}},"363":{"start":{"line":800,"column":4},"end":{"line":839,"column":5}},"364":{"start":{"line":803,"column":8},"end":{"line":803,"column":31}},"365":{"start":{"line":804,"column":8},"end":{"line":810,"column":28}},"366":{"start":{"line":812,"column":11},"end":{"line":839,"column":5}},"367":{"start":{"line":815,"column":8},"end":{"line":818,"column":26}},"368":{"start":{"line":820,"column":11},"end":{"line":839,"column":5}},"369":{"start":{"line":824,"column":8},"end":{"line":824,"column":63}},"370":{"start":{"line":825,"column":8},"end":{"line":831,"column":18}},"371":{"start":{"line":833,"column":11},"end":{"line":839,"column":5}},"372":{"start":{"line":838,"column":8},"end":{"line":838,"column":43}},"373":{"start":{"line":842,"column":4},"end":{"line":849,"column":5}},"374":{"start":{"line":843,"column":8},"end":{"line":843,"column":26}},"375":{"start":{"line":844,"column":8},"end":{"line":844,"column":59}},"376":{"start":{"line":845,"column":8},"end":{"line":845,"column":26}},"377":{"start":{"line":846,"column":8},"end":{"line":847,"column":9}},"378":{"start":{"line":848,"column":8},"end":{"line":848,"column":39}},"379":{"start":{"line":851,"column":4},"end":{"line":957,"column":5}},"380":{"start":{"line":854,"column":8},"end":{"line":854,"column":64}},"381":{"start":{"line":856,"column":8},"end":{"line":856,"column":39}},"382":{"start":{"line":857,"column":8},"end":{"line":857,"column":56}},"383":{"start":{"line":858,"column":8},"end":{"line":858,"column":36}},"384":{"start":{"line":859,"column":8},"end":{"line":880,"column":11}},"385":{"start":{"line":860,"column":12},"end":{"line":862,"column":13}},"386":{"start":{"line":861,"column":16},"end":{"line":861,"column":42}},"387":{"start":{"line":864,"column":12},"end":{"line":871,"column":13}},"388":{"start":{"line":865,"column":16},"end":{"line":869,"column":17}},"389":{"start":{"line":866,"column":20},"end":{"line":868,"column":60}},"390":{"start":{"line":870,"column":16},"end":{"line":870,"column":61}},"391":{"start":{"line":873,"column":12},"end":{"line":873,"column":18}},"392":{"start":{"line":874,"column":12},"end":{"line":879,"column":13}},"393":{"start":{"line":875,"column":16},"end":{"line":875,"column":64}},"394":{"start":{"line":876,"column":16},"end":{"line":878,"column":17}},"395":{"start":{"line":877,"column":20},"end":{"line":877,"column":53}},"396":{"start":{"line":881,"column":8},"end":{"line":881,"column":35}},"397":{"start":{"line":882,"column":8},"end":{"line":889,"column":9}},"398":{"start":{"line":883,"column":12},"end":{"line":885,"column":13}},"399":{"start":{"line":884,"column":16},"end":{"line":884,"column":81}},"400":{"start":{"line":886,"column":12},"end":{"line":888,"column":13}},"401":{"start":{"line":887,"column":16},"end":{"line":887,"column":117}},"402":{"start":{"line":891,"column":8},"end":{"line":899,"column":9}},"403":{"start":{"line":892,"column":12},"end":{"line":892,"column":23}},"404":{"start":{"line":893,"column":12},"end":{"line":893,"column":27}},"405":{"start":{"line":894,"column":12},"end":{"line":898,"column":175}},"406":{"start":{"line":901,"column":8},"end":{"line":921,"column":9}},"407":{"start":{"line":902,"column":12},"end":{"line":902,"column":56}},"408":{"start":{"line":903,"column":12},"end":{"line":905,"column":13}},"409":{"start":{"line":904,"column":16},"end":{"line":904,"column":46}},"410":{"start":{"line":906,"column":12},"end":{"line":908,"column":13}},"411":{"start":{"line":907,"column":16},"end":{"line":907,"column":25}},"412":{"start":{"line":910,"column":12},"end":{"line":912,"column":13}},"413":{"start":{"line":911,"column":16},"end":{"line":911,"column":46}},"414":{"start":{"line":914,"column":12},"end":{"line":920,"column":14}},"415":{"start":{"line":923,"column":8},"end":{"line":956,"column":9}},"416":{"start":{"line":924,"column":12},"end":{"line":924,"column":116}},"417":{"start":{"line":925,"column":12},"end":{"line":933,"column":15}},"418":{"start":{"line":934,"column":15},"end":{"line":956,"column":9}},"419":{"start":{"line":935,"column":12},"end":{"line":935,"column":135}},"420":{"start":{"line":936,"column":12},"end":{"line":944,"column":15}},"421":{"start":{"line":945,"column":15},"end":{"line":956,"column":9}},"422":{"start":{"line":946,"column":12},"end":{"line":946,"column":111}},"423":{"start":{"line":947,"column":12},"end":{"line":955,"column":15}},"424":{"start":{"line":960,"column":0},"end":{"line":975,"column":1}},"425":{"start":{"line":961,"column":4},"end":{"line":961,"column":16}},"426":{"start":{"line":962,"column":4},"end":{"line":964,"column":5}},"427":{"start":{"line":963,"column":8},"end":{"line":963,"column":20}},"428":{"start":{"line":966,"column":4},"end":{"line":966,"column":38}},"429":{"start":{"line":967,"column":4},"end":{"line":972,"column":5}},"430":{"start":{"line":968,"column":8},"end":{"line":968,"column":37}},"431":{"start":{"line":969,"column":8},"end":{"line":971,"column":9}},"432":{"start":{"line":970,"column":12},"end":{"line":970,"column":38}},"433":{"start":{"line":974,"column":4},"end":{"line":974,"column":16}},"434":{"start":{"line":977,"column":0},"end":{"line":979,"column":1}},"435":{"start":{"line":978,"column":4},"end":{"line":978,"column":30}},"436":{"start":{"line":981,"column":0},"end":{"line":984,"column":1}},"437":{"start":{"line":982,"column":4},"end":{"line":982,"column":37}},"438":{"start":{"line":983,"column":4},"end":{"line":983,"column":30}},"439":{"start":{"line":986,"column":0},"end":{"line":1006,"column":1}},"440":{"start":{"line":987,"column":4},"end":{"line":989,"column":5}},"441":{"start":{"line":988,"column":8},"end":{"line":988,"column":21}},"442":{"start":{"line":990,"column":4},"end":{"line":990,"column":33}},"443":{"start":{"line":993,"column":4},"end":{"line":995,"column":5}},"444":{"start":{"line":994,"column":8},"end":{"line":994,"column":21}},"445":{"start":{"line":998,"column":4},"end":{"line":1003,"column":5}},"446":{"start":{"line":999,"column":8},"end":{"line":999,"column":28}},"447":{"start":{"line":1000,"column":8},"end":{"line":1002,"column":9}},"448":{"start":{"line":1001,"column":12},"end":{"line":1001,"column":25}},"449":{"start":{"line":1005,"column":4},"end":{"line":1005,"column":16}},"450":{"start":{"line":1007,"column":0},"end":{"line":1009,"column":1}},"451":{"start":{"line":1008,"column":4},"end":{"line":1008,"column":73}},"452":{"start":{"line":1010,"column":0},"end":{"line":1012,"column":1}},"453":{"start":{"line":1011,"column":4},"end":{"line":1011,"column":74}},"454":{"start":{"line":1013,"column":0},"end":{"line":1015,"column":1}},"455":{"start":{"line":1014,"column":4},"end":{"line":1014,"column":60}},"456":{"start":{"line":1017,"column":0},"end":{"line":1031,"column":1}},"457":{"start":{"line":1020,"column":4},"end":{"line":1020,"column":34}},"458":{"start":{"line":1021,"column":4},"end":{"line":1030,"column":5}},"459":{"start":{"line":1022,"column":8},"end":{"line":1022,"column":32}},"460":{"start":{"line":1023,"column":8},"end":{"line":1023,"column":84}},"461":{"start":{"line":1024,"column":8},"end":{"line":1029,"column":9}},"462":{"start":{"line":1025,"column":12},"end":{"line":1025,"column":35}},"463":{"start":{"line":1026,"column":12},"end":{"line":1026,"column":16}},"464":{"start":{"line":1028,"column":12},"end":{"line":1028,"column":28}},"465":{"start":{"line":1033,"column":0},"end":{"line":1035,"column":2}},"466":{"start":{"line":1037,"column":0},"end":{"line":1226,"column":1}},"467":{"start":{"line":1038,"column":4},"end":{"line":1042,"column":5}},"468":{"start":{"line":1039,"column":8},"end":{"line":1041,"column":10}},"469":{"start":{"line":1044,"column":4},"end":{"line":1046,"column":40}},"470":{"start":{"line":1048,"column":4},"end":{"line":1050,"column":5}},"471":{"start":{"line":1049,"column":8},"end":{"line":1049,"column":26}},"472":{"start":{"line":1052,"column":4},"end":{"line":1052,"column":49}},"473":{"start":{"line":1053,"column":4},"end":{"line":1053,"column":85}},"474":{"start":{"line":1054,"column":4},"end":{"line":1054,"column":33}},"475":{"start":{"line":1055,"column":4},"end":{"line":1059,"column":5}},"476":{"start":{"line":1056,"column":8},"end":{"line":1058,"column":11}},"477":{"start":{"line":1057,"column":12},"end":{"line":1057,"column":45}},"478":{"start":{"line":1060,"column":4},"end":{"line":1060,"column":12}},"479":{"start":{"line":1061,"column":4},"end":{"line":1061,"column":19}},"480":{"start":{"line":1064,"column":4},"end":{"line":1064,"column":35}},"481":{"start":{"line":1065,"column":4},"end":{"line":1067,"column":5}},"482":{"start":{"line":1066,"column":8},"end":{"line":1066,"column":53}},"483":{"start":{"line":1070,"column":4},"end":{"line":1070,"column":22}},"484":{"start":{"line":1072,"column":4},"end":{"line":1089,"column":5}},"485":{"start":{"line":1073,"column":8},"end":{"line":1073,"column":51}},"486":{"start":{"line":1074,"column":8},"end":{"line":1074,"column":51}},"487":{"start":{"line":1075,"column":8},"end":{"line":1075,"column":43}},"488":{"start":{"line":1077,"column":8},"end":{"line":1083,"column":11}},"489":{"start":{"line":1084,"column":8},"end":{"line":1084,"column":43}},"490":{"start":{"line":1086,"column":8},"end":{"line":1088,"column":10}},"491":{"start":{"line":1092,"column":4},"end":{"line":1099,"column":7}},"492":{"start":{"line":1103,"column":4},"end":{"line":1103,"column":23}},"493":{"start":{"line":1110,"column":4},"end":{"line":1110,"column":22}},"494":{"start":{"line":1115,"column":4},"end":{"line":1115,"column":21}},"495":{"start":{"line":1119,"column":4},"end":{"line":1119,"column":27}},"496":{"start":{"line":1121,"column":4},"end":{"line":1121,"column":32}},"497":{"start":{"line":1123,"column":4},"end":{"line":1123,"column":44}},"498":{"start":{"line":1125,"column":4},"end":{"line":1149,"column":6}},"499":{"start":{"line":1130,"column":12},"end":{"line":1130,"column":49}},"500":{"start":{"line":1152,"column":4},"end":{"line":1152,"column":41}},"501":{"start":{"line":1153,"column":4},"end":{"line":1160,"column":5}},"502":{"start":{"line":1154,"column":8},"end":{"line":1154,"column":44}},"503":{"start":{"line":1155,"column":8},"end":{"line":1159,"column":9}},"504":{"start":{"line":1156,"column":12},"end":{"line":1158,"column":14}},"505":{"start":{"line":1161,"column":4},"end":{"line":1163,"column":7}},"506":{"start":{"line":1162,"column":8},"end":{"line":1162,"column":38}},"507":{"start":{"line":1165,"column":4},"end":{"line":1165,"column":68}},"508":{"start":{"line":1167,"column":4},"end":{"line":1175,"column":5}},"509":{"start":{"line":1168,"column":8},"end":{"line":1173,"column":9}},"510":{"start":{"line":1169,"column":12},"end":{"line":1169,"column":59}},"511":{"start":{"line":1170,"column":12},"end":{"line":1172,"column":13}},"512":{"start":{"line":1171,"column":16},"end":{"line":1171,"column":27}},"513":{"start":{"line":1174,"column":8},"end":{"line":1174,"column":21}},"514":{"start":{"line":1176,"column":4},"end":{"line":1176,"column":74}},"515":{"start":{"line":1178,"column":4},"end":{"line":1178,"column":34}},"516":{"start":{"line":1179,"column":4},"end":{"line":1181,"column":7}},"517":{"start":{"line":1180,"column":8},"end":{"line":1180,"column":25}},"518":{"start":{"line":1183,"column":4},"end":{"line":1199,"column":8}},"519":{"start":{"line":1184,"column":8},"end":{"line":1184,"column":40}},"520":{"start":{"line":1187,"column":8},"end":{"line":1187,"column":47}},"521":{"start":{"line":1188,"column":8},"end":{"line":1188,"column":59}},"522":{"start":{"line":1189,"column":8},"end":{"line":1191,"column":9}},"523":{"start":{"line":1190,"column":12},"end":{"line":1190,"column":19}},"524":{"start":{"line":1192,"column":8},"end":{"line":1194,"column":9}},"525":{"start":{"line":1193,"column":12},"end":{"line":1193,"column":32}},"526":{"start":{"line":1196,"column":8},"end":{"line":1198,"column":9}},"527":{"start":{"line":1197,"column":12},"end":{"line":1197,"column":62}},"528":{"start":{"line":1201,"column":4},"end":{"line":1207,"column":5}},"529":{"start":{"line":1202,"column":8},"end":{"line":1202,"column":27}},"530":{"start":{"line":1204,"column":8},"end":{"line":1206,"column":10}},"531":{"start":{"line":1209,"column":4},"end":{"line":1209,"column":36}},"532":{"start":{"line":1211,"column":4},"end":{"line":1211,"column":36}},"533":{"start":{"line":1212,"column":4},"end":{"line":1215,"column":6}},"534":{"start":{"line":1217,"column":4},"end":{"line":1223,"column":5}},"535":{"start":{"line":1218,"column":8},"end":{"line":1219,"column":29}},"536":{"start":{"line":1219,"column":12},"end":{"line":1219,"column":29}},"537":{"start":{"line":1220,"column":8},"end":{"line":1220,"column":40}},"538":{"start":{"line":1221,"column":8},"end":{"line":1221,"column":78}},"539":{"start":{"line":1222,"column":8},"end":{"line":1222,"column":40}},"540":{"start":{"line":1225,"column":4},"end":{"line":1225,"column":18}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":38}},{"start":{"line":30,"column":12},"end":{"line":30,"column":51}},{"start":{"line":31,"column":12},"end":{"line":31,"column":42}}]},"2":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":28},"end":{"line":38,"column":40}},{"start":{"line":39,"column":9},"end":{"line":39,"column":34}},{"start":{"line":39,"column":38},"end":{"line":39,"column":61}},{"start":{"line":39,"column":65},"end":{"line":39,"column":88}},{"start":{"line":39,"column":92},"end":{"line":39,"column":110}},{"start":{"line":39,"column":114},"end":{"line":39,"column":146}},{"start":{"line":39,"column":150},"end":{"line":39,"column":165}},{"start":{"line":39,"column":169},"end":{"line":39,"column":192}},{"start":{"line":39,"column":196},"end":{"line":39,"column":225}}]},"3":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":27}},{"start":{"line":42,"column":9},"end":{"line":42,"column":21}},{"start":{"line":42,"column":25},"end":{"line":42,"column":43}},{"start":{"line":43,"column":8},"end":{"line":43,"column":40}},{"start":{"line":44,"column":8},"end":{"line":44,"column":30}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"5":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":33}},{"start":{"line":60,"column":10},"end":{"line":60,"column":54}},{"start":{"line":60,"column":58},"end":{"line":60,"column":80}},{"start":{"line":60,"column":86},"end":{"line":60,"column":150}},{"start":{"line":60,"column":154},"end":{"line":60,"column":176}},{"start":{"line":61,"column":8},"end":{"line":61,"column":25}},{"start":{"line":61,"column":29},"end":{"line":61,"column":64}}]},"6":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":30},"end":{"line":74,"column":61}},{"start":{"line":75,"column":8},"end":{"line":75,"column":21}},{"start":{"line":75,"column":25},"end":{"line":75,"column":66}},{"start":{"line":76,"column":8},"end":{"line":76,"column":57}}]},"7":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"8":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":12}},{"start":{"line":80,"column":16},"end":{"line":80,"column":40}}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":30},"end":{"line":92,"column":66}},{"start":{"line":92,"column":70},"end":{"line":92,"column":122}},{"start":{"line":93,"column":8},"end":{"line":93,"column":43}},{"start":{"line":94,"column":9},"end":{"line":94,"column":61}},{"start":{"line":94,"column":66},"end":{"line":94,"column":92}},{"start":{"line":94,"column":96},"end":{"line":94,"column":134}},{"start":{"line":95,"column":8},"end":{"line":95,"column":18}},{"start":{"line":96,"column":9},"end":{"line":96,"column":41}},{"start":{"line":96,"column":45},"end":{"line":96,"column":79}}]},"10":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"11":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":10},"end":{"line":109,"column":47}},{"start":{"line":109,"column":52},"end":{"line":109,"column":77}},{"start":{"line":109,"column":81},"end":{"line":109,"column":110}}]},"12":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"13":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"14":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"15":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":39},"end":{"line":136,"column":44}},{"start":{"line":136,"column":47},"end":{"line":136,"column":58}}]},"16":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"17":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":8},"end":{"line":166,"column":49}},{"start":{"line":166,"column":54},"end":{"line":166,"column":79}},{"start":{"line":166,"column":83},"end":{"line":166,"column":116}}]},"18":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":169,"column":8}},{"start":{"line":169,"column":8},"end":{"line":169,"column":8}}]},"19":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":12},"end":{"line":169,"column":34}},{"start":{"line":169,"column":38},"end":{"line":169,"column":54}}]},"20":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":176,"column":4}},{"start":{"line":176,"column":4},"end":{"line":176,"column":4}}]},"21":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":10},"end":{"line":176,"column":47}},{"start":{"line":176,"column":52},"end":{"line":176,"column":77}},{"start":{"line":176,"column":81},"end":{"line":176,"column":143}}]},"22":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"23":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"24":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":10},"end":{"line":187,"column":26}},{"start":{"line":187,"column":30},"end":{"line":187,"column":46}}]},"25":{"line":191,"type":"cond-expr","locations":[{"start":{"line":191,"column":47},"end":{"line":191,"column":57}},{"start":{"line":191,"column":60},"end":{"line":191,"column":67}}]},"26":{"line":198,"type":"cond-expr","locations":[{"start":{"line":198,"column":39},"end":{"line":198,"column":44}},{"start":{"line":198,"column":47},"end":{"line":198,"column":58}}]},"27":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":8}},{"start":{"line":202,"column":8},"end":{"line":202,"column":8}}]},"28":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":12},"end":{"line":202,"column":33}},{"start":{"line":202,"column":37},"end":{"line":202,"column":85}}]},"29":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":23},"end":{"line":211,"column":46}},{"start":{"line":211,"column":50},"end":{"line":211,"column":82}}]},"30":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":213,"column":8}},{"start":{"line":213,"column":8},"end":{"line":213,"column":8}}]},"31":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":8},"end":{"line":234,"column":8}},{"start":{"line":234,"column":8},"end":{"line":234,"column":8}}]},"32":{"line":234,"type":"binary-expr","locations":[{"start":{"line":234,"column":12},"end":{"line":234,"column":13}},{"start":{"line":234,"column":17},"end":{"line":234,"column":46}}]},"33":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":16},"end":{"line":236,"column":16}},{"start":{"line":236,"column":16},"end":{"line":236,"column":16}}]},"34":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":8},"end":{"line":246,"column":8}},{"start":{"line":246,"column":8},"end":{"line":246,"column":8}}]},"35":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":12},"end":{"line":246,"column":22}},{"start":{"line":246,"column":26},"end":{"line":246,"column":64}}]},"36":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":16},"end":{"line":248,"column":16}},{"start":{"line":248,"column":16},"end":{"line":248,"column":16}}]},"37":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":11},"end":{"line":267,"column":35}},{"start":{"line":268,"column":8},"end":{"line":268,"column":33}},{"start":{"line":268,"column":37},"end":{"line":268,"column":61}},{"start":{"line":269,"column":8},"end":{"line":269,"column":34}},{"start":{"line":269,"column":38},"end":{"line":269,"column":52}}]},"38":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":12},"end":{"line":281,"column":34}},{"start":{"line":282,"column":8},"end":{"line":282,"column":39}},{"start":{"line":282,"column":43},"end":{"line":282,"column":56}},{"start":{"line":283,"column":8},"end":{"line":283,"column":43}},{"start":{"line":283,"column":47},"end":{"line":283,"column":118}},{"start":{"line":284,"column":8},"end":{"line":284,"column":34}},{"start":{"line":284,"column":38},"end":{"line":284,"column":52}}]},"39":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":17},"end":{"line":296,"column":42}},{"start":{"line":296,"column":46},"end":{"line":296,"column":80}},{"start":{"line":297,"column":8},"end":{"line":297,"column":34}},{"start":{"line":297,"column":38},"end":{"line":297,"column":55}},{"start":{"line":297,"column":59},"end":{"line":297,"column":66}}]},"40":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"41":{"line":317,"type":"binary-expr","locations":[{"start":{"line":317,"column":17},"end":{"line":317,"column":42}},{"start":{"line":317,"column":46},"end":{"line":317,"column":69}},{"start":{"line":318,"column":8},"end":{"line":318,"column":79}},{"start":{"line":319,"column":8},"end":{"line":319,"column":25}},{"start":{"line":319,"column":29},"end":{"line":319,"column":36}}]},"42":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":4},"end":{"line":321,"column":4}},{"start":{"line":321,"column":4},"end":{"line":321,"column":4}}]},"43":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":8},"end":{"line":324,"column":8}},{"start":{"line":324,"column":8},"end":{"line":324,"column":8}}]},"44":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":4},"end":{"line":340,"column":4}},{"start":{"line":340,"column":4},"end":{"line":340,"column":4}}]},"45":{"line":340,"type":"binary-expr","locations":[{"start":{"line":340,"column":8},"end":{"line":340,"column":30}},{"start":{"line":340,"column":34},"end":{"line":340,"column":58}}]},"46":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":8},"end":{"line":342,"column":8}},{"start":{"line":342,"column":8},"end":{"line":342,"column":8}}]},"47":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":4},"end":{"line":350,"column":4}},{"start":{"line":350,"column":4},"end":{"line":350,"column":4}}]},"48":{"line":350,"type":"binary-expr","locations":[{"start":{"line":350,"column":8},"end":{"line":350,"column":37}},{"start":{"line":350,"column":41},"end":{"line":350,"column":68}}]},"49":{"line":354,"type":"binary-expr","locations":[{"start":{"line":354,"column":30},"end":{"line":354,"column":61}},{"start":{"line":354,"column":65},"end":{"line":354,"column":82}},{"start":{"line":354,"column":86},"end":{"line":354,"column":100}},{"start":{"line":355,"column":8},"end":{"line":355,"column":212}}]},"50":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":4},"end":{"line":356,"column":4}},{"start":{"line":356,"column":4},"end":{"line":356,"column":4}}]},"51":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":4},"end":{"line":361,"column":4}},{"start":{"line":361,"column":4},"end":{"line":361,"column":4}}]},"52":{"line":366,"type":"cond-expr","locations":[{"start":{"line":367,"column":8},"end":{"line":367,"column":36}},{"start":{"line":368,"column":8},"end":{"line":368,"column":94}}]},"53":{"line":367,"type":"binary-expr","locations":[{"start":{"line":367,"column":8},"end":{"line":367,"column":25}},{"start":{"line":367,"column":29},"end":{"line":367,"column":36}}]},"54":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":8},"end":{"line":368,"column":25}},{"start":{"line":368,"column":29},"end":{"line":368,"column":55}},{"start":{"line":368,"column":59},"end":{"line":368,"column":83}},{"start":{"line":368,"column":87},"end":{"line":368,"column":94}}]},"55":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":4},"end":{"line":370,"column":4}},{"start":{"line":370,"column":4},"end":{"line":370,"column":4}}]},"56":{"line":371,"type":"binary-expr","locations":[{"start":{"line":371,"column":30},"end":{"line":371,"column":36}},{"start":{"line":371,"column":40},"end":{"line":371,"column":74}},{"start":{"line":371,"column":78},"end":{"line":371,"column":120}}]},"57":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":8},"end":{"line":372,"column":8}},{"start":{"line":372,"column":8},"end":{"line":372,"column":8}}]},"58":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":4},"end":{"line":378,"column":4}},{"start":{"line":378,"column":4},"end":{"line":378,"column":4}}]},"59":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":4},"end":{"line":382,"column":4}},{"start":{"line":382,"column":4},"end":{"line":382,"column":4}}]},"60":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":8},"end":{"line":382,"column":18}},{"start":{"line":382,"column":22},"end":{"line":382,"column":39}},{"start":{"line":382,"column":43},"end":{"line":382,"column":49}}]},"61":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":11},"end":{"line":401,"column":22}},{"start":{"line":402,"column":8},"end":{"line":402,"column":26}},{"start":{"line":402,"column":30},"end":{"line":402,"column":67}},{"start":{"line":403,"column":8},"end":{"line":403,"column":28}},{"start":{"line":403,"column":32},"end":{"line":403,"column":70}}]},"62":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":8},"end":{"line":413,"column":8}},{"start":{"line":413,"column":8},"end":{"line":413,"column":8}}]},"63":{"line":413,"type":"binary-expr","locations":[{"start":{"line":413,"column":13},"end":{"line":413,"column":43}},{"start":{"line":413,"column":47},"end":{"line":413,"column":69}},{"start":{"line":414,"column":13},"end":{"line":414,"column":40}},{"start":{"line":414,"column":44},"end":{"line":414,"column":67}}]},"64":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":4},"end":{"line":423,"column":4}},{"start":{"line":423,"column":4},"end":{"line":423,"column":4}}]},"65":{"line":423,"type":"binary-expr","locations":[{"start":{"line":423,"column":8},"end":{"line":423,"column":21}},{"start":{"line":423,"column":25},"end":{"line":423,"column":66}}]},"66":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":4},"end":{"line":432,"column":4}},{"start":{"line":432,"column":4},"end":{"line":432,"column":4}}]},"67":{"line":433,"type":"binary-expr","locations":[{"start":{"line":433,"column":15},"end":{"line":433,"column":45}},{"start":{"line":433,"column":49},"end":{"line":433,"column":63}}]},"68":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":8},"end":{"line":456,"column":8}},{"start":{"line":456,"column":8},"end":{"line":456,"column":8}}]},"69":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":4},"end":{"line":462,"column":4}},{"start":{"line":462,"column":4},"end":{"line":462,"column":4}}]},"70":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":8},"end":{"line":468,"column":8}},{"start":{"line":468,"column":8},"end":{"line":468,"column":8}}]},"71":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":16},"end":{"line":471,"column":16}},{"start":{"line":471,"column":16},"end":{"line":471,"column":16}}]},"72":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":4},"end":{"line":508,"column":4}},{"start":{"line":508,"column":4},"end":{"line":508,"column":4}}]},"73":{"line":576,"type":"if","locations":[{"start":{"line":576,"column":8},"end":{"line":576,"column":8}},{"start":{"line":576,"column":8},"end":{"line":576,"column":8}}]},"74":{"line":584,"type":"binary-expr","locations":[{"start":{"line":584,"column":32},"end":{"line":584,"column":55}},{"start":{"line":584,"column":59},"end":{"line":584,"column":65}}]},"75":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":8},"end":{"line":586,"column":8}},{"start":{"line":586,"column":8},"end":{"line":586,"column":8}}]},"76":{"line":586,"type":"binary-expr","locations":[{"start":{"line":586,"column":12},"end":{"line":586,"column":37}},{"start":{"line":586,"column":41},"end":{"line":586,"column":80}},{"start":{"line":586,"column":84},"end":{"line":586,"column":141}}]},"77":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":8},"end":{"line":590,"column":8}},{"start":{"line":590,"column":8},"end":{"line":590,"column":8}}]},"78":{"line":598,"type":"if","locations":[{"start":{"line":598,"column":8},"end":{"line":598,"column":8}},{"start":{"line":598,"column":8},"end":{"line":598,"column":8}}]},"79":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":8},"end":{"line":602,"column":8}},{"start":{"line":602,"column":8},"end":{"line":602,"column":8}}]},"80":{"line":602,"type":"binary-expr","locations":[{"start":{"line":602,"column":12},"end":{"line":602,"column":30}},{"start":{"line":602,"column":34},"end":{"line":602,"column":58}}]},"81":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":15},"end":{"line":604,"column":15}},{"start":{"line":604,"column":15},"end":{"line":604,"column":15}}]},"82":{"line":604,"type":"binary-expr","locations":[{"start":{"line":604,"column":19},"end":{"line":604,"column":36}},{"start":{"line":604,"column":40},"end":{"line":604,"column":64}}]},"83":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":15},"end":{"line":606,"column":15}},{"start":{"line":606,"column":15},"end":{"line":606,"column":15}}]},"84":{"line":606,"type":"binary-expr","locations":[{"start":{"line":606,"column":19},"end":{"line":606,"column":54}},{"start":{"line":606,"column":58},"end":{"line":606,"column":94}}]},"85":{"line":608,"type":"if","locations":[{"start":{"line":608,"column":15},"end":{"line":608,"column":15}},{"start":{"line":608,"column":15},"end":{"line":608,"column":15}}]},"86":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":12},"end":{"line":619,"column":12}},{"start":{"line":619,"column":12},"end":{"line":619,"column":12}}]},"87":{"line":619,"type":"binary-expr","locations":[{"start":{"line":619,"column":16},"end":{"line":619,"column":50}},{"start":{"line":619,"column":54},"end":{"line":619,"column":83}}]},"88":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":12},"end":{"line":623,"column":12}},{"start":{"line":623,"column":12},"end":{"line":623,"column":12}}]},"89":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":16},"end":{"line":625,"column":16}},{"start":{"line":625,"column":16},"end":{"line":625,"column":16}}]},"90":{"line":633,"type":"binary-expr","locations":[{"start":{"line":633,"column":15},"end":{"line":633,"column":19}},{"start":{"line":633,"column":23},"end":{"line":633,"column":40}}]},"91":{"line":635,"type":"cond-expr","locations":[{"start":{"line":635,"column":22},"end":{"line":635,"column":38}},{"start":{"line":635,"column":41},"end":{"line":635,"column":45}}]},"92":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":12},"end":{"line":642,"column":12}},{"start":{"line":642,"column":12},"end":{"line":642,"column":12}}]},"93":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":16},"end":{"line":643,"column":16}},{"start":{"line":643,"column":16},"end":{"line":643,"column":16}}]},"94":{"line":643,"type":"binary-expr","locations":[{"start":{"line":643,"column":20},"end":{"line":643,"column":54}},{"start":{"line":643,"column":58},"end":{"line":643,"column":92}}]},"95":{"line":647,"type":"if","locations":[{"start":{"line":647,"column":16},"end":{"line":647,"column":16}},{"start":{"line":647,"column":16},"end":{"line":647,"column":16}}]},"96":{"line":647,"type":"binary-expr","locations":[{"start":{"line":647,"column":20},"end":{"line":647,"column":38}},{"start":{"line":647,"column":42},"end":{"line":647,"column":61}}]},"97":{"line":653,"type":"binary-expr","locations":[{"start":{"line":653,"column":36},"end":{"line":653,"column":59}},{"start":{"line":653,"column":63},"end":{"line":653,"column":69}}]},"98":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":12},"end":{"line":654,"column":12}},{"start":{"line":654,"column":12},"end":{"line":654,"column":12}}]},"99":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":16},"end":{"line":655,"column":16}},{"start":{"line":655,"column":16},"end":{"line":655,"column":16}}]},"100":{"line":655,"type":"binary-expr","locations":[{"start":{"line":655,"column":20},"end":{"line":655,"column":54}},{"start":{"line":655,"column":58},"end":{"line":655,"column":103}}]},"101":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":16},"end":{"line":659,"column":16}},{"start":{"line":659,"column":16},"end":{"line":659,"column":16}}]},"102":{"line":659,"type":"binary-expr","locations":[{"start":{"line":659,"column":20},"end":{"line":659,"column":38}},{"start":{"line":659,"column":42},"end":{"line":659,"column":72}}]},"103":{"line":670,"type":"binary-expr","locations":[{"start":{"line":670,"column":15},"end":{"line":670,"column":22}},{"start":{"line":670,"column":26},"end":{"line":670,"column":61}}]},"104":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":12},"end":{"line":677,"column":12}},{"start":{"line":677,"column":12},"end":{"line":677,"column":12}}]},"105":{"line":687,"type":"if","locations":[{"start":{"line":687,"column":4},"end":{"line":687,"column":4}},{"start":{"line":687,"column":4},"end":{"line":687,"column":4}}]},"106":{"line":692,"type":"if","locations":[{"start":{"line":692,"column":4},"end":{"line":692,"column":4}},{"start":{"line":692,"column":4},"end":{"line":692,"column":4}}]},"107":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":4},"end":{"line":698,"column":4}},{"start":{"line":698,"column":4},"end":{"line":698,"column":4}}]},"108":{"line":703,"type":"if","locations":[{"start":{"line":703,"column":4},"end":{"line":703,"column":4}},{"start":{"line":703,"column":4},"end":{"line":703,"column":4}}]},"109":{"line":707,"type":"if","locations":[{"start":{"line":707,"column":11},"end":{"line":707,"column":11}},{"start":{"line":707,"column":11},"end":{"line":707,"column":11}}]},"110":{"line":708,"type":"binary-expr","locations":[{"start":{"line":708,"column":15},"end":{"line":708,"column":46}},{"start":{"line":708,"column":50},"end":{"line":708,"column":80}}]},"111":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":4},"end":{"line":724,"column":4}},{"start":{"line":724,"column":4},"end":{"line":724,"column":4}}]},"112":{"line":728,"type":"if","locations":[{"start":{"line":728,"column":4},"end":{"line":728,"column":4}},{"start":{"line":728,"column":4},"end":{"line":728,"column":4}}]},"113":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":8},"end":{"line":734,"column":8}},{"start":{"line":734,"column":8},"end":{"line":734,"column":8}}]},"114":{"line":744,"type":"if","locations":[{"start":{"line":744,"column":8},"end":{"line":744,"column":8}},{"start":{"line":744,"column":8},"end":{"line":744,"column":8}}]},"115":{"line":749,"type":"binary-expr","locations":[{"start":{"line":749,"column":31},"end":{"line":749,"column":54}},{"start":{"line":749,"column":58},"end":{"line":749,"column":88}}]},"116":{"line":750,"type":"if","locations":[{"start":{"line":750,"column":8},"end":{"line":750,"column":8}},{"start":{"line":750,"column":8},"end":{"line":750,"column":8}}]},"117":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":4},"end":{"line":758,"column":4}},{"start":{"line":758,"column":4},"end":{"line":758,"column":4}}]},"118":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":8},"end":{"line":765,"column":8}},{"start":{"line":765,"column":8},"end":{"line":765,"column":8}}]},"119":{"line":779,"type":"if","locations":[{"start":{"line":779,"column":4},"end":{"line":779,"column":4}},{"start":{"line":779,"column":4},"end":{"line":779,"column":4}}]},"120":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":4},"end":{"line":788,"column":4}},{"start":{"line":788,"column":4},"end":{"line":788,"column":4}}]},"121":{"line":788,"type":"binary-expr","locations":[{"start":{"line":788,"column":8},"end":{"line":788,"column":13}},{"start":{"line":788,"column":17},"end":{"line":788,"column":31}},{"start":{"line":788,"column":35},"end":{"line":788,"column":95}}]},"122":{"line":800,"type":"if","locations":[{"start":{"line":800,"column":4},"end":{"line":800,"column":4}},{"start":{"line":800,"column":4},"end":{"line":800,"column":4}}]},"123":{"line":806,"type":"cond-expr","locations":[{"start":{"line":806,"column":36},"end":{"line":806,"column":45}},{"start":{"line":806,"column":48},"end":{"line":809,"column":13}}]},"124":{"line":812,"type":"if","locations":[{"start":{"line":812,"column":11},"end":{"line":812,"column":11}},{"start":{"line":812,"column":11},"end":{"line":812,"column":11}}]},"125":{"line":820,"type":"if","locations":[{"start":{"line":820,"column":11},"end":{"line":820,"column":11}},{"start":{"line":820,"column":11},"end":{"line":820,"column":11}}]},"126":{"line":820,"type":"binary-expr","locations":[{"start":{"line":820,"column":15},"end":{"line":820,"column":50}},{"start":{"line":820,"column":54},"end":{"line":820,"column":101}},{"start":{"line":821,"column":8},"end":{"line":821,"column":63}}]},"127":{"line":827,"type":"cond-expr","locations":[{"start":{"line":827,"column":36},"end":{"line":827,"column":45}},{"start":{"line":827,"column":48},"end":{"line":830,"column":13}}]},"128":{"line":833,"type":"if","locations":[{"start":{"line":833,"column":11},"end":{"line":833,"column":11}},{"start":{"line":833,"column":11},"end":{"line":833,"column":11}}]},"129":{"line":846,"type":"binary-expr","locations":[{"start":{"line":846,"column":15},"end":{"line":846,"column":29}},{"start":{"line":846,"column":33},"end":{"line":846,"column":48}}]},"130":{"line":860,"type":"if","locations":[{"start":{"line":860,"column":12},"end":{"line":860,"column":12}},{"start":{"line":860,"column":12},"end":{"line":860,"column":12}}]},"131":{"line":864,"type":"if","locations":[{"start":{"line":864,"column":12},"end":{"line":864,"column":12}},{"start":{"line":864,"column":12},"end":{"line":864,"column":12}}]},"132":{"line":865,"type":"if","locations":[{"start":{"line":865,"column":16},"end":{"line":865,"column":16}},{"start":{"line":865,"column":16},"end":{"line":865,"column":16}}]},"133":{"line":874,"type":"if","locations":[{"start":{"line":874,"column":12},"end":{"line":874,"column":12}},{"start":{"line":874,"column":12},"end":{"line":874,"column":12}}]},"134":{"line":874,"type":"binary-expr","locations":[{"start":{"line":874,"column":16},"end":{"line":874,"column":33}},{"start":{"line":874,"column":37},"end":{"line":874,"column":56}},{"start":{"line":874,"column":60},"end":{"line":874,"column":96}},{"start":{"line":874,"column":100},"end":{"line":874,"column":148}},{"start":{"line":874,"column":152},"end":{"line":874,"column":182}},{"start":{"line":874,"column":186},"end":{"line":874,"column":215}}]},"135":{"line":876,"type":"if","locations":[{"start":{"line":876,"column":16},"end":{"line":876,"column":16}},{"start":{"line":876,"column":16},"end":{"line":876,"column":16}}]},"136":{"line":882,"type":"if","locations":[{"start":{"line":882,"column":8},"end":{"line":882,"column":8}},{"start":{"line":882,"column":8},"end":{"line":882,"column":8}}]},"137":{"line":883,"type":"if","locations":[{"start":{"line":883,"column":12},"end":{"line":883,"column":12}},{"start":{"line":883,"column":12},"end":{"line":883,"column":12}}]},"138":{"line":886,"type":"if","locations":[{"start":{"line":886,"column":12},"end":{"line":886,"column":12}},{"start":{"line":886,"column":12},"end":{"line":886,"column":12}}]},"139":{"line":886,"type":"binary-expr","locations":[{"start":{"line":886,"column":16},"end":{"line":886,"column":32}},{"start":{"line":886,"column":36},"end":{"line":886,"column":73}}]},"140":{"line":894,"type":"binary-expr","locations":[{"start":{"line":894,"column":20},"end":{"line":894,"column":24}},{"start":{"line":894,"column":28},"end":{"line":894,"column":63}},{"start":{"line":894,"column":67},"end":{"line":894,"column":129}},{"start":{"line":895,"column":16},"end":{"line":895,"column":43}},{"start":{"line":896,"column":16},"end":{"line":896,"column":70}},{"start":{"line":897,"column":18},"end":{"line":897,"column":43}},{"start":{"line":897,"column":47},"end":{"line":897,"column":92}},{"start":{"line":897,"column":96},"end":{"line":897,"column":130}},{"start":{"line":898,"column":21},"end":{"line":898,"column":45}},{"start":{"line":898,"column":49},"end":{"line":898,"column":94}},{"start":{"line":898,"column":98},"end":{"line":898,"column":132}},{"start":{"line":898,"column":136},"end":{"line":898,"column":171}}]},"141":{"line":903,"type":"if","locations":[{"start":{"line":903,"column":12},"end":{"line":903,"column":12}},{"start":{"line":903,"column":12},"end":{"line":903,"column":12}}]},"142":{"line":906,"type":"if","locations":[{"start":{"line":906,"column":12},"end":{"line":906,"column":12}},{"start":{"line":906,"column":12},"end":{"line":906,"column":12}}]},"143":{"line":906,"type":"binary-expr","locations":[{"start":{"line":906,"column":16},"end":{"line":906,"column":27}},{"start":{"line":906,"column":31},"end":{"line":906,"column":59}}]},"144":{"line":910,"type":"if","locations":[{"start":{"line":910,"column":12},"end":{"line":910,"column":12}},{"start":{"line":910,"column":12},"end":{"line":910,"column":12}}]},"145":{"line":923,"type":"if","locations":[{"start":{"line":923,"column":8},"end":{"line":923,"column":8}},{"start":{"line":923,"column":8},"end":{"line":923,"column":8}}]},"146":{"line":923,"type":"binary-expr","locations":[{"start":{"line":923,"column":12},"end":{"line":923,"column":34}},{"start":{"line":923,"column":38},"end":{"line":923,"column":74}}]},"147":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":15},"end":{"line":934,"column":15}},{"start":{"line":934,"column":15},"end":{"line":934,"column":15}}]},"148":{"line":934,"type":"binary-expr","locations":[{"start":{"line":934,"column":19},"end":{"line":934,"column":40}},{"start":{"line":934,"column":44},"end":{"line":934,"column":80}}]},"149":{"line":945,"type":"if","locations":[{"start":{"line":945,"column":15},"end":{"line":945,"column":15}},{"start":{"line":945,"column":15},"end":{"line":945,"column":15}}]},"150":{"line":945,"type":"binary-expr","locations":[{"start":{"line":945,"column":19},"end":{"line":945,"column":58}},{"start":{"line":945,"column":62},"end":{"line":945,"column":99}}]},"151":{"line":962,"type":"if","locations":[{"start":{"line":962,"column":4},"end":{"line":962,"column":4}},{"start":{"line":962,"column":4},"end":{"line":962,"column":4}}]},"152":{"line":962,"type":"binary-expr","locations":[{"start":{"line":962,"column":10},"end":{"line":962,"column":40}},{"start":{"line":962,"column":44},"end":{"line":962,"column":97}}]},"153":{"line":969,"type":"if","locations":[{"start":{"line":969,"column":8},"end":{"line":969,"column":8}},{"start":{"line":969,"column":8},"end":{"line":969,"column":8}}]},"154":{"line":987,"type":"if","locations":[{"start":{"line":987,"column":4},"end":{"line":987,"column":4}},{"start":{"line":987,"column":4},"end":{"line":987,"column":4}}]},"155":{"line":993,"type":"if","locations":[{"start":{"line":993,"column":4},"end":{"line":993,"column":4}},{"start":{"line":993,"column":4},"end":{"line":993,"column":4}}]},"156":{"line":993,"type":"binary-expr","locations":[{"start":{"line":993,"column":8},"end":{"line":993,"column":29}},{"start":{"line":993,"column":33},"end":{"line":993,"column":77}}]},"157":{"line":1000,"type":"if","locations":[{"start":{"line":1000,"column":8},"end":{"line":1000,"column":8}},{"start":{"line":1000,"column":8},"end":{"line":1000,"column":8}}]},"158":{"line":1000,"type":"binary-expr","locations":[{"start":{"line":1000,"column":12},"end":{"line":1000,"column":32}},{"start":{"line":1000,"column":36},"end":{"line":1000,"column":55}}]},"159":{"line":1008,"type":"binary-expr","locations":[{"start":{"line":1008,"column":11},"end":{"line":1008,"column":45}},{"start":{"line":1008,"column":49},"end":{"line":1008,"column":72}}]},"160":{"line":1011,"type":"binary-expr","locations":[{"start":{"line":1011,"column":11},"end":{"line":1011,"column":46}},{"start":{"line":1011,"column":50},"end":{"line":1011,"column":73}}]},"161":{"line":1014,"type":"binary-expr","locations":[{"start":{"line":1014,"column":11},"end":{"line":1014,"column":34}},{"start":{"line":1014,"column":38},"end":{"line":1014,"column":59}}]},"162":{"line":1024,"type":"if","locations":[{"start":{"line":1024,"column":8},"end":{"line":1024,"column":8}},{"start":{"line":1024,"column":8},"end":{"line":1024,"column":8}}]},"163":{"line":1038,"type":"if","locations":[{"start":{"line":1038,"column":4},"end":{"line":1038,"column":4}},{"start":{"line":1038,"column":4},"end":{"line":1038,"column":4}}]},"164":{"line":1044,"type":"cond-expr","locations":[{"start":{"line":1044,"column":48},"end":{"line":1044,"column":57}},{"start":{"line":1045,"column":8},"end":{"line":1046,"column":38}}]},"165":{"line":1044,"type":"binary-expr","locations":[{"start":{"line":1044,"column":16},"end":{"line":1044,"column":27}},{"start":{"line":1044,"column":31},"end":{"line":1044,"column":45}}]},"166":{"line":1045,"type":"cond-expr","locations":[{"start":{"line":1045,"column":25},"end":{"line":1045,"column":33}},{"start":{"line":1046,"column":12},"end":{"line":1046,"column":38}}]},"167":{"line":1046,"type":"cond-expr","locations":[{"start":{"line":1046,"column":26},"end":{"line":1046,"column":31}},{"start":{"line":1046,"column":34},"end":{"line":1046,"column":38}}]},"168":{"line":1048,"type":"if","locations":[{"start":{"line":1048,"column":4},"end":{"line":1048,"column":4}},{"start":{"line":1048,"column":4},"end":{"line":1048,"column":4}}]},"169":{"line":1052,"type":"cond-expr","locations":[{"start":{"line":1052,"column":39},"end":{"line":1052,"column":42}},{"start":{"line":1052,"column":45},"end":{"line":1052,"column":48}}]},"170":{"line":1053,"type":"cond-expr","locations":[{"start":{"line":1053,"column":31},"end":{"line":1053,"column":57}},{"start":{"line":1053,"column":60},"end":{"line":1053,"column":83}}]},"171":{"line":1055,"type":"if","locations":[{"start":{"line":1055,"column":4},"end":{"line":1055,"column":4}},{"start":{"line":1055,"column":4},"end":{"line":1055,"column":4}}]},"172":{"line":1065,"type":"if","locations":[{"start":{"line":1065,"column":4},"end":{"line":1065,"column":4}},{"start":{"line":1065,"column":4},"end":{"line":1065,"column":4}}]},"173":{"line":1066,"type":"cond-expr","locations":[{"start":{"line":1066,"column":38},"end":{"line":1066,"column":44}},{"start":{"line":1066,"column":47},"end":{"line":1066,"column":51}}]},"174":{"line":1152,"type":"binary-expr","locations":[{"start":{"line":1152,"column":20},"end":{"line":1152,"column":34}},{"start":{"line":1152,"column":38},"end":{"line":1152,"column":40}}]},"175":{"line":1155,"type":"if","locations":[{"start":{"line":1155,"column":8},"end":{"line":1155,"column":8}},{"start":{"line":1155,"column":8},"end":{"line":1155,"column":8}}]},"176":{"line":1165,"type":"binary-expr","locations":[{"start":{"line":1165,"column":46},"end":{"line":1165,"column":60}},{"start":{"line":1165,"column":64},"end":{"line":1165,"column":66}}]},"177":{"line":1170,"type":"if","locations":[{"start":{"line":1170,"column":12},"end":{"line":1170,"column":12}},{"start":{"line":1170,"column":12},"end":{"line":1170,"column":12}}]},"178":{"line":1176,"type":"cond-expr","locations":[{"start":{"line":1176,"column":53},"end":{"line":1176,"column":57}},{"start":{"line":1176,"column":60},"end":{"line":1176,"column":72}}]},"179":{"line":1189,"type":"if","locations":[{"start":{"line":1189,"column":8},"end":{"line":1189,"column":8}},{"start":{"line":1189,"column":8},"end":{"line":1189,"column":8}}]},"180":{"line":1192,"type":"if","locations":[{"start":{"line":1192,"column":8},"end":{"line":1192,"column":8}},{"start":{"line":1192,"column":8},"end":{"line":1192,"column":8}}]},"181":{"line":1217,"type":"if","locations":[{"start":{"line":1217,"column":4},"end":{"line":1217,"column":4}},{"start":{"line":1217,"column":4},"end":{"line":1217,"column":4}}]},"182":{"line":1218,"type":"if","locations":[{"start":{"line":1218,"column":8},"end":{"line":1218,"column":8}},{"start":{"line":1218,"column":8},"end":{"line":1218,"column":8}}]}},"code":["// ng-annotate-main.js","// MIT licensed, see LICENSE file","// Copyright (c) 2013-2016 Olov Lassus <olov.lassus@gmail.com>","","\"use strict\";","var fmt = require(\"simple-fmt\");","var is = require(\"simple-is\");","var alter = require(\"alter\");","var traverse = require(\"ordered-ast-traverse\");","var EOL = require(\"os\").EOL;","var assert = require(\"assert\");","var ngInject = require(\"./nginject\");","var generateSourcemap = require(\"./generate-sourcemap\");","var Lut = require(\"./lut\");","var scopeTools = require(\"./scopetools\");","var stringmap = require(\"stringmap\");","var optionalAngularDashboardFramework = require(\"./optionals/angular-dashboard-framework\");","var require_acorn_t0 = Date.now();","var parser = require(\"acorn\").parse;","var require_acorn_t1 = Date.now();","","var chainedRouteProvider = 1;","var chainedUrlRouterProvider = 2;","var chainedStateProvider = 3;","var chainedRegular = 4;","","function match(node, ctx, matchPlugins) {","    var isMethodCall = (","        node.type === \"CallExpression\" &&","            node.callee.type === \"MemberExpression\" &&","            node.callee.computed === false","        );","","    // matchInjectorInvoke must happen before matchRegular","    // to prevent false positive ($injector.invoke() outside module)","    // matchProvide must happen before matchRegular","    // to prevent regular from matching it as a short-form","    var matchMethodCalls = (isMethodCall &&","        (matchInjectorInvoke(node) || matchProvide(node, ctx) || matchRegular(node, ctx) || matchNgRoute(node) || matchMaterialShowModalOpen(node) || matchNgUi(node) || matchHttpProvider(node) || matchControllerProvider(node)));","","    return matchMethodCalls ||","        (matchPlugins && matchPlugins(node)) ||","        matchDirectiveReturnObject(node) ||","        matchProviderGet(node);","}","","function matchMaterialShowModalOpen(node) {","    // $mdDialog.show({.. controller: fn, resolve: {f: function($scope) {}, ..}});","    // $mdToast.show({.. controller: fn, resolve: {f: function($scope) {}, ..}});","    // $mdBottomSheet.show({.. controller: fn, resolve: {f: function($scope) {}, ..}});","    // $modal.open({.. controller: fn, resolve: {f: function($scope) {}, ..}});","","    // we already know that node is a (non-computed) method call","    var callee = node.callee;","    var obj = callee.object; // identifier or expression","    var method = callee.property; // identifier","    var args = node.arguments;","","    if (obj.type === \"Identifier\" &&","        ((is.someof(obj.name, [\"$modal\", \"$uibModal\"]) && method.name === \"open\") || (is.someof(obj.name, [\"$mdDialog\", \"$mdToast\", \"$mdBottomSheet\"]) && method.name === \"show\")) &&","        args.length === 1 && args[0].type === \"ObjectExpression\") {","        var props = args[0].properties;","        var res = [matchProp(\"controller\", props)];","        res.push.apply(res, matchResolve(props));","        return res.filter(Boolean);","    }","    return false;","}","","function matchDirectiveReturnObject(node) {","    // only matches inside directives","    // return { .. controller: function($scope, $timeout), ...}","","    return limit(\"directive\", node.type === \"ReturnStatement\" &&","        node.argument && node.argument.type === \"ObjectExpression\" &&","        matchProp(\"controller\", node.argument.properties));","}","","function limit(name, node) {","    if (node && !node.$limitToMethodName) {","        node.$limitToMethodName = name;","    }","    return node;","}","","function matchProviderGet(node) {","    // only matches inside providers","    // (this|self|that).$get = function($scope, $timeout)","    // { ... $get: function($scope, $timeout), ...}","    var memberExpr;","    var self;","    return limit(\"provider\", (node.type === \"AssignmentExpression\" && (memberExpr = node.left).type === \"MemberExpression\" &&","        memberExpr.property.name === \"$get\" &&","        ((self = memberExpr.object).type === \"ThisExpression\" || (self.type === \"Identifier\" && is.someof(self.name, [\"self\", \"that\"]))) &&","        node.right) ||","        (node.type === \"ObjectExpression\" && matchProp(\"$get\", node.properties)));","}","","function matchNgRoute(node) {","    // $routeProvider.when(\"path\", {","    //   ...","    //   controller: function($scope) {},","    //   resolve: {f: function($scope) {}, ..}","    // })","","    // we already know that node is a (non-computed) method call","    var callee = node.callee;","    var obj = callee.object; // identifier or expression","    if (!(obj.$chained === chainedRouteProvider || (obj.type === \"Identifier\" && obj.name === \"$routeProvider\"))) {","        return false;","    }","    node.$chained = chainedRouteProvider;","","    var method = callee.property; // identifier","    if (method.name !== \"when\") {","        return false;","    }","","    var args = node.arguments;","    if (args.length !== 2) {","        return false;","    }","    var configArg = last(args)","    if (configArg.type !== \"ObjectExpression\") {","        return false;","    }","","    var props = configArg.properties;","    var res = [","        matchProp(\"controller\", props)","    ];","    // {resolve: ..}","    res.push.apply(res, matchResolve(props));","","    var filteredRes = res.filter(Boolean);","    return (filteredRes.length === 0 ? false : filteredRes);","}","","function matchNgUi(node) {","    // $stateProvider.state(\"myState\", {","    //     ...","    //     controller: function($scope)","    //     controllerProvider: function($scope)","    //     templateProvider: function($scope)","    //     onEnter: function($scope)","    //     onExit: function($scope)","    // });","    // $stateProvider.state(\"myState\", {... resolve: {f: function($scope) {}, ..} ..})","    // $stateProvider.state(\"myState\", {... params: {params: {simple: function($scope) {}, inValue: { value: function($scope) {} }} ..})","    // $stateProvider.state(\"myState\", {... views: {... somename: {... controller: fn, controllerProvider: fn, templateProvider: fn, resolve: {f: fn}}}})","    //","    // stateHelperProvider.setNestedState({ sameasregularstate, children: [sameasregularstate, ..]})","    // stateHelperProvider.setNestedState({ sameasregularstate, children: [sameasregularstate, ..]}, true)","    //","    // $urlRouterProvider.when(.., function($scope) {})","    //","    // $modal.open see matchMaterialShowModalOpen","","    // we already know that node is a (non-computed) method call","    var callee = node.callee;","    var obj = callee.object; // identifier or expression","    var method = callee.property; // identifier","    var args = node.arguments;","","    // shortcut for $urlRouterProvider.when(.., function($scope) {})","    if (obj.$chained === chainedUrlRouterProvider || (obj.type === \"Identifier\" && obj.name === \"$urlRouterProvider\")) {","        node.$chained = chainedUrlRouterProvider;","","        if (method.name === \"when\" && args.length >= 1) {","            return last(args);","        }","        return false;","    }","","    // everything below is for $stateProvider and stateHelperProvider alone","    if (!(obj.$chained === chainedStateProvider || (obj.type === \"Identifier\" && is.someof(obj.name, [\"$stateProvider\", \"stateHelperProvider\"])))) {","        return false;","    }","    node.$chained = chainedStateProvider;","","    if (is.noneof(method.name, [\"state\", \"setNestedState\"])) {","        return false;","    }","","    // $stateProvider.state({ ... }) and $stateProvider.state(\"name\", { ... })","    // stateHelperProvider.setNestedState({ .. }) and stateHelperProvider.setNestedState({ .. }, true)","    if (!(args.length >= 1 && args.length <= 2)) {","        return false;","    }","","    var configArg = (method.name === \"state\" ? last(args) : args[0]);","","    var res = [];","","    recursiveMatch(configArg);","","    var filteredRes = res.filter(Boolean);","    return (filteredRes.length === 0 ? false : filteredRes);","","","    function recursiveMatch(objectExpressionNode) {","        if (!objectExpressionNode || objectExpressionNode.type !== \"ObjectExpression\") {","            return false;","        }","","        var properties = objectExpressionNode.properties;","","        matchStateProps(properties, res);","","        var childrenArrayExpression = matchProp(\"children\", properties);","        var children = childrenArrayExpression && childrenArrayExpression.elements;","","        if (!children) {","            return;","        }","        children.forEach(recursiveMatch);","    }","","    function matchStateProps(props, res) {","        var simple = [","            matchProp(\"controller\", props),","            matchProp(\"controllerProvider\", props),","            matchProp(\"templateProvider\", props),","            matchProp(\"onEnter\", props),","            matchProp(\"onExit\", props),","        ];","        res.push.apply(res, simple);","","        // {resolve: ..}","        res.push.apply(res, matchResolve(props));","","        // {params: {simple: function($scope) {}, inValue: { value: function($scope) {} }}","        var a = matchProp(\"params\", props);","        if (a && a.type === \"ObjectExpression\") {","            a.properties.forEach(function(prop) {","                if (prop.value.type === \"ObjectExpression\") {","                    res.push(matchProp(\"value\", prop.value.properties));","                } else {","                    res.push(prop.value);","                }","            });","        }","","        // {view: ...}","        var viewObject = matchProp(\"views\", props);","        if (viewObject && viewObject.type === \"ObjectExpression\") {","            viewObject.properties.forEach(function(prop) {","                if (prop.value.type === \"ObjectExpression\") {","                    res.push(matchProp(\"controller\", prop.value.properties));","                    res.push(matchProp(\"controllerProvider\", prop.value.properties));","                    res.push(matchProp(\"templateProvider\", prop.value.properties));","                    res.push.apply(res, matchResolve(prop.value.properties));","                }","            });","        }","    }","}","","function matchInjectorInvoke(node) {","    // $injector.invoke(function($compile) { ... });","","    // we already know that node is a (non-computed) method call","    var callee = node.callee;","    var obj = callee.object; // identifier or expression","    var method = callee.property; // identifier","","    return method.name === \"invoke\" &&","        obj.type === \"Identifier\" && obj.name === \"$injector\" &&","        node.arguments.length >= 1 && node.arguments;","}","","function matchHttpProvider(node) {","    // $httpProvider.interceptors.push(function($scope) {});","    // $httpProvider.responseInterceptors.push(function($scope) {});","","    // we already know that node is a (non-computed) method call","    var callee = node.callee;","    var obj = callee.object; // identifier or expression","    var method = callee.property; // identifier","","    return (method.name === \"push\" &&","        obj.type === \"MemberExpression\" && !obj.computed &&","        obj.object.name === \"$httpProvider\" && is.someof(obj.property.name,  [\"interceptors\", \"responseInterceptors\"]) &&","        node.arguments.length >= 1 && node.arguments);","}","","function matchControllerProvider(node) {","    // $controllerProvider.register(\"foo\", function($scope) {});","","    // we already know that node is a (non-computed) method call","    var callee = node.callee;","    var obj = callee.object; // identifier or expression","    var method = callee.property; // identifier","    var args = node.arguments;","","    var target = obj.type === \"Identifier\" && obj.name === \"$controllerProvider\" &&","        method.name === \"register\" && args.length === 2 && args[1];","","    if (target) {","        target.$methodName = method.name;","    }","    return target;","}","","function matchProvide(node, ctx) {","    // $provide.decorator(\"foo\", function($scope) {});","    // $provide.service(\"foo\", function($scope) {});","    // $provide.factory(\"foo\", function($scope) {});","    // $provide.provider(\"foo\", function($scope) {});","","    // we already know that node is a (non-computed) method call","    var callee = node.callee;","    var obj = callee.object; // identifier or expression","    var method = callee.property; // identifier","    var args = node.arguments;","","    var target = obj.type === \"Identifier\" && obj.name === \"$provide\" &&","        is.someof(method.name, [\"decorator\", \"service\", \"factory\", \"provider\"]) &&","        args.length === 2 && args[1];","","    if (target) {","        target.$methodName = method.name;","","        if (ctx.rename) {","            // for eventual rename purposes","            return args;","        }","    }","    return target;","}","","function matchRegular(node, ctx) {","    // we already know that node is a (non-computed) method call","    var callee = node.callee;","    var obj = callee.object; // identifier or expression","    var method = callee.property; // identifier","","    // short-cut implicit config special case:","    // angular.module(\"MyMod\", function(a) {})","    if (obj.name === \"angular\" && method.name === \"module\") {","        var args$0 = node.arguments;","        if (args$0.length >= 2) {","            node.$chained = chainedRegular;","            return last(args$0);","        }","    }","","    // hardcoded exception: foo.decorator is generally considered a short-form","    // declaration but $stateProvider.decorator is not. see https://github.com/olov/ng-annotate/issues/82","    if (obj.name === \"$stateProvider\" && method.name === \"decorator\") {","        return false;","    }","","    var matchAngularModule = (obj.$chained === chainedRegular || isReDef(obj, ctx) || isLongDef(obj)) &&","        is.someof(method.name, [\"provider\", \"value\", \"constant\", \"bootstrap\", \"config\", \"factory\", \"directive\", \"filter\", \"run\", \"controller\", \"service\", \"animation\", \"invoke\", \"store\", \"decorator\", \"component\"]);","    if (!matchAngularModule) {","        return false;","    }","    node.$chained = chainedRegular;","","    if (is.someof(method.name, [\"value\", \"constant\", \"bootstrap\"])) {","        return false; // affects matchAngularModule because of chaining","    }","","    var args = node.arguments;","    var target = (is.someof(method.name, [\"config\", \"run\"]) ?","        args.length === 1 && args[0] :","        args.length === 2 && args[0].type === \"Literal\" && is.string(args[0].value) && args[1]);","","    if (method.name === \"component\") {","        var controllerProp = (target && target.type === \"ObjectExpression\" && matchProp(\"controller\", target.properties));","        if (!controllerProp) {","            return false;","        }","        target = controllerProp;","    }","","    if (target) {","        target.$methodName = method.name;","    }","","    if (ctx.rename && args.length === 2 && target) {","        // for eventual rename purposes","        var somethingNameLiteral = args[0];","        return [somethingNameLiteral, target];","    }","    return target;","}","","// matches with default regexp","//   *.controller(\"MyCtrl\", function($scope, $timeout) {});","//   *.*.controller(\"MyCtrl\", function($scope, $timeout) {});","// matches with --regexp \"^require(.*)$\"","//   require(\"app-module\").controller(\"MyCtrl\", function($scope) {});","function isReDef(node, ctx) {","    return ctx.re.test(ctx.srcForRange(node.range));","}","","// Long form: angular.module(*).controller(\"MyCtrl\", function($scope, $timeout) {});","function isLongDef(node) {","    return node.callee &&","        node.callee.object && node.callee.object.name === \"angular\" &&","        node.callee.property && node.callee.property.name === \"module\";","}","","function last(arr) {","    return arr[arr.length - 1];","}","","function matchProp(name, props) {","    for (var i = 0; i < props.length; i++) {","        var prop = props[i];","        if ((prop.key.type === \"Identifier\" && prop.key.name === name) ||","            (prop.key.type === \"Literal\" && prop.key.value === name)) {","            return prop.value; // FunctionExpression or ArrayExpression","        }","    }","    return null;","}","","function matchResolve(props) {","    var resolveObject = matchProp(\"resolve\", props);","    if (resolveObject && resolveObject.type === \"ObjectExpression\") {","        return resolveObject.properties.map(function(prop) {","            return prop.value;","        });","    }","    return [];","};","","function renamedString(ctx, originalString) {","    if (ctx.rename) {","        return ctx.rename.get(originalString) || originalString;","    }","    return originalString;","}","","function stringify(ctx, arr, quot) {","    return \"[\" + arr.map(function(arg) {","        return quot + renamedString(ctx, arg.name) + quot;","    }).join(\", \") + \"]\";","}","","function parseExpressionOfType(str, type) {","    var node = parser(str).body[0].expression;","    assert(node.type === type);","    return node;","}","","// stand-in for not having a jsshaper-style ref's","function replaceNodeWith(node, newNode) {","    var done = false;","    var parent = node.$parent;","    var keys = Object.keys(parent);","    keys.forEach(function(key) {","        if (parent[key] === node) {","            parent[key] = newNode;","            done = true;","        }","    });","","    if (done) {","        return;","    }","","    // second pass, now check arrays","    keys.forEach(function(key) {","        if (Array.isArray(parent[key])) {","            var arr = parent[key];","            for (var i = 0; i < arr.length; i++) {","                if (arr[i] === node) {","                    arr[i] = newNode;","                    done = true;","                }","            }","        }","    });","","    assert(done);","}","","function insertArray(ctx, functionExpression, fragments, quot) {","    var args = stringify(ctx, functionExpression.params, quot);","","    fragments.push({","        start: functionExpression.range[0],","        end: functionExpression.range[0],","        str: args.slice(0, -1) + \", \",","        loc: {","            start: functionExpression.loc.start,","            end: functionExpression.loc.start","        }","    });","    fragments.push({","        start: functionExpression.range[1],","        end: functionExpression.range[1],","        str: \"]\",","        loc: {","            start: functionExpression.loc.end,","            end: functionExpression.loc.end","        }","    });","}","","function replaceArray(ctx, array, fragments, quot) {","    var functionExpression = last(array.elements);","","    if (functionExpression.params.length === 0) {","        return removeArray(array, fragments);","    }","","    var args = stringify(ctx, functionExpression.params, quot);","    fragments.push({","        start: array.range[0],","        end: functionExpression.range[0],","        str: args.slice(0, -1) + \", \",","        loc: {","            start: array.loc.start,","            end: functionExpression.loc.start","        }","    });","}","","function removeArray(array, fragments) {","    var functionExpression = last(array.elements);","","    fragments.push({","        start: array.range[0],","        end: functionExpression.range[0],","        str: \"\",","        loc: {","            start: array.loc.start,","            end: functionExpression.loc.start","        }","    });","    fragments.push({","        start: functionExpression.range[1],","        end: array.range[1],","        str: \"\",","        loc: {","            start: functionExpression.loc.end,","            end: array.loc.end","        }","    });","}","","function renameProviderDeclarationSite(ctx, literalNode, fragments) {","    fragments.push({","        start: literalNode.range[0] + 1,","        end: literalNode.range[1] - 1,","        str: renamedString(ctx, literalNode.value),","        loc: {","            start: {","                line: literalNode.loc.start.line,","                column: literalNode.loc.start.column + 1","            }, end: {","                line: literalNode.loc.end.line,","                column: literalNode.loc.end.column - 1","            }","        }","    });","}","","function judgeSuspects(ctx) {","    var mode = ctx.mode;","    var fragments = ctx.fragments;","    var quot = ctx.quot;","    var blocked = ctx.blocked;","","    var suspects = makeUnique(ctx.suspects, 1);","","    for (var n = 0; n < 42; n++) {","        // could be while(true), above is just a safety-net","        // in practice it will loop just a couple of times","        propagateModuleContextAndMethodName(suspects);","        if (!setChainedAndMethodNameThroughIifesAndReferences(suspects)) {","            break;","        }","    }","","    // create final suspects by jumping, following, uniq'ing, blocking","    var finalSuspects = makeUnique(suspects.map(function(target) {","        var jumped = jumpOverIife(target);","        var jumpedAndFollowed = followReference(jumped) || jumped;","","        if (target.$limitToMethodName && target.$limitToMethodName !== \"*never*\" && findOuterMethodName(target) !== target.$limitToMethodName) {","            return null;","        }","","        if (blocked.indexOf(jumpedAndFollowed) >= 0) {","            return null;","        }","","        return jumpedAndFollowed;","    }).filter(Boolean), 2);","","    finalSuspects.forEach(function(target) {","        if (target.$chained !== chainedRegular) {","            return;","        }","","        if (mode === \"rebuild\" && isAnnotatedArray(target)) {","            replaceArray(ctx, target, fragments, quot);","        } else if (mode === \"remove\" && isAnnotatedArray(target)) {","            removeArray(target, fragments);","        } else if (is.someof(mode, [\"add\", \"rebuild\"]) && isFunctionExpressionWithArgs(target)) {","            insertArray(ctx, target, fragments, quot);","        } else if (isGenericProviderName(target)) {","            renameProviderDeclarationSite(ctx, target, fragments);","        } else {","            // if it's not array or function-expression, then it's a candidate for foo.$inject = [..]","            judgeInjectArraySuspect(target, ctx);","        }","    });","","","    function propagateModuleContextAndMethodName(suspects) {","        suspects.forEach(function(target) {","            if (target.$chained !== chainedRegular && isInsideModuleContext(target)) {","                target.$chained = chainedRegular;","            }","","            if (!target.$methodName) {","                var methodName = findOuterMethodName(target);","                if (methodName) {","                    target.$methodName = methodName;","                }","            }","        });","    }","","    function findOuterMethodName(node) {","        for (; node && !node.$methodName; node = node.$parent) {","        }","        return node ? node.$methodName : null;","    }","","    function setChainedAndMethodNameThroughIifesAndReferences(suspects) {","        var modified = false;","        suspects.forEach(function(target) {","            var jumped = jumpOverIife(target);","            if (jumped !== target) { // we did skip an IIFE","                if (target.$chained === chainedRegular && jumped.$chained !== chainedRegular) {","                    modified = true;","                    jumped.$chained = chainedRegular;","                }","                if (target.$methodName && !jumped.$methodName) {","                    modified = true;","                    jumped.$methodName = target.$methodName;","                }","            }","","            var jumpedAndFollowed = followReference(jumped) || jumped;","            if (jumpedAndFollowed !== jumped) { // we did follow a reference","                if (jumped.$chained === chainedRegular && jumpedAndFollowed.$chained !== chainedRegular) {","                    modified = true;","                    jumpedAndFollowed.$chained = chainedRegular;","                }","                if (jumped.$methodName && !jumpedAndFollowed.$methodName) {","                    modified = true;","                    jumpedAndFollowed.$methodName = jumped.$methodName;","                }","            }","        });","        return modified;","    }","","    function isInsideModuleContext(node) {","        var $parent = node.$parent;","        for (; $parent && $parent.$chained !== chainedRegular; $parent = $parent.$parent) {","        }","        return Boolean($parent);","    }","","    function makeUnique(suspects, val) {","        return suspects.filter(function(target) {","            if (target.$seen === val) {","                return false;","            }","            target.$seen = val;","            return true;","        });","    }","}","","function followReference(node) {","    if (!scopeTools.isReference(node)) {","        return null;","    }","","    var scope = node.$scope.lookup(node.name);","    if (!scope) {","        return null;","    }","","    var parent = scope.getNode(node.name).$parent;","    var kind = scope.getKind(node.name);","    if (!parent) {","        return null;","    }","    var ptype = parent.type;","","    if (is.someof(kind, [\"const\", \"let\", \"var\"])) {","        assert(ptype === \"VariableDeclarator\");","        // {type: \"VariableDeclarator\", id: {type: \"Identifier\", name: \"foo\"}, init: ..}","        return parent;","    } else if (kind === \"fun\") {","        assert(ptype === \"FunctionDeclaration\" || ptype === \"FunctionExpression\")","        // FunctionDeclaration is the common case, i.e.","        // function foo(a, b) {}","","        // FunctionExpression is only applicable for cases similar to","        // var f = function asdf(a,b) { mymod.controller(\"asdf\", asdf) };","        return parent;","    }","","    // other kinds should not be handled (\"param\", \"caught\")","","    return null;","}","","// O(srclength) so should only be used for debugging purposes, else replace with lut","function posToLine(pos, src) {","    if (pos >= src.length) {","        pos = src.length - 1;","    }","","    if (pos <= -1) {","        return -1;","    }","","    var line = 1;","    for (var i = 0; i < pos; i++) {","        if (src[i] === \"\\n\") {","            ++line;","        }","    }","","    return line;","}","","function firstNonPrologueStatement(body) {","    for (var i = 0; i < body.length; i++) {","        if (body[i].type !== \"ExpressionStatement\") {","            return body[i];","        }","","        var expr = body[i].expression;","        var isStringLiteral = (expr.type === \"Literal\" && typeof expr.value === \"string\");","        if (!isStringLiteral) {","            return body[i];","        }","    }","    return null;","}","","function judgeInjectArraySuspect(node, ctx) {","    if (node.type === \"VariableDeclaration\") {","        // suspect can only be a VariableDeclaration (statement) in case of","        // explicitly marked via /*@ngInject*/, not via references because","        // references follow to VariableDeclarator (child)","","        // /*@ngInject*/ var foo = function($scope) {} and","","        if (node.declarations.length !== 1) {","            // more than one declarator => exit","            return;","        }","","        // one declarator => jump over declaration into declarator","        // rest of code will treat it as any (referenced) declarator","        node = node.declarations[0];","    }","","    // onode is a top-level node (inside function block), later verified","    // node is inner match, descent in multiple steps","    var onode = null;","    var declaratorName = null;","    if (node.type === \"VariableDeclarator\") {","        onode = node.$parent;","        declaratorName = node.id.name;","        node = node.init; // var foo = ___;","    } else {","        onode = node;","    }","","    // suspect must be inside of a block or at the top-level (i.e. inside of node.$parent.body[])","    if (!node || !onode.$parent || is.noneof(onode.$parent.type, [\"Program\", \"BlockStatement\"])) {","        return;","    }","","    var insertPos = {","        pos: onode.range[1],","        loc: onode.loc.end","    };","    var isSemicolonTerminated = (ctx.src[insertPos.pos - 1] === \";\");","","    node = jumpOverIife(node);","","    if (ctx.isFunctionExpressionWithArgs(node)) {","        // var x = 1, y = function(a,b) {}, z;","","        assert(declaratorName);","        addRemoveInjectArray(","            node.params,","            isSemicolonTerminated ? insertPos : {","                pos: node.range[1],","                loc: node.loc.end","            },","            declaratorName);","","    } else if (ctx.isFunctionDeclarationWithArgs(node)) {","        // /*@ngInject*/ function foo($scope) {}","","        addRemoveInjectArray(","            node.params,","            insertPos,","            node.id.name);","","    } else if (node.type === \"ExpressionStatement\" && node.expression.type === \"AssignmentExpression\" &&","        ctx.isFunctionExpressionWithArgs(node.expression.right)) {","        // /*@ngInject*/ foo.bar[0] = function($scope) {}","","        var name = ctx.srcForRange(node.expression.left.range);","        addRemoveInjectArray(","            node.expression.right.params,","            isSemicolonTerminated ? insertPos : {","                pos: node.expression.right.range[1],","                loc: node.expression.right.loc.end","            },","            name);","","    } else if (node = followReference(node)) {","        // node was a reference and followed node now is either a","        // FunctionDeclaration or a VariableDeclarator","        // => recurse","","        judgeInjectArraySuspect(node, ctx);","    }","","","    function getIndent(pos) {","        var src = ctx.src;","        var lineStart = src.lastIndexOf(\"\\n\", pos - 1) + 1;","        var i = lineStart;","        for (; src[i] === \" \" || src[i] === \"\\t\"; i++) {","        }","        return src.slice(lineStart, i);","    }","","    function addRemoveInjectArray(params, posAfterFunctionDeclaration, name) {","        // if an existing something.$inject = [..] exists then is will always be recycled when rebuilding","","        var indent = getIndent(posAfterFunctionDeclaration.pos);","","        var foundSuspectInBody = false;","        var existingExpressionStatementWithArray = null;","        var nodeAfterExtends = null;","        onode.$parent.body.forEach(function(bnode, idx) {","            if (bnode === onode) {","                foundSuspectInBody = true;","            }","","            if (hasInjectArray(bnode)) {","                if (existingExpressionStatementWithArray) {","                    throw fmt(\"conflicting inject arrays at line {0} and {1}\",","                        posToLine(existingExpressionStatementWithArray.range[0], ctx.src),","                        posToLine(bnode.range[0], ctx.src));","                }","                existingExpressionStatementWithArray = bnode;","            }","","            var e;","            if (!nodeAfterExtends && !foundSuspectInBody && bnode.type === \"ExpressionStatement\" && (e = bnode.expression).type === \"CallExpression\" && e.callee.type === \"Identifier\" && e.callee.name === \"__extends\") {","                var nextStatement = onode.$parent.body[idx + 1];","                if (nextStatement) {","                    nodeAfterExtends = nextStatement;","                }","            }","        });","        assert(foundSuspectInBody);","        if (onode.type === \"FunctionDeclaration\") {","            if (!nodeAfterExtends) {","                nodeAfterExtends = firstNonPrologueStatement(onode.$parent.body);","            }","            if (nodeAfterExtends && !existingExpressionStatementWithArray) {","                posAfterFunctionDeclaration = skipPrevNewline(nodeAfterExtends.range[0], nodeAfterExtends.loc.start);","            }","        }","","        function hasInjectArray(node) {","            var lvalue;","            var assignment;","            return (node && node.type === \"ExpressionStatement\" && (assignment = node.expression).type === \"AssignmentExpression\" &&","                assignment.operator === \"=\" &&","                (lvalue = assignment.left).type === \"MemberExpression\" &&","                ((lvalue.computed === false && ctx.srcForRange(lvalue.object.range) === name && lvalue.property.name === \"$inject\") ||","                    (lvalue.computed === true && ctx.srcForRange(lvalue.object.range) === name && lvalue.property.type === \"Literal\" && lvalue.property.value === \"$inject\")));","        }","","        function skipPrevNewline(pos, loc) {","            var prevLF = ctx.src.lastIndexOf(\"\\n\", pos);","            if (prevLF === -1) {","                return { pos: pos, loc: loc };","            }","            if (prevLF >= 1 && ctx.src[prevLF - 1] === \"\\r\") {","                --prevLF;","            }","","            if (/\\S/g.test(ctx.src.slice(prevLF, pos - 1))) { // any non-whitespace chars between prev newline and pos?","                return { pos: pos, loc: loc };","            }","","            return {","                pos: prevLF,","                loc: {","                    line: loc.line - 1,","                    column: prevLF - ctx.src.lastIndexOf(\"\\n\", prevLF) - 1,","                }","            };","        }","","        if (ctx.mode === \"rebuild\" && existingExpressionStatementWithArray) {","            var strNoWhitespace = fmt(\"{2}.$inject = {3};\", null, null, name, ctx.stringify(ctx, params, ctx.quot));","            ctx.fragments.push({","                start: existingExpressionStatementWithArray.range[0],","                end: existingExpressionStatementWithArray.range[1],","                str: strNoWhitespace,","                loc: {","                    start: existingExpressionStatementWithArray.loc.start,","                    end: existingExpressionStatementWithArray.loc.end","                }","            });","        } else if (ctx.mode === \"remove\" && existingExpressionStatementWithArray) {","            var start = skipPrevNewline(existingExpressionStatementWithArray.range[0], existingExpressionStatementWithArray.loc.start);","            ctx.fragments.push({","                start: start.pos,","                end: existingExpressionStatementWithArray.range[1],","                str: \"\",","                loc: {","                    start: start.loc,","                    end: existingExpressionStatementWithArray.loc.end","                }","            });","        } else if (is.someof(ctx.mode, [\"add\", \"rebuild\"]) && !existingExpressionStatementWithArray) {","            var str = fmt(\"{0}{1}{2}.$inject = {3};\", EOL, indent, name, ctx.stringify(ctx, params, ctx.quot));","            ctx.fragments.push({","                start: posAfterFunctionDeclaration.pos,","                end: posAfterFunctionDeclaration.pos,","                str: str,","                loc: {","                    start: posAfterFunctionDeclaration.loc,","                    end: posAfterFunctionDeclaration.loc","                }","            });","        }","    }","}","","function jumpOverIife(node) {","    var outerfn;","    if (!(node.type === \"CallExpression\" && (outerfn = node.callee).type === \"FunctionExpression\")) {","        return node;","    }","","    var outerbody = outerfn.body.body;","    for (var i = 0; i < outerbody.length; i++) {","        var statement = outerbody[i];","        if (statement.type === \"ReturnStatement\") {","            return statement.argument;","        }","    }","","    return node;","}","","function addModuleContextDependentSuspect(target, ctx) {","    ctx.suspects.push(target);","}","","function addModuleContextIndependentSuspect(target, ctx) {","    target.$chained = chainedRegular;","    ctx.suspects.push(target);","}","","function isAnnotatedArray(node) {","    if (node.type !== \"ArrayExpression\") {","        return false;","    }","    var elements = node.elements;","","    // last should be a function expression","    if (elements.length === 0 || last(elements).type !== \"FunctionExpression\") {","        return false;","    }","","    // all but last should be string literals","    for (var i = 0; i < elements.length - 1; i++) {","        var n = elements[i];","        if (n.type !== \"Literal\" || !is.string(n.value)) {","            return false;","        }","    }","","    return true;","}","function isFunctionExpressionWithArgs(node) {","    return node.type === \"FunctionExpression\" && node.params.length >= 1;","}","function isFunctionDeclarationWithArgs(node) {","    return node.type === \"FunctionDeclaration\" && node.params.length >= 1;","}","function isGenericProviderName(node) {","    return node.type === \"Literal\" && is.string(node.value);","}","","function uniqifyFragments(fragments) {","    // must do in-place modification of ctx.fragments because shared reference","","    var map = Object.create(null);","    for (var i = 0; i < fragments.length; i++) {","        var frag = fragments[i];","        var str = JSON.stringify({start: frag.start, end: frag.end, str: frag.str});","        if (map[str]) {","            fragments.splice(i, 1); // remove","            i--;","        } else {","            map[str] = true;","        }","    }","}","","var allOptionals = {","    \"angular-dashboard-framework\": optionalAngularDashboardFramework,","};","","module.exports = function ngAnnotate(src, options) {","    if (options.list) {","        return {","            list: Object.keys(allOptionals).sort(),","        };","    }","","    var mode = (options.add && options.remove ? \"rebuild\" :","        options.remove ? \"remove\" :","            options.add ? \"add\" : null);","","    if (!mode) {","        return {src: src};","    }","","    var quot = options.single_quotes ? \"'\" : '\"';","    var re = (options.regexp ? new RegExp(options.regexp) : /^[a-zA-Z0-9_\\$\\.\\s]+$/);","    var rename = new stringmap();","    if (options.rename) {","        options.rename.forEach(function(value) {","            rename.set(value.from, value.to);","        });","    }","    var ast;","    var stats = {};","","    // detect newline and override os.EOL","    var lf = src.lastIndexOf(\"\\n\");","    if (lf >= 1) {","        EOL = (src[lf - 1] === \"\\r\" ? \"\\r\\n\" : \"\\n\");","    }","","    // [{type: \"Block\"|\"Line\", value: str, range: [from,to]}, ..]","    var comments = [];","","    try {","        stats.parser_require_t0 = require_acorn_t0;","        stats.parser_require_t1 = require_acorn_t1;","        stats.parser_parse_t0 = Date.now();","        // acorn","        ast = parser(src, {","            ecmaVersion: 6,","            allowReserved: true,","            locations: true,","            ranges: true,","            onComment: comments,","        });","        stats.parser_parse_t1 = Date.now();","    } catch(e) {","        return {","            errors: [\"error: couldn't process source due to parse error\", e.message],","        };","    }","","    // append a dummy-node to ast so that lut.findNodeFromPos(lastPos) returns something","    ast.body.push({","        type: \"DebuggerStatement\",","        range: [ast.range[1], ast.range[1]],","        loc: {","            start: ast.loc.end,","            end: ast.loc.end","        }","    });","","    // all source modifications are built up as operations in the","    // fragments array, later sent to alter in one shot","    var fragments = [];","","    // suspects is built up with suspect nodes by match.","    // A suspect node will get annotations added / removed if it","    // fulfills the arrayexpression or functionexpression look,","    // and if it is in the correct context (inside an angular","    // module definition)","    var suspects = [];","","    // blocked is an array of blocked suspects. Any target node","    // (final, i.e. IIFE-jumped, reference-followed and such) included","    // in blocked will be ignored by judgeSuspects","    var blocked = [];","","    // Position information for all nodes in the AST,","    // used for sourcemap generation","    var nodePositions = [];","","    var lut = new Lut(ast, src);","","    scopeTools.setupScopeAndReferences(ast);","","    var ctx = {","        mode: mode,","        quot: quot,","        src: src,","        srcForRange: function(range) {","            return src.slice(range[0], range[1]);","        },","        re: re,","        rename: rename,","        comments: comments,","        fragments: fragments,","        suspects: suspects,","        blocked: blocked,","        lut: lut,","        isFunctionExpressionWithArgs: isFunctionExpressionWithArgs,","        isFunctionDeclarationWithArgs: isFunctionDeclarationWithArgs,","        isAnnotatedArray: isAnnotatedArray,","        addModuleContextDependentSuspect: addModuleContextDependentSuspect,","        addModuleContextIndependentSuspect: addModuleContextIndependentSuspect,","        stringify: stringify,","        nodePositions: nodePositions,","        matchResolve: matchResolve,","        matchProp: matchProp,","        last: last,","    };","","    // setup optionals","    var optionals = options.enable || [];","    for (var i = 0; i < optionals.length; i++) {","        var optional = String(optionals[i]);","        if (!allOptionals.hasOwnProperty(optional)) {","            return {","                errors: [\"error: found no optional named \" + optional],","            };","        }","    }","    var optionalsPlugins = optionals.map(function(optional) {","        return allOptionals[optional];","    });","","    var plugins = [].concat(optionalsPlugins, options.plugin || []);","","    function matchPlugins(node, isMethodCall) {","        for (var i = 0; i < plugins.length; i++) {","            var res = plugins[i].match(node, isMethodCall);","            if (res) {","                return res;","            }","        }","        return false;","    }","    var matchPluginsOrNull = (plugins.length === 0 ? null : matchPlugins);","","    ngInject.inspectComments(ctx);","    plugins.forEach(function(plugin) {","        plugin.init(ctx);","    });","","    traverse(ast, {pre: function(node) {","        ngInject.inspectNode(node, ctx);","","    }, post: function(node) {","        ctx.nodePositions.push(node.loc.start);","        var targets = match(node, ctx, matchPluginsOrNull);","        if (!targets) {","            return;","        }","        if (!is.array(targets)) {","            targets = [targets];","        }","","        for (var i = 0; i < targets.length; i++) {","            addModuleContextDependentSuspect(targets[i], ctx);","        }","    }});","","    try {","        judgeSuspects(ctx);","    } catch(e) {","        return {","            errors: [\"error: \" + e],","        };","    }","","    uniqifyFragments(ctx.fragments);","","    var out = alter(src, fragments);","    var result = {","        src: out,","        _stats: stats,","    };","","    if (options.map) {","        if (typeof(options.map) !== 'object')","            options.map = {};","        stats.sourcemap_t0 = Date.now();","        generateSourcemap(result, src, nodePositions, fragments, options.map);","        stats.sourcemap_t1 = Date.now();","    }","","    return result;","}",""],"l":{"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"22":1,"23":1,"24":1,"25":1,"27":1,"28":0,"38":0,"41":0,"47":1,"54":0,"55":0,"56":0,"57":0,"59":0,"62":0,"63":0,"64":0,"65":0,"67":0,"70":1,"74":0,"79":1,"80":0,"81":0,"83":0,"86":1,"90":0,"91":0,"92":0,"99":1,"107":0,"108":0,"109":0,"110":0,"112":0,"114":0,"115":0,"116":0,"119":0,"120":0,"121":0,"123":0,"124":0,"125":0,"128":0,"129":0,"133":0,"135":0,"136":0,"139":1,"160":0,"161":0,"162":0,"163":0,"166":0,"167":0,"169":0,"170":0,"172":0,"176":0,"177":0,"179":0,"181":0,"182":0,"187":0,"188":0,"191":0,"193":0,"195":0,"197":0,"198":0,"201":1,"202":0,"203":0,"206":0,"208":0,"210":0,"211":0,"213":0,"214":0,"216":0,"219":1,"220":0,"227":0,"230":0,"233":0,"234":0,"235":0,"236":0,"237":0,"239":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"259":1,"263":0,"264":0,"265":0,"267":0,"272":1,"277":0,"278":0,"279":0,"281":0,"287":1,"291":0,"292":0,"293":0,"294":0,"296":0,"299":0,"300":0,"302":0,"305":1,"312":0,"313":0,"314":0,"315":0,"317":0,"321":0,"322":0,"324":0,"326":0,"329":0,"332":1,"334":0,"335":0,"336":0,"340":0,"341":0,"342":0,"343":0,"344":0,"350":0,"351":0,"354":0,"356":0,"357":0,"359":0,"361":0,"362":0,"365":0,"366":0,"370":0,"371":0,"372":0,"373":0,"375":0,"378":0,"379":0,"382":0,"384":0,"385":0,"387":0,"395":1,"396":0,"400":1,"401":0,"406":1,"407":0,"410":1,"411":0,"412":0,"413":0,"415":0,"418":0,"421":1,"422":0,"423":0,"424":0,"425":0,"428":0,"431":1,"432":0,"433":0,"435":0,"438":1,"439":0,"440":0,"444":1,"445":0,"446":0,"447":0,"451":1,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"462":0,"463":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"479":0,"482":1,"483":0,"485":0,"494":0,"505":1,"506":0,"508":0,"509":0,"512":0,"513":0,"524":1,"525":0,"527":0,"536":0,"547":1,"548":0,"564":1,"565":0,"566":0,"567":0,"568":0,"570":0,"572":0,"575":0,"576":0,"577":0,"582":0,"583":0,"584":0,"586":0,"587":0,"590":0,"591":0,"594":0,"597":0,"598":0,"599":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"612":0,"617":1,"618":0,"619":0,"620":0,"623":0,"624":0,"625":0,"626":0,"632":1,"633":0,"635":0,"638":1,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"647":0,"648":0,"649":0,"653":0,"654":0,"655":0,"656":0,"657":0,"659":0,"660":0,"661":0,"665":0,"668":1,"669":0,"670":0,"672":0,"675":1,"676":0,"677":0,"678":0,"680":0,"681":0,"686":1,"687":0,"688":0,"691":0,"692":0,"693":0,"696":0,"697":0,"698":0,"699":0,"701":0,"703":0,"704":0,"706":0,"707":0,"708":0,"714":0,"719":0,"723":1,"724":0,"725":0,"728":0,"729":0,"732":0,"733":0,"734":0,"735":0,"739":0,"742":1,"743":0,"744":0,"745":0,"748":0,"749":0,"750":0,"751":0,"754":0,"757":1,"758":0,"765":0,"767":0,"772":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"784":0,"788":0,"789":0,"792":0,"796":0,"798":0,"800":0,"803":0,"804":0,"812":0,"815":0,"820":0,"824":0,"825":0,"833":0,"838":0,"842":1,"843":0,"844":0,"845":0,"846":0,"848":0,"851":1,"854":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"864":0,"865":0,"866":0,"870":0,"873":0,"874":0,"875":0,"876":0,"877":0,"881":0,"882":0,"883":0,"884":0,"886":0,"887":0,"891":1,"892":0,"893":0,"894":0,"901":1,"902":0,"903":0,"904":0,"906":0,"907":0,"910":0,"911":0,"914":0,"923":0,"924":0,"925":0,"934":0,"935":0,"936":0,"945":0,"946":0,"947":0,"960":1,"961":0,"962":0,"963":0,"966":0,"967":0,"968":0,"969":0,"970":0,"974":0,"977":1,"978":0,"981":1,"982":0,"983":0,"986":1,"987":0,"988":0,"990":0,"993":0,"994":0,"998":0,"999":0,"1000":0,"1001":0,"1005":0,"1007":1,"1008":0,"1010":1,"1011":0,"1013":1,"1014":0,"1017":1,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1028":0,"1033":1,"1037":1,"1038":0,"1039":0,"1044":0,"1048":0,"1049":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1060":0,"1061":0,"1064":0,"1065":0,"1066":0,"1070":0,"1072":0,"1073":0,"1074":0,"1075":0,"1077":0,"1084":0,"1086":0,"1092":0,"1103":0,"1110":0,"1115":0,"1119":0,"1121":0,"1123":0,"1125":0,"1130":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1161":0,"1162":0,"1165":0,"1167":1,"1168":0,"1169":0,"1170":0,"1171":0,"1174":0,"1176":0,"1178":0,"1179":0,"1180":0,"1183":0,"1184":0,"1187":0,"1188":0,"1189":0,"1190":0,"1192":0,"1193":0,"1196":0,"1197":0,"1201":0,"1202":0,"1204":0,"1209":0,"1211":0,"1212":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1225":0}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/nginject.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/nginject.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"inspectNode","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":32}}},"2":{"name":"inspectCallExpression","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":42}}},"3":{"name":"inspectFunction","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":36}}},"4":{"name":"matchPrologueDirectives","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":59}}},"5":{"name":"inspectComments","line":105,"loc":{"start":{"line":105,"column":0},"end":{"line":105,"column":30}}},"6":{"name":"isStringArray","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":29}}},"7":{"name":"(anonymous_7)","line":128,"loc":{"start":{"line":128,"column":60},"end":{"line":128,"column":72}}},"8":{"name":"findNextStatement","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":33}}},"9":{"name":"addSuspect","line":143,"loc":{"start":{"line":143,"column":0},"end":{"line":143,"column":40}}},"10":{"name":"addObjectExpression","line":177,"loc":{"start":{"line":177,"column":4},"end":{"line":177,"column":44}}},"11":{"name":"(anonymous_11)","line":178,"loc":{"start":{"line":178,"column":41},"end":{"line":178,"column":53}}},"12":{"name":"addOrBlock","line":184,"loc":{"start":{"line":184,"column":4},"end":{"line":184,"column":35}}},"13":{"name":"nestedObjectValues","line":193,"loc":{"start":{"line":193,"column":0},"end":{"line":193,"column":39}}},"14":{"name":"(anonymous_14)","line":196,"loc":{"start":{"line":196,"column":28},"end":{"line":196,"column":43}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"2":{"start":{"line":9,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":14,"column":0},"end":{"line":20,"column":1}},"4":{"start":{"line":15,"column":4},"end":{"line":19,"column":5}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":41}},"6":{"start":{"line":17,"column":11},"end":{"line":19,"column":5}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":35}},"8":{"start":{"line":22,"column":0},"end":{"line":28,"column":1}},"9":{"start":{"line":23,"column":4},"end":{"line":23,"column":32}},"10":{"start":{"line":24,"column":4},"end":{"line":27,"column":5}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":44}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":50}},"13":{"start":{"line":30,"column":0},"end":{"line":30,"column":62}},"14":{"start":{"line":32,"column":0},"end":{"line":79,"column":1}},"15":{"start":{"line":33,"column":4},"end":{"line":33,"column":74}},"16":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"17":{"start":{"line":35,"column":8},"end":{"line":35,"column":15}},"18":{"start":{"line":37,"column":4},"end":{"line":37,"column":39}},"19":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"20":{"start":{"line":43,"column":8},"end":{"line":43,"column":37}},"21":{"start":{"line":44,"column":8},"end":{"line":44,"column":15}},"22":{"start":{"line":56,"column":4},"end":{"line":59,"column":5}},"23":{"start":{"line":57,"column":8},"end":{"line":57,"column":45}},"24":{"start":{"line":58,"column":8},"end":{"line":58,"column":15}},"25":{"start":{"line":73,"column":4},"end":{"line":73,"column":44}},"26":{"start":{"line":74,"column":4},"end":{"line":78,"column":5}},"27":{"start":{"line":75,"column":8},"end":{"line":75,"column":53}},"28":{"start":{"line":77,"column":8},"end":{"line":77,"column":37}},"29":{"start":{"line":81,"column":0},"end":{"line":103,"column":1}},"30":{"start":{"line":82,"column":4},"end":{"line":82,"column":30}},"31":{"start":{"line":84,"column":4},"end":{"line":84,"column":21}},"32":{"start":{"line":85,"column":4},"end":{"line":100,"column":5}},"33":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"34":{"start":{"line":87,"column":12},"end":{"line":87,"column":18}},"35":{"start":{"line":90,"column":8},"end":{"line":90,"column":38}},"36":{"start":{"line":91,"column":8},"end":{"line":91,"column":90}},"37":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"38":{"start":{"line":93,"column":12},"end":{"line":93,"column":18}},"39":{"start":{"line":96,"column":8},"end":{"line":99,"column":9}},"40":{"start":{"line":97,"column":12},"end":{"line":97,"column":31}},"41":{"start":{"line":98,"column":12},"end":{"line":98,"column":18}},"42":{"start":{"line":102,"column":4},"end":{"line":102,"column":17}},"43":{"start":{"line":105,"column":0},"end":{"line":122,"column":1}},"44":{"start":{"line":106,"column":4},"end":{"line":106,"column":32}},"45":{"start":{"line":107,"column":4},"end":{"line":121,"column":5}},"46":{"start":{"line":108,"column":8},"end":{"line":108,"column":34}},"47":{"start":{"line":109,"column":8},"end":{"line":109,"column":56}},"48":{"start":{"line":110,"column":8},"end":{"line":110,"column":80}},"49":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"50":{"start":{"line":112,"column":12},"end":{"line":112,"column":21}},"51":{"start":{"line":115,"column":8},"end":{"line":115,"column":63}},"52":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"53":{"start":{"line":117,"column":12},"end":{"line":117,"column":21}},"54":{"start":{"line":120,"column":8},"end":{"line":120,"column":44}},"55":{"start":{"line":124,"column":0},"end":{"line":131,"column":1}},"56":{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},"57":{"start":{"line":126,"column":8},"end":{"line":126,"column":21}},"58":{"start":{"line":128,"column":4},"end":{"line":130,"column":7}},"59":{"start":{"line":129,"column":8},"end":{"line":129,"column":58}},"60":{"start":{"line":133,"column":0},"end":{"line":141,"column":1}},"61":{"start":{"line":134,"column":4},"end":{"line":134,"column":33}},"62":{"start":{"line":135,"column":4},"end":{"line":139,"column":5}},"63":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"64":{"start":{"line":137,"column":12},"end":{"line":137,"column":39}},"65":{"start":{"line":140,"column":4},"end":{"line":140,"column":16}},"66":{"start":{"line":143,"column":0},"end":{"line":191,"column":1}},"67":{"start":{"line":144,"column":4},"end":{"line":152,"column":5}},"68":{"start":{"line":148,"column":8},"end":{"line":148,"column":55}},"69":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"70":{"start":{"line":150,"column":12},"end":{"line":150,"column":58}},"71":{"start":{"line":154,"column":4},"end":{"line":174,"column":5}},"72":{"start":{"line":156,"column":8},"end":{"line":156,"column":41}},"73":{"start":{"line":157,"column":11},"end":{"line":174,"column":5}},"74":{"start":{"line":159,"column":8},"end":{"line":159,"column":47}},"75":{"start":{"line":160,"column":11},"end":{"line":174,"column":5}},"76":{"start":{"line":162,"column":8},"end":{"line":162,"column":58}},"77":{"start":{"line":163,"column":11},"end":{"line":174,"column":5}},"78":{"start":{"line":165,"column":8},"end":{"line":165,"column":62}},"79":{"start":{"line":166,"column":11},"end":{"line":174,"column":5}},"80":{"start":{"line":168,"column":8},"end":{"line":168,"column":52}},"81":{"start":{"line":169,"column":8},"end":{"line":169,"column":38}},"82":{"start":{"line":172,"column":8},"end":{"line":172,"column":46}},"83":{"start":{"line":173,"column":8},"end":{"line":173,"column":32}},"84":{"start":{"line":177,"column":4},"end":{"line":182,"column":5}},"85":{"start":{"line":178,"column":8},"end":{"line":181,"column":11}},"86":{"start":{"line":179,"column":12},"end":{"line":179,"column":45}},"87":{"start":{"line":180,"column":12},"end":{"line":180,"column":31}},"88":{"start":{"line":184,"column":4},"end":{"line":190,"column":5}},"89":{"start":{"line":185,"column":8},"end":{"line":189,"column":9}},"90":{"start":{"line":186,"column":12},"end":{"line":186,"column":35}},"91":{"start":{"line":188,"column":12},"end":{"line":188,"column":61}},"92":{"start":{"line":193,"column":0},"end":{"line":206,"column":1}},"93":{"start":{"line":194,"column":4},"end":{"line":194,"column":20}},"94":{"start":{"line":196,"column":4},"end":{"line":203,"column":7}},"95":{"start":{"line":197,"column":8},"end":{"line":197,"column":27}},"96":{"start":{"line":198,"column":8},"end":{"line":202,"column":9}},"97":{"start":{"line":199,"column":12},"end":{"line":199,"column":24}},"98":{"start":{"line":200,"column":15},"end":{"line":202,"column":9}},"99":{"start":{"line":201,"column":12},"end":{"line":201,"column":39}},"100":{"start":{"line":205,"column":4},"end":{"line":205,"column":15}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":11},"end":{"line":17,"column":11}},{"start":{"line":17,"column":11},"end":{"line":17,"column":11}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":15},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":88}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"5":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":41}},{"start":{"line":24,"column":46},"end":{"line":24,"column":65}},{"start":{"line":24,"column":69},"end":{"line":24,"column":90}},{"start":{"line":24,"column":95},"end":{"line":24,"column":122}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"7":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"8":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"9":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"10":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"11":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":31},"end":{"line":91,"column":54}},{"start":{"line":91,"column":58},"end":{"line":91,"column":88}}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":8}},{"start":{"line":92,"column":8},"end":{"line":92,"column":8}}]},"13":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8}},{"start":{"line":96,"column":8},"end":{"line":96,"column":8}}]},"14":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":37},"end":{"line":110,"column":73}},{"start":{"line":110,"column":76},"end":{"line":110,"column":78}}]},"15":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"16":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":25}},{"start":{"line":111,"column":29},"end":{"line":111,"column":41}}]},"17":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":8}},{"start":{"line":116,"column":8},"end":{"line":116,"column":8}}]},"18":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"19":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":11},"end":{"line":128,"column":36}},{"start":{"line":128,"column":40},"end":{"line":130,"column":6}}]},"20":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":15},"end":{"line":129,"column":35}},{"start":{"line":129,"column":39},"end":{"line":129,"column":57}}]},"21":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]},"22":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":19},"end":{"line":137,"column":30}},{"start":{"line":137,"column":34},"end":{"line":137,"column":38}}]},"23":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"24":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":8},"end":{"line":144,"column":45}},{"start":{"line":144,"column":49},"end":{"line":144,"column":98}},{"start":{"line":144,"column":102},"end":{"line":144,"column":140}}]},"25":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":8}},{"start":{"line":149,"column":8},"end":{"line":149,"column":8}}]},"26":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"27":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":11},"end":{"line":157,"column":11}},{"start":{"line":157,"column":11},"end":{"line":157,"column":11}}]},"28":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":15},"end":{"line":157,"column":53}},{"start":{"line":157,"column":57},"end":{"line":157,"column":97}}]},"29":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":11},"end":{"line":160,"column":11}},{"start":{"line":160,"column":11},"end":{"line":160,"column":11}}]},"30":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":15},"end":{"line":160,"column":52}},{"start":{"line":160,"column":56},"end":{"line":160,"column":105}},{"start":{"line":160,"column":109},"end":{"line":160,"column":160}}]},"31":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":11},"end":{"line":163,"column":11}},{"start":{"line":163,"column":11},"end":{"line":163,"column":11}}]},"32":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":15},"end":{"line":163,"column":52}},{"start":{"line":163,"column":56},"end":{"line":163,"column":88}},{"start":{"line":163,"column":92},"end":{"line":163,"column":119}},{"start":{"line":163,"column":123},"end":{"line":163,"column":178}}]},"33":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":11},"end":{"line":166,"column":11}},{"start":{"line":166,"column":11},"end":{"line":166,"column":11}}]},"34":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":8},"end":{"line":185,"column":8}},{"start":{"line":185,"column":8},"end":{"line":185,"column":8}}]},"35":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":10},"end":{"line":194,"column":13}},{"start":{"line":194,"column":17},"end":{"line":194,"column":19}}]},"36":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":8},"end":{"line":198,"column":8}},{"start":{"line":198,"column":8},"end":{"line":198,"column":8}}]},"37":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":15},"end":{"line":200,"column":15}},{"start":{"line":200,"column":15},"end":{"line":200,"column":15}}]}},"code":["// nginject.js","// MIT licensed, see LICENSE file","// Copyright (c) 2013-2016 Olov Lassus <olov.lassus@gmail.com>","","\"use strict\";","","var is = require(\"simple-is\");","","module.exports = {","    inspectComments: inspectComments,","    inspectNode: inspectNode,","};","","function inspectNode(node, ctx) {","    if (node.type === \"CallExpression\") {","        inspectCallExpression(node, ctx);","    } else if (node.type === \"FunctionExpression\" || node.type === \"FunctionDeclaration\") {","        inspectFunction(node, ctx);","    }","}","","function inspectCallExpression(node, ctx) {","    var name = node.callee.name;","    if (node.callee.type === \"Identifier\" && (name === \"ngInject\" || name === \"ngNoInject\") && node.arguments.length === 1) {","        var block = (name === \"ngNoInject\");","        addSuspect(node.arguments[0], ctx, block);","    }","}","","var ngAnnotatePrologueDirectives = [\"ngInject\", \"ngNoInject\"];","","function inspectFunction(node, ctx) {","    var str = matchPrologueDirectives(ngAnnotatePrologueDirectives, node);","    if (!str) {","        return;","    }","    var block = (str === \"ngNoInject\");","","    // now add the correct suspect","","    // for function declarations, it is always the function declaration node itself","    if (node.type === \"FunctionDeclaration\") {","        addSuspect(node, ctx, block);","        return;","    }","","    // node is a function expression below","","    // case 1: a function expression which is the rhs of a variable declarator, such as","    // var f1 = function(a) {","    //     \"ngInject\"","    // };","    // in this case we can mark the declarator, same as saying var /*@ngInject*/ f1 = function(a) ..","    // or /*@ngInject*/ var f1 = function(a) ..","    // f1.$inject = [\"a\"]; will be added (or rebuilt/removed)","    if (node.$parent.type === \"VariableDeclarator\") {","        addSuspect(node.$parent, ctx, block);","        return;","    }","","    // case 2: an anonymous function expression, such as","    // g(function(a) {","    //     \"ngInject\"","    // });","    //","    // the suspect is now its parent annotated array (if any), otherwise itself","    // there is a risk of false suspects here, in case the parent annotated array has nothing to do","    // with annotations. the risk should be very low and hopefully easy to workaround","    //","    // added/rebuilt/removed => g([\"a\", function(a) {","    //     \"ngInject\"","    // }]);","    var maybeArrayExpression = node.$parent;","    if (ctx.isAnnotatedArray(maybeArrayExpression)) {","        addSuspect(maybeArrayExpression, ctx, block);","    } else {","        addSuspect(node, ctx, block);","    }","}","","function matchPrologueDirectives(prologueDirectives, node) {","    var body = node.body.body;","","    var found = null;","    for (var i = 0; i < body.length; i++) {","        if (body[i].type !== \"ExpressionStatement\") {","            break;","        }","","        var expr = body[i].expression;","        var isStringLiteral = (expr.type === \"Literal\" && typeof expr.value === \"string\");","        if (!isStringLiteral) {","            break;","        }","","        if (prologueDirectives.indexOf(expr.value) >= 0) {","            found = expr.value;","            break;","        }","    }","","    return found;","}","","function inspectComments(ctx) {","    var comments = ctx.comments;","    for (var i = 0; i < comments.length; i++) {","        var comment = comments[i];","        var yesPos = comment.value.indexOf(\"@ngInject\");","        var noPos = (yesPos === -1 ? comment.value.indexOf(\"@ngNoInject\") : -1);","        if (yesPos === -1 && noPos === -1) {","            continue;","        }","","        var target = ctx.lut.findNodeFromPos(comment.range[1]);","        if (!target) {","            continue;","        }","","        addSuspect(target, ctx, noPos >= 0);","    }","}","","function isStringArray(node) {","    if (node.type !== \"ArrayExpression\") {","        return false;","    }","    return node.elements.length >= 1 && node.elements.every(function(n) {","        return n.type === \"Literal\" && is.string(n.value);","    });","}","","function findNextStatement(node) {","    var body = node.$parent.body;","    for (var i = 0; i < body.length; i++) {","        if (body[i] === node) {","            return body[i + 1] || null;","        }","    }","    return null;","}","","function addSuspect(target, ctx, block) {","    if (target.type === \"ExpressionStatement\" && target.expression.type === \"AssignmentExpression\" && isStringArray(target.expression.right)) {","        // /*@ngInject*/","        // FooBar.$inject = [\"$a\", \"$b\"];","        // function FooBar($a, $b) {}","        var adjustedTarget = findNextStatement(target);","        if (adjustedTarget) {","            return addSuspect(adjustedTarget, ctx, block);","        }","    }","","    if (target.type === \"ObjectExpression\") {","        // /*@ngInject*/ {f1: function(a), .., {f2: function(b)}}","        addObjectExpression(target, ctx);","    } else if (target.type === \"AssignmentExpression\" && target.right.type === \"ObjectExpression\") {","        // /*@ngInject*/ f(x.y = {f1: function(a), .., {f2: function(b)}})","        addObjectExpression(target.right, ctx);","    } else if (target.type === \"ExpressionStatement\" && target.expression.type === \"AssignmentExpression\" && target.expression.right.type === \"ObjectExpression\") {","        // /*@ngInject*/ x.y = {f1: function(a), .., {f2: function(b)}}","        addObjectExpression(target.expression.right, ctx);","    } else if (target.type === \"VariableDeclaration\" && target.declarations.length === 1 && target.declarations[0].init && target.declarations[0].init.type === \"ObjectExpression\") {","        // /*@ngInject*/ var x = {f1: function(a), .., {f2: function(b)}}","        addObjectExpression(target.declarations[0].init, ctx);","    } else if (target.type === \"Property\") {","        // {/*@ngInject*/ justthisone: function(a), ..}","        target.value.$limitToMethodName = \"*never*\";","        addOrBlock(target.value, ctx);","    } else {","        // /*@ngInject*/ function(a) {}","        target.$limitToMethodName = \"*never*\";","        addOrBlock(target, ctx);","    }","","","    function addObjectExpression(node, ctx) {","        nestedObjectValues(node).forEach(function(n) {","            n.$limitToMethodName = \"*never*\";","            addOrBlock(n, ctx);","        });","    }","","    function addOrBlock(node, ctx) {","        if (block) {","            ctx.blocked.push(node);","        } else {","            ctx.addModuleContextIndependentSuspect(node, ctx)","        }","    }","}","","function nestedObjectValues(node, res) {","    res = res || [];","","    node.properties.forEach(function(prop) {","        var v = prop.value;","        if (is.someof(v.type, [\"FunctionExpression\", \"ArrayExpression\"])) {","            res.push(v);","        } else if (v.type === \"ObjectExpression\") {","            nestedObjectValues(v, res);","        }","    });","","    return res;","}",""],"l":{"7":1,"9":1,"14":1,"15":0,"16":0,"17":0,"18":0,"22":1,"23":0,"24":0,"25":0,"26":0,"30":1,"32":1,"33":0,"34":0,"35":0,"37":0,"42":0,"43":0,"44":0,"56":0,"57":0,"58":0,"73":0,"74":0,"75":0,"77":0,"81":1,"82":0,"84":0,"85":0,"86":0,"87":0,"90":0,"91":0,"92":0,"93":0,"96":0,"97":0,"98":0,"102":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"115":0,"116":0,"117":0,"120":0,"124":1,"125":0,"126":0,"128":0,"129":0,"133":1,"134":0,"135":0,"136":0,"137":0,"140":0,"143":1,"144":0,"148":0,"149":0,"150":0,"154":0,"156":0,"157":0,"159":0,"160":0,"162":0,"163":0,"165":0,"166":0,"168":0,"169":0,"172":0,"173":0,"177":1,"178":0,"179":0,"180":0,"184":1,"185":0,"186":0,"188":0,"193":1,"194":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"205":0}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/generate-sourcemap.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/generate-sourcemap.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":1,"41":0,"42":1,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"SourceMapper","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":73}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":43},"end":{"line":14,"column":58}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":43},"end":{"line":20,"column":54}}},"4":{"name":"(anonymous_4)","line":83,"loc":{"start":{"line":83,"column":36},"end":{"line":83,"column":60}}},"5":{"name":"(anonymous_5)","line":91,"loc":{"start":{"line":91,"column":40},"end":{"line":91,"column":60}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":34},"end":{"line":95,"column":46}}},"7":{"name":"compareLoc","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":26}}},"8":{"name":"generateSourcemap","line":103,"loc":{"start":{"line":103,"column":17},"end":{"line":103,"column":92}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":53}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":64}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":66}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"6":{"start":{"line":9,"column":0},"end":{"line":18,"column":1}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":19}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":63}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":88}},"11":{"start":{"line":14,"column":60},"end":{"line":14,"column":85}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":25}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":54}},"14":{"start":{"line":20,"column":0},"end":{"line":81,"column":1}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":20}},"16":{"start":{"line":25,"column":4},"end":{"line":25,"column":23}},"17":{"start":{"line":26,"column":4},"end":{"line":26,"column":25}},"18":{"start":{"line":30,"column":4},"end":{"line":30,"column":24}},"19":{"start":{"line":32,"column":4},"end":{"line":32,"column":17}},"20":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}},"21":{"start":{"line":35,"column":4},"end":{"line":80,"column":5}},"22":{"start":{"line":36,"column":8},"end":{"line":69,"column":9}},"23":{"start":{"line":39,"column":12},"end":{"line":39,"column":69}},"24":{"start":{"line":40,"column":12},"end":{"line":40,"column":57}},"25":{"start":{"line":42,"column":12},"end":{"line":42,"column":104}},"26":{"start":{"line":43,"column":12},"end":{"line":43,"column":110}},"27":{"start":{"line":47,"column":12},"end":{"line":47,"column":68}},"28":{"start":{"line":55,"column":12},"end":{"line":57,"column":81}},"29":{"start":{"line":59,"column":12},"end":{"line":59,"column":60}},"30":{"start":{"line":63,"column":12},"end":{"line":66,"column":13}},"31":{"start":{"line":65,"column":16},"end":{"line":65,"column":22}},"32":{"start":{"line":68,"column":12},"end":{"line":68,"column":19}},"33":{"start":{"line":71,"column":8},"end":{"line":79,"column":9}},"34":{"start":{"line":72,"column":12},"end":{"line":73,"column":33}},"35":{"start":{"line":73,"column":16},"end":{"line":73,"column":33}},"36":{"start":{"line":74,"column":12},"end":{"line":77,"column":15}},"37":{"start":{"line":78,"column":12},"end":{"line":78,"column":18}},"38":{"start":{"line":83,"column":0},"end":{"line":89,"column":1}},"39":{"start":{"line":84,"column":4},"end":{"line":88,"column":7}},"40":{"start":{"line":91,"column":0},"end":{"line":93,"column":1}},"41":{"start":{"line":92,"column":4},"end":{"line":92,"column":44}},"42":{"start":{"line":95,"column":0},"end":{"line":97,"column":1}},"43":{"start":{"line":96,"column":4},"end":{"line":96,"column":37}},"44":{"start":{"line":99,"column":0},"end":{"line":101,"column":1}},"45":{"start":{"line":100,"column":4},"end":{"line":100,"column":54}},"46":{"start":{"line":103,"column":0},"end":{"line":123,"column":1}},"47":{"start":{"line":104,"column":4},"end":{"line":104,"column":55}},"48":{"start":{"line":105,"column":4},"end":{"line":105,"column":66}},"49":{"start":{"line":106,"column":4},"end":{"line":106,"column":96}},"50":{"start":{"line":107,"column":4},"end":{"line":107,"column":95}},"51":{"start":{"line":108,"column":4},"end":{"line":108,"column":54}},"52":{"start":{"line":110,"column":4},"end":{"line":110,"column":85}},"53":{"start":{"line":111,"column":4},"end":{"line":111,"column":31}},"54":{"start":{"line":113,"column":4},"end":{"line":122,"column":5}},"55":{"start":{"line":114,"column":8},"end":{"line":115,"column":76}},"56":{"start":{"line":115,"column":12},"end":{"line":115,"column":76}},"57":{"start":{"line":117,"column":8},"end":{"line":119,"column":69}},"58":{"start":{"line":121,"column":8},"end":{"line":121,"column":39}}},"branchMap":{"1":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":15},"end":{"line":36,"column":43}},{"start":{"line":37,"column":12},"end":{"line":37,"column":83}}]},"2":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":16},"end":{"line":56,"column":100}},{"start":{"line":57,"column":16},"end":{"line":57,"column":80}}]},"3":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":19},"end":{"line":63,"column":50}},{"start":{"line":64,"column":16},"end":{"line":64,"column":85}}]},"4":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]},"5":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":12}},{"start":{"line":72,"column":12},"end":{"line":72,"column":12}}]},"6":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":27}},{"start":{"line":100,"column":33},"end":{"line":100,"column":52}}]},"7":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":28},"end":{"line":105,"column":39}},{"start":{"line":105,"column":43},"end":{"line":105,"column":65}}]},"8":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":18},"end":{"line":106,"column":35}},{"start":{"line":106,"column":39},"end":{"line":106,"column":61}},{"start":{"line":106,"column":66},"end":{"line":106,"column":80}},{"start":{"line":106,"column":84},"end":{"line":106,"column":95}}]},"9":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":22},"end":{"line":107,"column":39}},{"start":{"line":107,"column":43},"end":{"line":107,"column":71}},{"start":{"line":107,"column":76},"end":{"line":107,"column":94}}]},"10":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"11":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":8}},{"start":{"line":114,"column":8},"end":{"line":114,"column":8}}]}},"code":["\"use strict\";","","var os = require(\"os\");","var convertSourceMap = require(\"convert-source-map\");","var SourceMapConsumer = require(\"source-map\").SourceMapConsumer;","var SourceMapGenerator = require(\"source-map\").SourceMapGenerator;","var stableSort = require(\"stable\");","","function SourceMapper(src, nodePositions, fragments, inFile, sourceRoot) {","    this.generator = new SourceMapGenerator({ sourceRoot: sourceRoot });","    this.src = src;","    // stableSort does not mutate input array so no need to copy it","    this.nodePositions = stableSort(nodePositions, compareLoc);","    this.fragments = stableSort(fragments, function(a, b) { return a.start - b.start });","    this.inFile = inFile;","","    this.generator.setSourceContent(this.inFile, src);","}","","SourceMapper.prototype.calculateMappings = function() {","    var self = this;","","    // These offsets represent the difference in coordinates between a node in the source","    // and the corresponding position in the output.","    var lineOffset = 0;","    var columnOffset = 0;","","    // Since the column position resets to zero after each newline, we have to keep track","    // of the current line that columnOffset refers to in order to know whether to reset it","    var currentLine = 0;","","    var frag = 0;","    var pos = 0;","","    while (pos < self.nodePositions.length) {","        while (frag < self.fragments.length &&","            compareLoc(self.fragments[frag].loc.start, self.nodePositions[pos]) < 1) {","","            var fragmentLines = self.fragments[frag].str.split(\"\\n\");","            var addedNewlines = fragmentLines.length - 1;","","            var replacedLines = self.fragments[frag].loc.end.line - self.fragments[frag].loc.start.line;","            var replacedColumns = self.fragments[frag].loc.end.column - self.fragments[frag].loc.start.column;","","            // If there were any lines added by the fragment string, the line offset should increase;","            // If there were any lines removed by the fragment replacement then the line offset should decrease","            lineOffset = lineOffset + addedNewlines - replacedLines;","","            // The column position needs to reset after each newline.  So if the fragment added any","            // newlines then the column offset is the difference between the column of the last line of","            // the fragment, and the column of the end of the replaced section of the source.","            // Otherwise we increment or decrement the column offset just like how the line offset works.","            // Note that \"replacedColumns\" might be negative in some cases (if the beginning of the source","            // was further right than the end due to a newline); the math still works out.","            columnOffset = fragmentLines.length > 1 ?","                fragmentLines[fragmentLines.length - 1].length - self.fragments[frag].loc.end.column :","                columnOffset + self.fragments[frag].str.length - replacedColumns;","","            currentLine = self.fragments[frag].loc.end.line;","","            // Skip creating mappings for any source nodes that were replaced by this fragment (and are thus","            // no longer a part of the output)","            while (pos < self.nodePositions.length &&","                compareLoc(self.fragments[frag].loc.end, self.nodePositions[pos]) > 0) {","                ++pos;","            }","","            ++frag;","        }","","        if (pos < self.nodePositions.length) {","            if (currentLine < self.nodePositions[pos].line)","                columnOffset = 0;","            self.addMapping(self.nodePositions[pos], {","                line: self.nodePositions[pos].line + lineOffset,","                column: self.nodePositions[pos].column + columnOffset","            });","            ++pos;","        }","    }","}","","SourceMapper.prototype.addMapping = function(input, output) {","    this.generator.addMapping({","        source: this.inFile,","        original: input,","        generated: output","    });","}","","SourceMapper.prototype.applySourceMap = function (consumer) {","    this.generator.applySourceMap(consumer);","}","","SourceMapper.prototype.generate = function () {","    return this.generator.toString();","}","","function compareLoc(a, b) {","    return (a.line - b.line) || (a.column - b.column);","}","","module.exports = function generateSourcemap(result, src, nodePositions, fragments, mapOpts) {","    var existingMap = convertSourceMap.fromSource(src);","    var existingMapObject = existingMap && existingMap.toObject();","    var inFile = (existingMapObject && existingMapObject.file) || mapOpts.inFile || \"source.js\";","    var sourceRoot = (existingMapObject && existingMapObject.sourceRoot) || mapOpts.sourceRoot;","    src = convertSourceMap.removeMapFileComments(src);","","    var mapper = new SourceMapper(src, nodePositions, fragments, inFile, sourceRoot);","    mapper.calculateMappings();","","    if (mapOpts.inline) {","        if (existingMapObject)","            mapper.applySourceMap(new SourceMapConsumer(existingMapObject));","","        result.src = convertSourceMap.removeMapFileComments(result.src) +","            os.EOL +","            convertSourceMap.fromJSON(mapper.generate()).toComment();","    } else {","        result.map = mapper.generate();","    }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":0,"11":0,"13":0,"14":0,"15":0,"17":0,"20":1,"21":0,"25":0,"26":0,"30":0,"32":0,"33":0,"35":0,"36":0,"39":0,"40":0,"42":0,"43":0,"47":0,"55":0,"59":0,"63":0,"65":0,"68":0,"71":0,"72":0,"73":0,"74":0,"78":0,"83":1,"84":0,"91":1,"92":0,"95":1,"96":0,"99":1,"100":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"110":0,"111":0,"113":0,"114":0,"115":0,"117":0,"121":0}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/lut.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/lut.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"Lut","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":23}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":24},"end":{"line":22,"column":39}}},"3":{"name":"findNodeFromPos","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":30}}},"4":{"name":"findNodeBeforePos","line":90,"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":32}}},"5":{"name":"last","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":19}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":21}},"5":{"start":{"line":13,"column":0},"end":{"line":49,"column":1}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":32}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":45}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":20}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":43}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":14}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":24}},"13":{"start":{"line":22,"column":4},"end":{"line":35,"column":8}},"14":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"15":{"start":{"line":25,"column":12},"end":{"line":25,"column":19}},"16":{"start":{"line":27,"column":8},"end":{"line":27,"column":26}},"17":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"18":{"start":{"line":29,"column":12},"end":{"line":29,"column":35}},"19":{"start":{"line":31,"column":8},"end":{"line":31,"column":26}},"20":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"21":{"start":{"line":33,"column":12},"end":{"line":33,"column":33}},"22":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"23":{"start":{"line":37,"column":8},"end":{"line":37,"column":37}},"24":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"25":{"start":{"line":40,"column":8},"end":{"line":40,"column":35}},"26":{"start":{"line":42,"column":4},"end":{"line":42,"column":24}},"27":{"start":{"line":47,"column":4},"end":{"line":47,"column":25}},"28":{"start":{"line":48,"column":4},"end":{"line":48,"column":21}},"29":{"start":{"line":51,"column":0},"end":{"line":51,"column":48}},"30":{"start":{"line":52,"column":0},"end":{"line":52,"column":52}},"31":{"start":{"line":56,"column":0},"end":{"line":86,"column":1}},"32":{"start":{"line":57,"column":4},"end":{"line":57,"column":26}},"33":{"start":{"line":58,"column":4},"end":{"line":58,"column":45}},"34":{"start":{"line":60,"column":4},"end":{"line":60,"column":17}},"35":{"start":{"line":61,"column":4},"end":{"line":61,"column":31}},"36":{"start":{"line":62,"column":4},"end":{"line":71,"column":5}},"37":{"start":{"line":63,"column":8},"end":{"line":63,"column":49}},"38":{"start":{"line":64,"column":8},"end":{"line":64,"column":45}},"39":{"start":{"line":65,"column":8},"end":{"line":70,"column":9}},"40":{"start":{"line":66,"column":12},"end":{"line":66,"column":27}},"41":{"start":{"line":69,"column":12},"end":{"line":69,"column":24}},"42":{"start":{"line":72,"column":4},"end":{"line":75,"column":5}},"43":{"start":{"line":73,"column":8},"end":{"line":73,"column":41}},"44":{"start":{"line":74,"column":8},"end":{"line":74,"column":20}},"45":{"start":{"line":77,"column":4},"end":{"line":77,"column":21}},"46":{"start":{"line":78,"column":4},"end":{"line":78,"column":39}},"47":{"start":{"line":79,"column":4},"end":{"line":79,"column":28}},"48":{"start":{"line":80,"column":4},"end":{"line":83,"column":5}},"49":{"start":{"line":81,"column":8},"end":{"line":81,"column":46}},"50":{"start":{"line":82,"column":8},"end":{"line":82,"column":30}},"51":{"start":{"line":85,"column":4},"end":{"line":85,"column":22}},"52":{"start":{"line":90,"column":0},"end":{"line":122,"column":1}},"53":{"start":{"line":91,"column":4},"end":{"line":91,"column":24}},"54":{"start":{"line":92,"column":4},"end":{"line":92,"column":45}},"55":{"start":{"line":94,"column":4},"end":{"line":94,"column":17}},"56":{"start":{"line":95,"column":4},"end":{"line":95,"column":31}},"57":{"start":{"line":96,"column":4},"end":{"line":105,"column":5}},"58":{"start":{"line":97,"column":8},"end":{"line":97,"column":48}},"59":{"start":{"line":98,"column":8},"end":{"line":98,"column":45}},"60":{"start":{"line":99,"column":8},"end":{"line":104,"column":9}},"61":{"start":{"line":100,"column":12},"end":{"line":100,"column":28}},"62":{"start":{"line":103,"column":12},"end":{"line":103,"column":23}},"63":{"start":{"line":106,"column":4},"end":{"line":109,"column":5}},"64":{"start":{"line":107,"column":8},"end":{"line":107,"column":38}},"65":{"start":{"line":108,"column":8},"end":{"line":108,"column":20}},"66":{"start":{"line":111,"column":4},"end":{"line":111,"column":21}},"67":{"start":{"line":112,"column":4},"end":{"line":112,"column":39}},"68":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"69":{"start":{"line":114,"column":8},"end":{"line":114,"column":20}},"70":{"start":{"line":116,"column":4},"end":{"line":119,"column":5}},"71":{"start":{"line":117,"column":8},"end":{"line":117,"column":46}},"72":{"start":{"line":118,"column":8},"end":{"line":118,"column":30}},"73":{"start":{"line":121,"column":4},"end":{"line":121,"column":22}},"74":{"start":{"line":124,"column":0},"end":{"line":126,"column":1}},"75":{"start":{"line":125,"column":4},"end":{"line":125,"column":31}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":8}},{"start":{"line":28,"column":8},"end":{"line":28,"column":8}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":8}},{"start":{"line":32,"column":8},"end":{"line":32,"column":8}}]},"4":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":11},"end":{"line":58,"column":31}},{"start":{"line":58,"column":35},"end":{"line":58,"column":43}}]},"5":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":15},"end":{"line":64,"column":23}},{"start":{"line":64,"column":27},"end":{"line":64,"column":43}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"8":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":11},"end":{"line":92,"column":31}},{"start":{"line":92,"column":35},"end":{"line":92,"column":43}}]},"10":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":15},"end":{"line":98,"column":23}},{"start":{"line":98,"column":27},"end":{"line":98,"column":43}}]},"11":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":8}},{"start":{"line":99,"column":8},"end":{"line":99,"column":8}}]},"12":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"13":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"14":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]}},"code":["// lut.js","// MIT licensed, see LICENSE file","// Copyright (c) 2013-2016 Olov Lassus <olov.lassus@gmail.com>","","\"use strict\";","","var assert = require(\"assert\");","var traverse = require(\"ordered-ast-traverse\");","var is = require(\"simple-is\");","","module.exports = Lut;","","function Lut(ast, src) {","    assert(this instanceof Lut);","","    var sparseBegins = new Array(src.length);","    var begins = [];","    var sparseEnds = new Array(src.length);","    var ends = [];","    var p = 0;","    var t0 = Date.now();","    traverse(ast, {pre: function(node) {","        //        assert (node.range[0] >= p);","        if (node.type === \"Program\") {","            return;","        }","        p = node.range[0];","        if (!sparseBegins[p]) {","            sparseBegins[p] = node;","        }","        p = node.range[1];","        if (!sparseEnds[p]) {","            sparseEnds[p] = node;","        }","    }});","    for (var i in sparseBegins) {","        begins.push(sparseBegins[i]);","    }","    for (var i$0 in sparseEnds) {","        ends.push(sparseEnds[i$0]);","    }","    var t1 = Date.now();","    //    console.error(t1-t0)","","    // begins and ends are compact arrays with nodes,","    // sorted on node.range[0/1] (unique)","    this.begins = begins;","    this.ends = ends;","}","","Lut.prototype.findNodeFromPos = findNodeFromPos;","Lut.prototype.findNodeBeforePos = findNodeBeforePos;","","// binary search lut to find node beginning at pos","// or as close after pos as possible. null if none","function findNodeFromPos(pos) {","    var lut = this.begins;","    assert(is.finitenumber(pos) && pos >= 0);","","    var left = 0;","    var right = lut.length - 1;","    while (left < right) {","        var mid = Math.floor((left + right) / 2);","        assert(mid >= 0 && mid < lut.length);","        if (pos > lut[mid].range[0]) {","            left = mid + 1;","        }","        else {","            right = mid;","        }","    }","    if (left > right) {","        assert(last(lut).range[0] < pos);","        return null;","    }","","    var found = left;","    var foundPos = lut[found].range[0];","    assert(foundPos >= pos);","    if (found >= 1) {","        var prevPos = lut[found - 1].range[0];","        assert(prevPos < pos);","    }","","    return lut[found];","}","","// binary search lut to find node ending (as in range[1]","// at or before pos. null if none","function findNodeBeforePos(pos) {","    var lut = this.ends;","    assert(is.finitenumber(pos) && pos >= 0);","","    var left = 0;","    var right = lut.length - 1;","    while (left < right) {","        var mid = Math.ceil((left + right) / 2);","        assert(mid >= 0 && mid < lut.length);","        if (pos < lut[mid].range[1]) {","            right = mid - 1;","        }","        else {","            left = mid;","        }","    }","    if (left > right) {","        assert(lut[0].range[1] > pos);","        return null;","    }","","    var found = left;","    var foundPos = lut[found].range[1];","    if(foundPos > pos) {","        return null;","    }","    if (found <= lut.length - 2) {","        var nextPos = lut[found + 1].range[1];","        assert(nextPos > pos);","    }","","    return lut[found];","}","","function last(arr) {","    return arr[arr.length - 1];","}",""],"l":{"7":1,"8":1,"9":1,"11":1,"13":1,"14":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"36":0,"37":0,"39":0,"40":0,"42":0,"47":0,"48":0,"51":1,"52":1,"56":1,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"69":0,"72":0,"73":0,"74":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"85":0,"90":1,"91":0,"92":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"103":0,"106":0,"107":0,"108":0,"111":0,"112":0,"113":0,"114":0,"116":0,"117":0,"118":0,"121":0,"124":1,"125":0}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/scopetools.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/scopetools.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":1,"54":0,"55":1,"56":0,"57":1,"58":0,"59":1,"60":0,"61":1,"62":0,"63":1,"64":0,"65":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0,0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0,0,0,0,0,0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"setupScopeAndReferences","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":39}}},"2":{"name":"createScopes","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":36}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":34},"end":{"line":36,"column":55}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":28},"end":{"line":64,"column":44}}},"5":{"name":"createTopScope","line":109,"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":38}}},"6":{"name":"inject","line":110,"loc":{"start":{"line":110,"column":4},"end":{"line":110,"column":25}}},"7":{"name":"isConstLet","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":26}}},"8":{"name":"isNonFunctionBlock","line":148,"loc":{"start":{"line":148,"column":0},"end":{"line":148,"column":42}}},"9":{"name":"isForWithConstLet","line":152,"loc":{"start":{"line":152,"column":0},"end":{"line":152,"column":33}}},"10":{"name":"isForInOfWithConstLet","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":37}}},"11":{"name":"isForInOf","line":160,"loc":{"start":{"line":160,"column":0},"end":{"line":160,"column":25}}},"12":{"name":"isFunction","line":164,"loc":{"start":{"line":164,"column":0},"end":{"line":164,"column":26}}},"13":{"name":"isReference","line":168,"loc":{"start":{"line":168,"column":0},"end":{"line":168,"column":27}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":31}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}},"5":{"start":{"line":12,"column":0},"end":{"line":15,"column":2}},"6":{"start":{"line":17,"column":0},"end":{"line":20,"column":1}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":40}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":32}},"9":{"start":{"line":22,"column":0},"end":{"line":107,"column":1}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":26}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":48}},"12":{"start":{"line":26,"column":4},"end":{"line":106,"column":5}},"13":{"start":{"line":28,"column":8},"end":{"line":32,"column":11}},"14":{"start":{"line":34,"column":11},"end":{"line":106,"column":5}},"15":{"start":{"line":36,"column":8},"end":{"line":39,"column":11}},"16":{"start":{"line":37,"column":12},"end":{"line":37,"column":42}},"17":{"start":{"line":38,"column":12},"end":{"line":38,"column":81}},"18":{"start":{"line":41,"column":11},"end":{"line":106,"column":5}},"19":{"start":{"line":45,"column":8},"end":{"line":49,"column":11}},"20":{"start":{"line":52,"column":8},"end":{"line":62,"column":9}},"21":{"start":{"line":53,"column":12},"end":{"line":61,"column":13}},"22":{"start":{"line":55,"column":16},"end":{"line":55,"column":70}},"23":{"start":{"line":56,"column":19},"end":{"line":61,"column":13}},"24":{"start":{"line":58,"column":16},"end":{"line":58,"column":68}},"25":{"start":{"line":60,"column":16},"end":{"line":60,"column":30}},"26":{"start":{"line":64,"column":8},"end":{"line":66,"column":11}},"27":{"start":{"line":65,"column":12},"end":{"line":65,"column":62}},"28":{"start":{"line":68,"column":11},"end":{"line":106,"column":5}},"29":{"start":{"line":71,"column":8},"end":{"line":75,"column":11}},"30":{"start":{"line":77,"column":11},"end":{"line":106,"column":5}},"31":{"start":{"line":78,"column":8},"end":{"line":78,"column":36}},"32":{"start":{"line":80,"column":8},"end":{"line":84,"column":11}},"33":{"start":{"line":85,"column":8},"end":{"line":85,"column":69}},"34":{"start":{"line":96,"column":8},"end":{"line":96,"column":72}},"35":{"start":{"line":98,"column":11},"end":{"line":106,"column":5}},"36":{"start":{"line":101,"column":8},"end":{"line":105,"column":11}},"37":{"start":{"line":109,"column":0},"end":{"line":142,"column":1}},"38":{"start":{"line":110,"column":4},"end":{"line":119,"column":5}},"39":{"start":{"line":111,"column":8},"end":{"line":118,"column":9}},"40":{"start":{"line":112,"column":12},"end":{"line":112,"column":38}},"41":{"start":{"line":113,"column":12},"end":{"line":113,"column":53}},"42":{"start":{"line":114,"column":12},"end":{"line":116,"column":13}},"43":{"start":{"line":115,"column":16},"end":{"line":115,"column":38}},"44":{"start":{"line":117,"column":12},"end":{"line":117,"column":69}},"45":{"start":{"line":121,"column":4},"end":{"line":125,"column":7}},"46":{"start":{"line":127,"column":4},"end":{"line":131,"column":6}},"47":{"start":{"line":133,"column":4},"end":{"line":133,"column":26}},"48":{"start":{"line":138,"column":4},"end":{"line":138,"column":35}},"49":{"start":{"line":139,"column":4},"end":{"line":139,"column":41}},"50":{"start":{"line":141,"column":4},"end":{"line":141,"column":20}},"51":{"start":{"line":144,"column":0},"end":{"line":146,"column":1}},"52":{"start":{"line":145,"column":4},"end":{"line":145,"column":46}},"53":{"start":{"line":148,"column":0},"end":{"line":150,"column":1}},"54":{"start":{"line":149,"column":4},"end":{"line":149,"column":123}},"55":{"start":{"line":152,"column":0},"end":{"line":154,"column":1}},"56":{"start":{"line":153,"column":4},"end":{"line":153,"column":127}},"57":{"start":{"line":156,"column":0},"end":{"line":158,"column":1}},"58":{"start":{"line":157,"column":4},"end":{"line":157,"column":101}},"59":{"start":{"line":160,"column":0},"end":{"line":162,"column":1}},"60":{"start":{"line":161,"column":4},"end":{"line":161,"column":76}},"61":{"start":{"line":164,"column":0},"end":{"line":166,"column":1}},"62":{"start":{"line":165,"column":4},"end":{"line":165,"column":85}},"63":{"start":{"line":168,"column":0},"end":{"line":180,"column":1}},"64":{"start":{"line":169,"column":4},"end":{"line":169,"column":30}},"65":{"start":{"line":170,"column":4},"end":{"line":179,"column":17}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":27},"end":{"line":24,"column":40}},{"start":{"line":24,"column":43},"end":{"line":24,"column":47}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":11},"end":{"line":34,"column":11}},{"start":{"line":34,"column":11},"end":{"line":34,"column":11}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":11}},{"start":{"line":41,"column":11},"end":{"line":41,"column":11}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"6":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":12}},{"start":{"line":53,"column":12},"end":{"line":53,"column":12}}]},"7":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":19},"end":{"line":56,"column":19}},{"start":{"line":56,"column":19},"end":{"line":56,"column":19}}]},"8":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":11},"end":{"line":68,"column":11}},{"start":{"line":68,"column":11},"end":{"line":68,"column":11}}]},"9":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":15},"end":{"line":68,"column":38}},{"start":{"line":68,"column":42},"end":{"line":68,"column":69}}]},"10":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":11},"end":{"line":77,"column":11}},{"start":{"line":77,"column":11},"end":{"line":77,"column":11}}]},"11":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":11},"end":{"line":98,"column":11}},{"start":{"line":98,"column":11},"end":{"line":98,"column":11}}]},"12":{"line":113,"type":"cond-expr","locations":[{"start":{"line":113,"column":36},"end":{"line":113,"column":41}},{"start":{"line":113,"column":44},"end":{"line":113,"column":51}}]},"13":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":12},"end":{"line":114,"column":12}},{"start":{"line":114,"column":12},"end":{"line":114,"column":12}}]},"14":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":11},"end":{"line":145,"column":27}},{"start":{"line":145,"column":31},"end":{"line":145,"column":45}}]},"15":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":11},"end":{"line":149,"column":41}},{"start":{"line":149,"column":45},"end":{"line":149,"column":82}},{"start":{"line":149,"column":86},"end":{"line":149,"column":122}}]},"16":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":11},"end":{"line":153,"column":39}},{"start":{"line":153,"column":43},"end":{"line":153,"column":52}},{"start":{"line":153,"column":56},"end":{"line":153,"column":96}},{"start":{"line":153,"column":100},"end":{"line":153,"column":126}}]},"17":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":11},"end":{"line":157,"column":26}},{"start":{"line":157,"column":30},"end":{"line":157,"column":70}},{"start":{"line":157,"column":74},"end":{"line":157,"column":100}}]},"18":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":11},"end":{"line":161,"column":41}},{"start":{"line":161,"column":45},"end":{"line":161,"column":75}}]},"19":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":11},"end":{"line":165,"column":46}},{"start":{"line":165,"column":50},"end":{"line":165,"column":84}}]},"20":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":11},"end":{"line":170,"column":27}},{"start":{"line":171,"column":8},"end":{"line":171,"column":34}},{"start":{"line":172,"column":12},"end":{"line":172,"column":73}},{"start":{"line":173,"column":12},"end":{"line":173,"column":106}},{"start":{"line":174,"column":12},"end":{"line":174,"column":64}},{"start":{"line":175,"column":12},"end":{"line":175,"column":74}},{"start":{"line":176,"column":12},"end":{"line":176,"column":69}},{"start":{"line":177,"column":12},"end":{"line":177,"column":55}},{"start":{"line":178,"column":12},"end":{"line":178,"column":67}},{"start":{"line":179,"column":12},"end":{"line":179,"column":16}}]},"21":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":14},"end":{"line":172,"column":50}},{"start":{"line":172,"column":54},"end":{"line":172,"column":72}}]},"22":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":14},"end":{"line":173,"column":48}},{"start":{"line":173,"column":52},"end":{"line":173,"column":77}},{"start":{"line":173,"column":81},"end":{"line":173,"column":105}}]},"23":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":14},"end":{"line":174,"column":40}},{"start":{"line":174,"column":44},"end":{"line":174,"column":63}}]},"24":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":14},"end":{"line":175,"column":48}},{"start":{"line":175,"column":52},"end":{"line":175,"column":73}}]},"25":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":14},"end":{"line":176,"column":43}},{"start":{"line":176,"column":47},"end":{"line":176,"column":68}}]},"26":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":14},"end":{"line":177,"column":32}},{"start":{"line":177,"column":36},"end":{"line":177,"column":54}}]},"27":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":14},"end":{"line":178,"column":32}},{"start":{"line":178,"column":36},"end":{"line":178,"column":66}}]}},"code":["// scopetools.js","// MIT licensed, see LICENSE file","// Copyright (c) 2013-2016 Olov Lassus <olov.lassus@gmail.com>","","\"use strict\";","","var assert = require(\"assert\");","var traverse = require(\"ordered-ast-traverse\");","var Scope = require(\"./scope\");","var is = require(\"simple-is\");","","module.exports = {","    setupScopeAndReferences: setupScopeAndReferences,","    isReference: isReference,","};","","function setupScopeAndReferences(root) {","    traverse(root, {pre: createScopes});","    createTopScope(root.$scope);","}","","function createScopes(node, parent) {","    node.$parent = parent;","    node.$scope = parent ? parent.$scope : null; // may be overridden","","    if (isNonFunctionBlock(node, parent)) {","        // A block node is a scope unless parent is a function","        node.$scope = new Scope({","            kind: \"block\",","            node: node,","            parent: parent.$scope,","        });","","    } else if (node.type === \"VariableDeclaration\") {","        // Variable declarations names goes in current scope","        node.declarations.forEach(function(declarator) {","            var name = declarator.id.name;","            node.$scope.add(name, node.kind, declarator.id, declarator.range[1]);","        });","","    } else if (isFunction(node)) {","        // Function is a scope, with params in it","        // There's no block-scope under it","","        node.$scope = new Scope({","            kind: \"hoist\",","            node: node,","            parent: parent.$scope,","        });","","        // function has a name","        if (node.id) {","            if (node.type === \"FunctionDeclaration\") {","                // Function name goes in parent scope for declared functions","                parent.$scope.add(node.id.name, \"fun\", node.id, null);","            } else if (node.type === \"FunctionExpression\") {","                // Function name goes in function's scope for named function expressions","                node.$scope.add(node.id.name, \"fun\", node.id, null);","            } else {","                assert(false);","            }","        }","","        node.params.forEach(function(param) {","            node.$scope.add(param.name, \"param\", param, null);","        });","","    } else if (isForWithConstLet(node) || isForInOfWithConstLet(node)) {","        // For(In/Of) loop with const|let declaration is a scope, with declaration in it","        // There may be a block-scope under it","        node.$scope = new Scope({","            kind: \"block\",","            node: node,","            parent: parent.$scope,","        });","","    } else if (node.type === \"CatchClause\") {","        var identifier = node.param;","","        node.$scope = new Scope({","            kind: \"catch-block\",","            node: node,","            parent: parent.$scope,","        });","        node.$scope.add(identifier.name, \"caught\", identifier, null);","","        // All hoist-scope keeps track of which variables that are propagated through,","        // i.e. an reference inside the scope points to a declaration outside the scope.","        // This is used to mark \"taint\" the name since adding a new variable in the scope,","        // with a propagated name, would change the meaning of the existing references.","        //","        // catch(e) is special because even though e is a variable in its own scope,","        // we want to make sure that catch(e){let e} is never transformed to","        // catch(e){var e} (but rather var e$0). For that reason we taint the use of e","        // in the closest hoist-scope, i.e. where var e$0 belongs.","        node.$scope.closestHoistScope().markPropagates(identifier.name);","","    } else if (node.type === \"Program\") {","        // Top-level program is a scope","        // There's no block-scope under it","        node.$scope = new Scope({","            kind: \"hoist\",","            node: node,","            parent: null,","        });","    }","}","","function createTopScope(programScope) {","    function inject(obj) {","        for (var name in obj) {","            var writeable = obj[name];","            var kind = (writeable ? \"var\" : \"const\");","            if (topScope.hasOwn(name)) {","                topScope.remove(name);","            }","            topScope.add(name, kind, {loc: {start: {line: -1}}}, -1);","        }","    }","","    var topScope = new Scope({","        kind: \"hoist\",","        node: {},","        parent: null,","    });","","    var complementary = {","        undefined: false,","        Infinity: false,","        console: false,","    };","","    inject(complementary);","//    inject(jshint_vars.reservedVars);","//    inject(jshint_vars.ecmaIdentifiers);","","    // link it in","    programScope.parent = topScope;","    topScope.children.push(programScope);","","    return topScope;","}","","function isConstLet(kind) {","    return kind === \"const\" || kind === \"let\";","}","","function isNonFunctionBlock(node, parent) {","    return node.type === \"BlockStatement\" && parent.type !== \"FunctionDeclaration\" && parent.type !== \"FunctionExpression\";","}","","function isForWithConstLet(node) {","    return node.type === \"ForStatement\" && node.init && node.init.type === \"VariableDeclaration\" && isConstLet(node.init.kind);","}","","function isForInOfWithConstLet(node) {","    return isForInOf(node) && node.left.type === \"VariableDeclaration\" && isConstLet(node.left.kind);","}","","function isForInOf(node) {","    return node.type === \"ForInStatement\" || node.type === \"ForOfStatement\";","}","","function isFunction(node) {","    return node.type === \"FunctionDeclaration\" || node.type === \"FunctionExpression\";","}","","function isReference(node) {","    var parent = node.$parent;","    return node.$refToScope ||","        node.type === \"Identifier\" &&","            !(parent.type === \"VariableDeclarator\" && parent.id === node) && // var|let|const $","            !(parent.type === \"MemberExpression\" && parent.computed === false && parent.property === node) && // obj.$","            !(parent.type === \"Property\" && parent.key === node) && // {$: ...}","            !(parent.type === \"LabeledStatement\" && parent.label === node) && // $: ...","            !(parent.type === \"CatchClause\" && parent.param === node) && // catch($)","            !(isFunction(parent) && parent.id === node) && // function $(..","            !(isFunction(parent) && is.someof(node, parent.params)) && // function f($)..","            true;","}",""],"l":{"7":1,"8":1,"9":1,"10":1,"12":1,"17":1,"18":0,"19":0,"22":1,"23":0,"24":0,"26":0,"28":0,"34":0,"36":0,"37":0,"38":0,"41":0,"45":0,"52":0,"53":0,"55":0,"56":0,"58":0,"60":0,"64":0,"65":0,"68":0,"71":0,"77":0,"78":0,"80":0,"85":0,"96":0,"98":0,"101":0,"109":1,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"117":0,"121":0,"127":0,"133":0,"138":0,"139":0,"141":0,"144":1,"145":0,"148":1,"149":0,"152":1,"153":0,"156":1,"157":0,"160":1,"161":0,"164":1,"165":0,"168":1,"169":0,"170":0}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/scope.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/scope.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":1,"53":0,"54":1,"55":0,"56":1,"57":0,"58":1,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"Scope","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":21}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":57,"column":24},"end":{"line":57,"column":41}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":38},"end":{"line":60,"column":53}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":26},"end":{"line":65,"column":38}}},"5":{"name":"(anonymous_5)","line":70,"loc":{"start":{"line":70,"column":22},"end":{"line":70,"column":67}}},"6":{"name":"isConstLet","line":73,"loc":{"start":{"line":73,"column":4},"end":{"line":73,"column":30}}},"7":{"name":"(anonymous_7)","line":105,"loc":{"start":{"line":105,"column":26},"end":{"line":105,"column":41}}},"8":{"name":"(anonymous_8)","line":111,"loc":{"start":{"line":111,"column":26},"end":{"line":111,"column":41}}},"9":{"name":"(anonymous_9)","line":117,"loc":{"start":{"line":117,"column":29},"end":{"line":117,"column":44}}},"10":{"name":"(anonymous_10)","line":123,"loc":{"start":{"line":123,"column":25},"end":{"line":123,"column":40}}},"11":{"name":"(anonymous_11)","line":127,"loc":{"start":{"line":127,"column":25},"end":{"line":127,"column":40}}},"12":{"name":"(anonymous_12)","line":131,"loc":{"start":{"line":131,"column":32},"end":{"line":131,"column":47}}},"13":{"name":"(anonymous_13)","line":135,"loc":{"start":{"line":135,"column":33},"end":{"line":135,"column":48}}},"14":{"name":"(anonymous_14)","line":139,"loc":{"start":{"line":139,"column":36},"end":{"line":139,"column":47}}},"15":{"name":"(anonymous_15)","line":147,"loc":{"start":{"line":147,"column":25},"end":{"line":147,"column":40}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"6":{"start":{"line":13,"column":0},"end":{"line":55,"column":1}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":68}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":33}},"9":{"start":{"line":16,"column":4},"end":{"line":16,"column":59}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":26}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":26}},"12":{"start":{"line":27,"column":4},"end":{"line":27,"column":30}},"13":{"start":{"line":30,"column":4},"end":{"line":30,"column":23}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":29}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":67}},"16":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"17":{"start":{"line":53,"column":8},"end":{"line":53,"column":40}},"18":{"start":{"line":57,"column":0},"end":{"line":68,"column":2}},"19":{"start":{"line":58,"column":4},"end":{"line":58,"column":25}},"20":{"start":{"line":59,"column":4},"end":{"line":59,"column":21}},"21":{"start":{"line":60,"column":4},"end":{"line":62,"column":18}},"22":{"start":{"line":61,"column":8},"end":{"line":61,"column":66}},"23":{"start":{"line":63,"column":4},"end":{"line":63,"column":79}},"24":{"start":{"line":64,"column":4},"end":{"line":64,"column":113}},"25":{"start":{"line":65,"column":4},"end":{"line":67,"column":7}},"26":{"start":{"line":66,"column":8},"end":{"line":66,"column":28}},"27":{"start":{"line":70,"column":0},"end":{"line":103,"column":2}},"28":{"start":{"line":71,"column":4},"end":{"line":71,"column":79}},"29":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"30":{"start":{"line":74,"column":8},"end":{"line":74,"column":49}},"31":{"start":{"line":77,"column":4},"end":{"line":77,"column":21}},"32":{"start":{"line":81,"column":4},"end":{"line":88,"column":5}},"33":{"start":{"line":82,"column":8},"end":{"line":87,"column":9}},"34":{"start":{"line":86,"column":12},"end":{"line":86,"column":33}},"35":{"start":{"line":94,"column":4},"end":{"line":97,"column":6}},"36":{"start":{"line":98,"column":4},"end":{"line":101,"column":5}},"37":{"start":{"line":99,"column":8},"end":{"line":99,"column":57}},"38":{"start":{"line":100,"column":8},"end":{"line":100,"column":44}},"39":{"start":{"line":102,"column":4},"end":{"line":102,"column":39}},"40":{"start":{"line":105,"column":0},"end":{"line":109,"column":2}},"41":{"start":{"line":106,"column":4},"end":{"line":106,"column":28}},"42":{"start":{"line":107,"column":4},"end":{"line":107,"column":36}},"43":{"start":{"line":108,"column":4},"end":{"line":108,"column":35}},"44":{"start":{"line":111,"column":0},"end":{"line":115,"column":2}},"45":{"start":{"line":112,"column":4},"end":{"line":112,"column":28}},"46":{"start":{"line":113,"column":4},"end":{"line":113,"column":36}},"47":{"start":{"line":114,"column":4},"end":{"line":114,"column":35}},"48":{"start":{"line":117,"column":0},"end":{"line":121,"column":2}},"49":{"start":{"line":118,"column":4},"end":{"line":118,"column":28}},"50":{"start":{"line":119,"column":4},"end":{"line":119,"column":36}},"51":{"start":{"line":120,"column":4},"end":{"line":120,"column":35}},"52":{"start":{"line":123,"column":0},"end":{"line":125,"column":2}},"53":{"start":{"line":124,"column":4},"end":{"line":124,"column":32}},"54":{"start":{"line":127,"column":0},"end":{"line":129,"column":2}},"55":{"start":{"line":128,"column":4},"end":{"line":128,"column":35}},"56":{"start":{"line":131,"column":0},"end":{"line":133,"column":2}},"57":{"start":{"line":132,"column":4},"end":{"line":132,"column":37}},"58":{"start":{"line":135,"column":0},"end":{"line":137,"column":2}},"59":{"start":{"line":136,"column":4},"end":{"line":136,"column":30}},"60":{"start":{"line":139,"column":0},"end":{"line":145,"column":2}},"61":{"start":{"line":140,"column":4},"end":{"line":140,"column":21}},"62":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"63":{"start":{"line":142,"column":8},"end":{"line":142,"column":29}},"64":{"start":{"line":144,"column":4},"end":{"line":144,"column":17}},"65":{"start":{"line":147,"column":0},"end":{"line":156,"column":2}},"66":{"start":{"line":148,"column":4},"end":{"line":154,"column":5}},"67":{"start":{"line":149,"column":8},"end":{"line":153,"column":9}},"68":{"start":{"line":150,"column":12},"end":{"line":150,"column":25}},"69":{"start":{"line":151,"column":15},"end":{"line":153,"column":9}},"70":{"start":{"line":152,"column":12},"end":{"line":152,"column":39}},"71":{"start":{"line":155,"column":4},"end":{"line":155,"column":16}},"72":{"start":{"line":158,"column":0},"end":{"line":158,"column":23}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":11},"end":{"line":16,"column":31}},{"start":{"line":16,"column":35},"end":{"line":16,"column":57}}]},"2":{"line":49,"type":"cond-expr","locations":[{"start":{"line":49,"column":47},"end":{"line":49,"column":58}},{"start":{"line":49,"column":61},"end":{"line":49,"column":65}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"4":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":13},"end":{"line":58,"column":19}},{"start":{"line":58,"column":23},"end":{"line":58,"column":24}}]},"5":{"line":63,"type":"cond-expr","locations":[{"start":{"line":63,"column":39},"end":{"line":63,"column":73}},{"start":{"line":63,"column":76},"end":{"line":63,"column":78}}]},"6":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"7":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"8":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":18},"end":{"line":108,"column":27}},{"start":{"line":108,"column":30},"end":{"line":108,"column":34}}]},"9":{"line":114,"type":"cond-expr","locations":[{"start":{"line":114,"column":18},"end":{"line":114,"column":27}},{"start":{"line":114,"column":30},"end":{"line":114,"column":34}}]},"10":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":18},"end":{"line":120,"column":27}},{"start":{"line":120,"column":30},"end":{"line":120,"column":34}}]},"11":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":8}},{"start":{"line":149,"column":8},"end":{"line":149,"column":8}}]},"12":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":15},"end":{"line":151,"column":15}},{"start":{"line":151,"column":15},"end":{"line":151,"column":15}}]}},"code":["// scope.js","// MIT licensed, see LICENSE file","// Copyright (c) 2013-2016 Olov Lassus <olov.lassus@gmail.com>","","\"use strict\";","","var assert = require(\"assert\");","var stringmap = require(\"stringmap\");","var stringset = require(\"stringset\");","var is = require(\"simple-is\");","var fmt = require(\"simple-fmt\");","","function Scope(args) {","    assert(is.someof(args.kind, [\"hoist\", \"block\", \"catch-block\"]));","    assert(is.object(args.node));","    assert(args.parent === null || is.object(args.parent));","","    // kind === \"hoist\": function scopes, program scope, injected globals","    // kind === \"block\": ES6 block scopes","    // kind === \"catch-block\": catch block scopes","    this.kind = args.kind;","","    // the AST node the block corresponds to","    this.node = args.node;","","    // parent scope","    this.parent = args.parent;","","    // children scopes for easier traversal (populated internally)","    this.children = [];","","    // scope declarations. decls[variable_name] = {","    //     kind: \"fun\" for functions,","    //           \"param\" for function parameters,","    //           \"caught\" for catch parameter","    //           \"var\",","    //           \"const\",","    //           \"let\"","    //     node: the AST node the declaration corresponds to","    //     from: source code index from which it is visible at earliest","    //           (only stored for \"const\", \"let\" [and \"var\"] nodes)","    // }","    this.decls = stringmap();","","    // names of all variables declared outside this hoist scope but","    // referenced in this scope (immediately or in child).","    // only stored on hoist scopes for efficiency","    // (because we currently generate lots of empty block scopes)","    this.propagates = (this.kind === \"hoist\" ? stringset() : null);","","    // scopes register themselves with their parents for easier traversal","    if (this.parent) {","        this.parent.children.push(this);","    }","}","","Scope.prototype.print = function(indent) {","    indent = indent || 0;","    var scope = this;","    var names = this.decls.keys().map(function(name) {","        return fmt(\"{0} [{1}]\", name, scope.decls.get(name).kind);","    }).join(\", \");","    var propagates = this.propagates ? this.propagates.items().join(\", \") : \"\";","    console.log(fmt(\"{0}{1}: {2}. propagates: {3}\", fmt.repeat(\" \", indent), this.node.type, names, propagates));","    this.children.forEach(function(c) {","        c.print(indent + 2);","    });","};","","Scope.prototype.add = function(name, kind, node, referableFromPos) {","    assert(is.someof(kind, [\"fun\", \"param\", \"var\", \"caught\", \"const\", \"let\"]));","","    function isConstLet(kind) {","        return is.someof(kind, [\"const\", \"let\"]);","    }","","    var scope = this;","","    // search nearest hoist-scope for fun, param and var's","    // const, let and caught variables go directly in the scope (which may be hoist, block or catch-block)","    if (is.someof(kind, [\"fun\", \"param\", \"var\"])) {","        while (scope.kind !== \"hoist\") {","//            if (scope.decls.has(name) && isConstLet(scope.decls.get(name).kind)) { // could be caught","//                return error(getline(node), \"{0} is already declared\", name);","//            }","            scope = scope.parent;","        }","    }","    // name exists in scope and either new or existing kind is const|let => error","//    if (scope.decls.has(name) && (isConstLet(scope.decls.get(name).kind) || isConstLet(kind))) {","//        return error(getline(node), \"{0} is already declared\", name);","//    }","","    var declaration = {","        kind: kind,","        node: node,","    };","    if (referableFromPos) {","        assert(is.someof(kind, [\"var\", \"const\", \"let\"]));","        declaration.from = referableFromPos;","    }","    scope.decls.set(name, declaration);","};","","Scope.prototype.getKind = function(name) {","    assert(is.string(name));","    var decl = this.decls.get(name);","    return decl ? decl.kind : null;","};","","Scope.prototype.getNode = function(name) {","    assert(is.string(name));","    var decl = this.decls.get(name);","    return decl ? decl.node : null;","};","","Scope.prototype.getFromPos = function(name) {","    assert(is.string(name));","    var decl = this.decls.get(name);","    return decl ? decl.from : null;","};","","Scope.prototype.hasOwn = function(name) {","    return this.decls.has(name);","};","","Scope.prototype.remove = function(name) {","    return this.decls.remove(name);","};","","Scope.prototype.doesPropagate = function(name) {","    return this.propagates.has(name);","};","","Scope.prototype.markPropagates = function(name) {","    this.propagates.add(name);","};","","Scope.prototype.closestHoistScope = function() {","    var scope = this;","    while (scope.kind !== \"hoist\") {","        scope = scope.parent;","    }","    return scope;","};","","Scope.prototype.lookup = function(name) {","    for (var scope = this; scope; scope = scope.parent) {","        if (scope.decls.has(name)) {","            return scope;","        } else if (scope.kind === \"hoist\") {","            scope.propagates.add(name);","        }","    }","    return null;","};","","module.exports = Scope;",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"14":0,"15":0,"16":0,"21":0,"24":0,"27":0,"30":0,"43":0,"49":0,"52":0,"53":0,"57":1,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0,"66":0,"70":1,"71":0,"73":1,"74":0,"77":0,"81":0,"82":0,"86":0,"94":0,"98":0,"99":0,"100":0,"102":0,"105":1,"106":0,"107":0,"108":0,"111":1,"112":0,"113":0,"114":0,"117":1,"118":0,"119":0,"120":0,"123":1,"124":0,"127":1,"128":0,"131":1,"132":0,"135":1,"136":0,"139":1,"140":0,"141":0,"142":0,"144":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"155":0,"158":1}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/optionals/angular-dashboard-framework.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/build/es5/optionals/angular-dashboard-framework.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":10},"end":{"line":5,"column":25}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":11},"end":{"line":9,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":15}},"2":{"start":{"line":4,"column":0},"end":{"line":67,"column":2}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":19}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":33}},"5":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"6":{"start":{"line":18,"column":12},"end":{"line":18,"column":25}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":32}},"8":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"9":{"start":{"line":23,"column":12},"end":{"line":23,"column":25}},"10":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"11":{"start":{"line":28,"column":12},"end":{"line":28,"column":25}},"12":{"start":{"line":31,"column":8},"end":{"line":31,"column":26}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":37}},"14":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"15":{"start":{"line":35,"column":12},"end":{"line":35,"column":25}},"16":{"start":{"line":38,"column":8},"end":{"line":38,"column":34}},"17":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"18":{"start":{"line":40,"column":12},"end":{"line":40,"column":25}},"19":{"start":{"line":43,"column":8},"end":{"line":43,"column":39}},"20":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"21":{"start":{"line":45,"column":12},"end":{"line":45,"column":25}},"22":{"start":{"line":48,"column":8},"end":{"line":48,"column":41}},"23":{"start":{"line":49,"column":8},"end":{"line":51,"column":10}},"24":{"start":{"line":53,"column":8},"end":{"line":53,"column":53}},"25":{"start":{"line":56,"column":8},"end":{"line":56,"column":48}},"26":{"start":{"line":57,"column":8},"end":{"line":62,"column":9}},"27":{"start":{"line":58,"column":12},"end":{"line":58,"column":44}},"28":{"start":{"line":59,"column":12},"end":{"line":59,"column":61}},"29":{"start":{"line":60,"column":12},"end":{"line":60,"column":56}},"30":{"start":{"line":61,"column":12},"end":{"line":61,"column":61}},"31":{"start":{"line":64,"column":8},"end":{"line":64,"column":46}},"32":{"start":{"line":65,"column":8},"end":{"line":65,"column":64}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":8}},{"start":{"line":17,"column":8},"end":{"line":17,"column":8}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":8}},{"start":{"line":22,"column":8},"end":{"line":22,"column":8}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"4":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":14},"end":{"line":27,"column":32}},{"start":{"line":27,"column":37},"end":{"line":27,"column":62}},{"start":{"line":27,"column":66},"end":{"line":27,"column":98}}]},"5":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":8}},{"start":{"line":34,"column":8},"end":{"line":34,"column":8}}]},"6":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]},"7":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]},"8":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"9":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":16}},{"start":{"line":57,"column":20},"end":{"line":57,"column":52}}]},"10":{"line":65,"type":"cond-expr","locations":[{"start":{"line":65,"column":43},"end":{"line":65,"column":48}},{"start":{"line":65,"column":51},"end":{"line":65,"column":62}}]}},"code":["\"use strict\";","","var ctx = null;","module.exports = {","    init: function(_ctx) {","        ctx = _ctx;","    },","","    match: function(node) {","        // dashboardProvider.widget(\"name\", {","        //   ...","        //   controller: function($scope) {},","        //   resolve: {f: function($scope) {}, ..}","        // })","","        var callee = node.callee;","        if (!callee) {","            return false;","        }","","        var obj = callee.object;","        if (!obj) {","            return false;","        }","","        // identifier or expression","        if (!(obj.$chained === 1 || (obj.type === \"Identifier\" && obj.name === \"dashboardProvider\"))) {","            return false;","        }","","        node.$chained = 1;","","        var method = callee.property; // identifier","        if (method.name !== \"widget\") {","            return false;","        }","","        var args = node.arguments;","        if (args.length !== 2) {","            return false;","        }","","        var configArg = ctx.last(args);","        if (configArg.type !== \"ObjectExpression\") {","            return false;","        }","","        var props = configArg.properties;","        var res = [","            ctx.matchProp(\"controller\", props)","        ];","        // {resolve: ..}","        res.push.apply(res, ctx.matchResolve(props));","","        // edit: {controller: function(), resolve: {}, apply: function()}","        var edit = ctx.matchProp('edit', props);","        if (edit && edit.type === \"ObjectExpression\") {","            var editProps = edit.properties;","            res.push(ctx.matchProp('controller', editProps));","            res.push(ctx.matchProp('apply', editProps));","            res.push.apply(res, ctx.matchResolve(editProps));","        }","","        var filteredRes = res.filter(Boolean);","        return (filteredRes.length === 0 ? false : filteredRes);","    }","};",""],"l":{"3":1,"4":1,"6":0,"16":0,"17":0,"18":0,"21":0,"22":0,"23":0,"27":0,"28":0,"31":0,"33":0,"34":0,"35":0,"38":0,"39":0,"40":0,"43":0,"44":0,"45":0,"48":0,"49":0,"53":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"64":0,"65":0}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/generate-sourcemap.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/generate-sourcemap.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":1,"41":0,"42":1,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"SourceMapper","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":73}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":43},"end":{"line":14,"column":58}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":43},"end":{"line":20,"column":54}}},"4":{"name":"(anonymous_4)","line":83,"loc":{"start":{"line":83,"column":36},"end":{"line":83,"column":60}}},"5":{"name":"(anonymous_5)","line":91,"loc":{"start":{"line":91,"column":40},"end":{"line":91,"column":60}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":34},"end":{"line":95,"column":46}}},"7":{"name":"compareLoc","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":26}}},"8":{"name":"generateSourcemap","line":103,"loc":{"start":{"line":103,"column":17},"end":{"line":103,"column":92}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":66}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":68}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"6":{"start":{"line":9,"column":0},"end":{"line":18,"column":1}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":19}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":63}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":88}},"11":{"start":{"line":14,"column":60},"end":{"line":14,"column":85}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":25}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":54}},"14":{"start":{"line":20,"column":0},"end":{"line":81,"column":1}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":22}},"16":{"start":{"line":25,"column":4},"end":{"line":25,"column":23}},"17":{"start":{"line":26,"column":4},"end":{"line":26,"column":25}},"18":{"start":{"line":30,"column":4},"end":{"line":30,"column":24}},"19":{"start":{"line":32,"column":4},"end":{"line":32,"column":17}},"20":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}},"21":{"start":{"line":35,"column":4},"end":{"line":80,"column":5}},"22":{"start":{"line":36,"column":8},"end":{"line":69,"column":9}},"23":{"start":{"line":39,"column":12},"end":{"line":39,"column":71}},"24":{"start":{"line":40,"column":12},"end":{"line":40,"column":59}},"25":{"start":{"line":42,"column":12},"end":{"line":42,"column":106}},"26":{"start":{"line":43,"column":12},"end":{"line":43,"column":112}},"27":{"start":{"line":47,"column":12},"end":{"line":47,"column":68}},"28":{"start":{"line":55,"column":12},"end":{"line":57,"column":81}},"29":{"start":{"line":59,"column":12},"end":{"line":59,"column":60}},"30":{"start":{"line":63,"column":12},"end":{"line":66,"column":13}},"31":{"start":{"line":65,"column":16},"end":{"line":65,"column":22}},"32":{"start":{"line":68,"column":12},"end":{"line":68,"column":19}},"33":{"start":{"line":71,"column":8},"end":{"line":79,"column":9}},"34":{"start":{"line":72,"column":12},"end":{"line":73,"column":33}},"35":{"start":{"line":73,"column":16},"end":{"line":73,"column":33}},"36":{"start":{"line":74,"column":12},"end":{"line":77,"column":15}},"37":{"start":{"line":78,"column":12},"end":{"line":78,"column":18}},"38":{"start":{"line":83,"column":0},"end":{"line":89,"column":1}},"39":{"start":{"line":84,"column":4},"end":{"line":88,"column":7}},"40":{"start":{"line":91,"column":0},"end":{"line":93,"column":1}},"41":{"start":{"line":92,"column":4},"end":{"line":92,"column":44}},"42":{"start":{"line":95,"column":0},"end":{"line":97,"column":1}},"43":{"start":{"line":96,"column":4},"end":{"line":96,"column":37}},"44":{"start":{"line":99,"column":0},"end":{"line":101,"column":1}},"45":{"start":{"line":100,"column":4},"end":{"line":100,"column":54}},"46":{"start":{"line":103,"column":0},"end":{"line":123,"column":1}},"47":{"start":{"line":104,"column":4},"end":{"line":104,"column":57}},"48":{"start":{"line":105,"column":4},"end":{"line":105,"column":68}},"49":{"start":{"line":106,"column":4},"end":{"line":106,"column":98}},"50":{"start":{"line":107,"column":4},"end":{"line":107,"column":97}},"51":{"start":{"line":108,"column":4},"end":{"line":108,"column":54}},"52":{"start":{"line":110,"column":4},"end":{"line":110,"column":87}},"53":{"start":{"line":111,"column":4},"end":{"line":111,"column":31}},"54":{"start":{"line":113,"column":4},"end":{"line":122,"column":5}},"55":{"start":{"line":114,"column":8},"end":{"line":115,"column":76}},"56":{"start":{"line":115,"column":12},"end":{"line":115,"column":76}},"57":{"start":{"line":117,"column":8},"end":{"line":119,"column":69}},"58":{"start":{"line":121,"column":8},"end":{"line":121,"column":39}}},"branchMap":{"1":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":15},"end":{"line":36,"column":43}},{"start":{"line":37,"column":12},"end":{"line":37,"column":83}}]},"2":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":16},"end":{"line":56,"column":100}},{"start":{"line":57,"column":16},"end":{"line":57,"column":80}}]},"3":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":19},"end":{"line":63,"column":50}},{"start":{"line":64,"column":16},"end":{"line":64,"column":85}}]},"4":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]},"5":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":12}},{"start":{"line":72,"column":12},"end":{"line":72,"column":12}}]},"6":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":27}},{"start":{"line":100,"column":33},"end":{"line":100,"column":52}}]},"7":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":30},"end":{"line":105,"column":41}},{"start":{"line":105,"column":45},"end":{"line":105,"column":67}}]},"8":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":20},"end":{"line":106,"column":37}},{"start":{"line":106,"column":41},"end":{"line":106,"column":63}},{"start":{"line":106,"column":68},"end":{"line":106,"column":82}},{"start":{"line":106,"column":86},"end":{"line":106,"column":97}}]},"9":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":24},"end":{"line":107,"column":41}},{"start":{"line":107,"column":45},"end":{"line":107,"column":73}},{"start":{"line":107,"column":78},"end":{"line":107,"column":96}}]},"10":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"11":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":8}},{"start":{"line":114,"column":8},"end":{"line":114,"column":8}}]}},"code":["\"use strict\";","","const os = require(\"os\");","const convertSourceMap = require(\"convert-source-map\");","const SourceMapConsumer = require(\"source-map\").SourceMapConsumer;","const SourceMapGenerator = require(\"source-map\").SourceMapGenerator;","const stableSort = require(\"stable\");","","function SourceMapper(src, nodePositions, fragments, inFile, sourceRoot) {","    this.generator = new SourceMapGenerator({ sourceRoot: sourceRoot });","    this.src = src;","    // stableSort does not mutate input array so no need to copy it","    this.nodePositions = stableSort(nodePositions, compareLoc);","    this.fragments = stableSort(fragments, function(a, b) { return a.start - b.start });","    this.inFile = inFile;","","    this.generator.setSourceContent(this.inFile, src);","}","","SourceMapper.prototype.calculateMappings = function() {","    const self = this;","","    // These offsets represent the difference in coordinates between a node in the source","    // and the corresponding position in the output.","    let lineOffset = 0;","    let columnOffset = 0;","","    // Since the column position resets to zero after each newline, we have to keep track","    // of the current line that columnOffset refers to in order to know whether to reset it","    let currentLine = 0;","","    let frag = 0;","    let pos = 0;","","    while (pos < self.nodePositions.length) {","        while (frag < self.fragments.length &&","            compareLoc(self.fragments[frag].loc.start, self.nodePositions[pos]) < 1) {","","            const fragmentLines = self.fragments[frag].str.split(\"\\n\");","            const addedNewlines = fragmentLines.length - 1;","","            const replacedLines = self.fragments[frag].loc.end.line - self.fragments[frag].loc.start.line;","            const replacedColumns = self.fragments[frag].loc.end.column - self.fragments[frag].loc.start.column;","","            // If there were any lines added by the fragment string, the line offset should increase;","            // If there were any lines removed by the fragment replacement then the line offset should decrease","            lineOffset = lineOffset + addedNewlines - replacedLines;","","            // The column position needs to reset after each newline.  So if the fragment added any","            // newlines then the column offset is the difference between the column of the last line of","            // the fragment, and the column of the end of the replaced section of the source.","            // Otherwise we increment or decrement the column offset just like how the line offset works.","            // Note that \"replacedColumns\" might be negative in some cases (if the beginning of the source","            // was further right than the end due to a newline); the math still works out.","            columnOffset = fragmentLines.length > 1 ?","                fragmentLines[fragmentLines.length - 1].length - self.fragments[frag].loc.end.column :","                columnOffset + self.fragments[frag].str.length - replacedColumns;","","            currentLine = self.fragments[frag].loc.end.line;","","            // Skip creating mappings for any source nodes that were replaced by this fragment (and are thus","            // no longer a part of the output)","            while (pos < self.nodePositions.length &&","                compareLoc(self.fragments[frag].loc.end, self.nodePositions[pos]) > 0) {","                ++pos;","            }","","            ++frag;","        }","","        if (pos < self.nodePositions.length) {","            if (currentLine < self.nodePositions[pos].line)","                columnOffset = 0;","            self.addMapping(self.nodePositions[pos], {","                line: self.nodePositions[pos].line + lineOffset,","                column: self.nodePositions[pos].column + columnOffset","            });","            ++pos;","        }","    }","}","","SourceMapper.prototype.addMapping = function(input, output) {","    this.generator.addMapping({","        source: this.inFile,","        original: input,","        generated: output","    });","}","","SourceMapper.prototype.applySourceMap = function (consumer) {","    this.generator.applySourceMap(consumer);","}","","SourceMapper.prototype.generate = function () {","    return this.generator.toString();","}","","function compareLoc(a, b) {","    return (a.line - b.line) || (a.column - b.column);","}","","module.exports = function generateSourcemap(result, src, nodePositions, fragments, mapOpts) {","    const existingMap = convertSourceMap.fromSource(src);","    const existingMapObject = existingMap && existingMap.toObject();","    const inFile = (existingMapObject && existingMapObject.file) || mapOpts.inFile || \"source.js\";","    const sourceRoot = (existingMapObject && existingMapObject.sourceRoot) || mapOpts.sourceRoot;","    src = convertSourceMap.removeMapFileComments(src);","","    const mapper = new SourceMapper(src, nodePositions, fragments, inFile, sourceRoot);","    mapper.calculateMappings();","","    if (mapOpts.inline) {","        if (existingMapObject)","            mapper.applySourceMap(new SourceMapConsumer(existingMapObject));","","        result.src = convertSourceMap.removeMapFileComments(result.src) +","            os.EOL +","            convertSourceMap.fromJSON(mapper.generate()).toComment();","    } else {","        result.map = mapper.generate();","    }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":0,"11":0,"13":0,"14":0,"15":0,"17":0,"20":1,"21":0,"25":0,"26":0,"30":0,"32":0,"33":0,"35":0,"36":0,"39":0,"40":0,"42":0,"43":0,"47":0,"55":0,"59":0,"63":0,"65":0,"68":0,"71":0,"72":0,"73":0,"74":0,"78":0,"83":1,"84":0,"91":1,"92":0,"95":1,"96":0,"99":1,"100":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"110":0,"111":0,"113":0,"114":0,"115":0,"117":0,"121":0}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/lut.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/lut.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"Lut","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":23}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":24},"end":{"line":22,"column":39}}},"3":{"name":"findNodeFromPos","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":30}}},"4":{"name":"findNodeBeforePos","line":90,"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":32}}},"5":{"name":"last","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":19}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":21}},"5":{"start":{"line":13,"column":0},"end":{"line":49,"column":1}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":32}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":47}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":22}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":45}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":20}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":14}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":26}},"13":{"start":{"line":22,"column":4},"end":{"line":35,"column":8}},"14":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"15":{"start":{"line":25,"column":12},"end":{"line":25,"column":19}},"16":{"start":{"line":27,"column":8},"end":{"line":27,"column":26}},"17":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"18":{"start":{"line":29,"column":12},"end":{"line":29,"column":35}},"19":{"start":{"line":31,"column":8},"end":{"line":31,"column":26}},"20":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"21":{"start":{"line":33,"column":12},"end":{"line":33,"column":33}},"22":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"23":{"start":{"line":37,"column":8},"end":{"line":37,"column":37}},"24":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"25":{"start":{"line":40,"column":8},"end":{"line":40,"column":33}},"26":{"start":{"line":42,"column":4},"end":{"line":42,"column":26}},"27":{"start":{"line":47,"column":4},"end":{"line":47,"column":25}},"28":{"start":{"line":48,"column":4},"end":{"line":48,"column":21}},"29":{"start":{"line":51,"column":0},"end":{"line":51,"column":48}},"30":{"start":{"line":52,"column":0},"end":{"line":52,"column":52}},"31":{"start":{"line":56,"column":0},"end":{"line":86,"column":1}},"32":{"start":{"line":57,"column":4},"end":{"line":57,"column":28}},"33":{"start":{"line":58,"column":4},"end":{"line":58,"column":45}},"34":{"start":{"line":60,"column":4},"end":{"line":60,"column":17}},"35":{"start":{"line":61,"column":4},"end":{"line":61,"column":31}},"36":{"start":{"line":62,"column":4},"end":{"line":71,"column":5}},"37":{"start":{"line":63,"column":8},"end":{"line":63,"column":51}},"38":{"start":{"line":64,"column":8},"end":{"line":64,"column":45}},"39":{"start":{"line":65,"column":8},"end":{"line":70,"column":9}},"40":{"start":{"line":66,"column":12},"end":{"line":66,"column":27}},"41":{"start":{"line":69,"column":12},"end":{"line":69,"column":24}},"42":{"start":{"line":72,"column":4},"end":{"line":75,"column":5}},"43":{"start":{"line":73,"column":8},"end":{"line":73,"column":41}},"44":{"start":{"line":74,"column":8},"end":{"line":74,"column":20}},"45":{"start":{"line":77,"column":4},"end":{"line":77,"column":23}},"46":{"start":{"line":78,"column":4},"end":{"line":78,"column":41}},"47":{"start":{"line":79,"column":4},"end":{"line":79,"column":28}},"48":{"start":{"line":80,"column":4},"end":{"line":83,"column":5}},"49":{"start":{"line":81,"column":8},"end":{"line":81,"column":48}},"50":{"start":{"line":82,"column":8},"end":{"line":82,"column":30}},"51":{"start":{"line":85,"column":4},"end":{"line":85,"column":22}},"52":{"start":{"line":90,"column":0},"end":{"line":122,"column":1}},"53":{"start":{"line":91,"column":4},"end":{"line":91,"column":26}},"54":{"start":{"line":92,"column":4},"end":{"line":92,"column":45}},"55":{"start":{"line":94,"column":4},"end":{"line":94,"column":17}},"56":{"start":{"line":95,"column":4},"end":{"line":95,"column":31}},"57":{"start":{"line":96,"column":4},"end":{"line":105,"column":5}},"58":{"start":{"line":97,"column":8},"end":{"line":97,"column":50}},"59":{"start":{"line":98,"column":8},"end":{"line":98,"column":45}},"60":{"start":{"line":99,"column":8},"end":{"line":104,"column":9}},"61":{"start":{"line":100,"column":12},"end":{"line":100,"column":28}},"62":{"start":{"line":103,"column":12},"end":{"line":103,"column":23}},"63":{"start":{"line":106,"column":4},"end":{"line":109,"column":5}},"64":{"start":{"line":107,"column":8},"end":{"line":107,"column":38}},"65":{"start":{"line":108,"column":8},"end":{"line":108,"column":20}},"66":{"start":{"line":111,"column":4},"end":{"line":111,"column":23}},"67":{"start":{"line":112,"column":4},"end":{"line":112,"column":41}},"68":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"69":{"start":{"line":114,"column":8},"end":{"line":114,"column":20}},"70":{"start":{"line":116,"column":4},"end":{"line":119,"column":5}},"71":{"start":{"line":117,"column":8},"end":{"line":117,"column":48}},"72":{"start":{"line":118,"column":8},"end":{"line":118,"column":30}},"73":{"start":{"line":121,"column":4},"end":{"line":121,"column":22}},"74":{"start":{"line":124,"column":0},"end":{"line":126,"column":1}},"75":{"start":{"line":125,"column":4},"end":{"line":125,"column":31}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":8}},{"start":{"line":28,"column":8},"end":{"line":28,"column":8}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":8}},{"start":{"line":32,"column":8},"end":{"line":32,"column":8}}]},"4":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":11},"end":{"line":58,"column":31}},{"start":{"line":58,"column":35},"end":{"line":58,"column":43}}]},"5":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":15},"end":{"line":64,"column":23}},{"start":{"line":64,"column":27},"end":{"line":64,"column":43}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"8":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":11},"end":{"line":92,"column":31}},{"start":{"line":92,"column":35},"end":{"line":92,"column":43}}]},"10":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":15},"end":{"line":98,"column":23}},{"start":{"line":98,"column":27},"end":{"line":98,"column":43}}]},"11":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":8}},{"start":{"line":99,"column":8},"end":{"line":99,"column":8}}]},"12":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"13":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"14":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]}},"code":["// lut.js","// MIT licensed, see LICENSE file","// Copyright (c) 2013-2016 Olov Lassus <olov.lassus@gmail.com>","","\"use strict\";","","const assert = require(\"assert\");","const traverse = require(\"ordered-ast-traverse\");","const is = require(\"simple-is\");","","module.exports = Lut;","","function Lut(ast, src) {","    assert(this instanceof Lut);","","    const sparseBegins = new Array(src.length);","    const begins = [];","    const sparseEnds = new Array(src.length);","    const ends = [];","    let p = 0;","    const t0 = Date.now();","    traverse(ast, {pre: function(node) {","        //        assert (node.range[0] >= p);","        if (node.type === \"Program\") {","            return;","        }","        p = node.range[0];","        if (!sparseBegins[p]) {","            sparseBegins[p] = node;","        }","        p = node.range[1];","        if (!sparseEnds[p]) {","            sparseEnds[p] = node;","        }","    }});","    for (let i in sparseBegins) {","        begins.push(sparseBegins[i]);","    }","    for (let i in sparseEnds) {","        ends.push(sparseEnds[i]);","    }","    const t1 = Date.now();","    //    console.error(t1-t0)","","    // begins and ends are compact arrays with nodes,","    // sorted on node.range[0/1] (unique)","    this.begins = begins;","    this.ends = ends;","}","","Lut.prototype.findNodeFromPos = findNodeFromPos;","Lut.prototype.findNodeBeforePos = findNodeBeforePos;","","// binary search lut to find node beginning at pos","// or as close after pos as possible. null if none","function findNodeFromPos(pos) {","    const lut = this.begins;","    assert(is.finitenumber(pos) && pos >= 0);","","    let left = 0;","    let right = lut.length - 1;","    while (left < right) {","        const mid = Math.floor((left + right) / 2);","        assert(mid >= 0 && mid < lut.length);","        if (pos > lut[mid].range[0]) {","            left = mid + 1;","        }","        else {","            right = mid;","        }","    }","    if (left > right) {","        assert(last(lut).range[0] < pos);","        return null;","    }","","    const found = left;","    const foundPos = lut[found].range[0];","    assert(foundPos >= pos);","    if (found >= 1) {","        const prevPos = lut[found - 1].range[0];","        assert(prevPos < pos);","    }","","    return lut[found];","}","","// binary search lut to find node ending (as in range[1]","// at or before pos. null if none","function findNodeBeforePos(pos) {","    const lut = this.ends;","    assert(is.finitenumber(pos) && pos >= 0);","","    let left = 0;","    let right = lut.length - 1;","    while (left < right) {","        const mid = Math.ceil((left + right) / 2);","        assert(mid >= 0 && mid < lut.length);","        if (pos < lut[mid].range[1]) {","            right = mid - 1;","        }","        else {","            left = mid;","        }","    }","    if (left > right) {","        assert(lut[0].range[1] > pos);","        return null;","    }","","    const found = left;","    const foundPos = lut[found].range[1];","    if(foundPos > pos) {","        return null;","    }","    if (found <= lut.length - 2) {","        const nextPos = lut[found + 1].range[1];","        assert(nextPos > pos);","    }","","    return lut[found];","}","","function last(arr) {","    return arr[arr.length - 1];","}",""],"l":{"7":1,"8":1,"9":1,"11":1,"13":1,"14":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"36":0,"37":0,"39":0,"40":0,"42":0,"47":0,"48":0,"51":1,"52":1,"56":1,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"69":0,"72":0,"73":0,"74":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"85":0,"90":1,"91":0,"92":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"103":0,"106":0,"107":0,"108":0,"111":0,"112":0,"113":0,"114":0,"116":0,"117":0,"118":0,"121":0,"124":1,"125":0}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/ng-annotate.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/ng-annotate.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1,"10":6,"11":6,"12":6,"13":6,"14":2,"15":0,"16":0,"17":0,"18":0,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":2,"26":2,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":2,"37":2,"38":2,"39":1,"40":2,"41":2,"42":2,"43":2,"44":2,"45":2,"46":2,"47":2,"48":18,"49":10,"50":2,"51":0,"52":0,"53":0,"54":2,"55":0,"56":2,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":2,"67":2,"68":0,"69":0,"70":0,"71":0,"72":0,"73":2,"74":2,"75":2,"76":2,"77":2,"78":0,"79":2,"80":2,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":2,"92":0,"93":0,"94":0,"95":2,"96":2},"b":{"1":[6,0],"2":[0,2],"3":[0,0],"4":[2,0],"5":[2,0],"6":[2,2],"7":[0,2],"8":[2,0],"9":[2,0],"10":[2,0],"11":[10,8],"12":[0,2],"13":[0,0],"14":[0,2],"15":[2,0],"16":[0,2],"17":[0,0],"18":[0,0],"19":[2,0],"20":[0,2],"21":[0,2],"22":[0,2],"23":[2,0],"24":[0,2],"25":[2,2],"26":[2,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":2,"6":2,"7":2,"8":18,"9":0,"10":0},"fnMap":{"1":{"name":"exit","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":19}}},"2":{"name":"slurpStdin","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":24}}},"3":{"name":"(anonymous_3)","line":103,"loc":{"start":{"line":103,"column":29},"end":{"line":103,"column":41}}},"4":{"name":"(anonymous_4)","line":106,"loc":{"start":{"line":106,"column":28},"end":{"line":106,"column":39}}},"5":{"name":"slurpFile","line":112,"loc":{"start":{"line":112,"column":0},"end":{"line":112,"column":23}}},"6":{"name":"runAnnotate","line":120,"loc":{"start":{"line":120,"column":0},"end":{"line":120,"column":31}}},"7":{"name":"(anonymous_7)","line":127,"loc":{"start":{"line":127,"column":25},"end":{"line":127,"column":36}}},"8":{"name":"(anonymous_8)","line":135,"loc":{"start":{"line":135,"column":101},"end":{"line":135,"column":115}}},"9":{"name":"(anonymous_9)","line":156,"loc":{"start":{"line":156,"column":42},"end":{"line":156,"column":57}}},"10":{"name":"(anonymous_10)","line":203,"loc":{"start":{"line":203,"column":20},"end":{"line":203,"column":32}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":22}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":49}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":50}},"7":{"start":{"line":13,"column":0},"end":{"line":62,"column":7}},"8":{"start":{"line":64,"column":0},"end":{"line":64,"column":27}},"9":{"start":{"line":66,"column":0},"end":{"line":72,"column":1}},"10":{"start":{"line":67,"column":4},"end":{"line":70,"column":5}},"11":{"start":{"line":68,"column":8},"end":{"line":68,"column":34}},"12":{"start":{"line":69,"column":8},"end":{"line":69,"column":35}},"13":{"start":{"line":71,"column":4},"end":{"line":71,"column":21}},"14":{"start":{"line":75,"column":0},"end":{"line":81,"column":1}},"15":{"start":{"line":76,"column":4},"end":{"line":76,"column":51}},"16":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"17":{"start":{"line":78,"column":8},"end":{"line":78,"column":53}},"18":{"start":{"line":80,"column":4},"end":{"line":80,"column":20}},"19":{"start":{"line":84,"column":0},"end":{"line":87,"column":1}},"20":{"start":{"line":85,"column":4},"end":{"line":85,"column":24}},"21":{"start":{"line":86,"column":4},"end":{"line":86,"column":42}},"22":{"start":{"line":89,"column":0},"end":{"line":92,"column":1}},"23":{"start":{"line":90,"column":4},"end":{"line":90,"column":24}},"24":{"start":{"line":91,"column":4},"end":{"line":91,"column":56}},"25":{"start":{"line":94,"column":0},"end":{"line":94,"column":32}},"26":{"start":{"line":96,"column":0},"end":{"line":96,"column":57}},"27":{"start":{"line":99,"column":0},"end":{"line":110,"column":1}},"28":{"start":{"line":100,"column":4},"end":{"line":100,"column":17}},"29":{"start":{"line":102,"column":4},"end":{"line":102,"column":38}},"30":{"start":{"line":103,"column":4},"end":{"line":105,"column":7}},"31":{"start":{"line":104,"column":8},"end":{"line":104,"column":17}},"32":{"start":{"line":106,"column":4},"end":{"line":108,"column":7}},"33":{"start":{"line":107,"column":8},"end":{"line":107,"column":22}},"34":{"start":{"line":109,"column":4},"end":{"line":109,"column":27}},"35":{"start":{"line":112,"column":0},"end":{"line":118,"column":1}},"36":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"37":{"start":{"line":114,"column":8},"end":{"line":114,"column":66}},"38":{"start":{"line":117,"column":4},"end":{"line":117,"column":30}},"39":{"start":{"line":120,"column":0},"end":{"line":220,"column":1}},"40":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"41":{"start":{"line":122,"column":8},"end":{"line":122,"column":26}},"42":{"start":{"line":125,"column":4},"end":{"line":125,"column":22}},"43":{"start":{"line":127,"column":4},"end":{"line":129,"column":11}},"44":{"start":{"line":128,"column":8},"end":{"line":128,"column":78}},"45":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"46":{"start":{"line":132,"column":8},"end":{"line":132,"column":33}},"47":{"start":{"line":135,"column":4},"end":{"line":139,"column":7}},"48":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"49":{"start":{"line":137,"column":12},"end":{"line":137,"column":36}},"50":{"start":{"line":141,"column":4},"end":{"line":146,"column":5}},"51":{"start":{"line":142,"column":8},"end":{"line":142,"column":67}},"52":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"53":{"start":{"line":144,"column":12},"end":{"line":144,"column":41}},"54":{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},"55":{"start":{"line":149,"column":8},"end":{"line":149,"column":40}},"56":{"start":{"line":152,"column":4},"end":{"line":169,"column":5}},"57":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"58":{"start":{"line":154,"column":12},"end":{"line":154,"column":44}},"59":{"start":{"line":156,"column":8},"end":{"line":168,"column":11}},"60":{"start":{"line":157,"column":12},"end":{"line":157,"column":72}},"61":{"start":{"line":158,"column":12},"end":{"line":160,"column":13}},"62":{"start":{"line":159,"column":16},"end":{"line":159,"column":68}},"63":{"start":{"line":162,"column":12},"end":{"line":167,"column":13}},"64":{"start":{"line":163,"column":16},"end":{"line":163,"column":40}},"65":{"start":{"line":166,"column":16},"end":{"line":166,"column":71}},"66":{"start":{"line":171,"column":4},"end":{"line":171,"column":64}},"67":{"start":{"line":172,"column":4},"end":{"line":184,"column":5}},"68":{"start":{"line":173,"column":8},"end":{"line":173,"column":55}},"69":{"start":{"line":174,"column":8},"end":{"line":174,"column":31}},"70":{"start":{"line":175,"column":8},"end":{"line":180,"column":9}},"71":{"start":{"line":176,"column":12},"end":{"line":179,"column":15}},"72":{"start":{"line":181,"column":8},"end":{"line":181,"column":36}},"73":{"start":{"line":183,"column":8},"end":{"line":183,"column":29}},"74":{"start":{"line":186,"column":4},"end":{"line":186,"column":30}},"75":{"start":{"line":187,"column":4},"end":{"line":187,"column":40}},"76":{"start":{"line":188,"column":4},"end":{"line":188,"column":30}},"77":{"start":{"line":190,"column":4},"end":{"line":192,"column":5}},"78":{"start":{"line":191,"column":8},"end":{"line":191,"column":36}},"79":{"start":{"line":194,"column":4},"end":{"line":194,"column":29}},"80":{"start":{"line":195,"column":4},"end":{"line":209,"column":5}},"81":{"start":{"line":196,"column":8},"end":{"line":196,"column":30}},"82":{"start":{"line":197,"column":8},"end":{"line":197,"column":28}},"83":{"start":{"line":198,"column":8},"end":{"line":198,"column":73}},"84":{"start":{"line":199,"column":8},"end":{"line":199,"column":92}},"85":{"start":{"line":200,"column":8},"end":{"line":200,"column":55}},"86":{"start":{"line":201,"column":8},"end":{"line":201,"column":52}},"87":{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},"88":{"start":{"line":204,"column":12},"end":{"line":204,"column":45}},"89":{"start":{"line":207,"column":8},"end":{"line":207,"column":125}},"90":{"start":{"line":208,"column":8},"end":{"line":208,"column":130}},"91":{"start":{"line":211,"column":4},"end":{"line":219,"column":5}},"92":{"start":{"line":212,"column":8},"end":{"line":216,"column":9}},"93":{"start":{"line":213,"column":12},"end":{"line":213,"column":48}},"94":{"start":{"line":215,"column":12},"end":{"line":215,"column":28}},"95":{"start":{"line":217,"column":11},"end":{"line":219,"column":5}},"96":{"start":{"line":218,"column":8},"end":{"line":218,"column":38}}},"branchMap":{"1":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"2":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":0},"end":{"line":75,"column":0}},{"start":{"line":75,"column":0},"end":{"line":75,"column":0}}]},"3":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"4":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":0},"end":{"line":84,"column":0}},{"start":{"line":84,"column":0},"end":{"line":84,"column":0}}]},"5":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":0},"end":{"line":89,"column":0}},{"start":{"line":89,"column":0},"end":{"line":89,"column":0}}]},"6":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":13}},{"start":{"line":89,"column":17},"end":{"line":89,"column":29}}]},"7":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":20},"end":{"line":96,"column":30}},{"start":{"line":96,"column":33},"end":{"line":96,"column":42}}]},"8":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"9":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"10":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"11":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]},"12":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"13":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":8}},{"start":{"line":143,"column":8},"end":{"line":143,"column":8}}]},"14":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"15":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":21}},{"start":{"line":148,"column":25},"end":{"line":148,"column":54}}]},"16":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"17":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":8}},{"start":{"line":153,"column":8},"end":{"line":153,"column":8}}]},"18":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":12},"end":{"line":158,"column":12}},{"start":{"line":158,"column":12},"end":{"line":158,"column":12}}]},"19":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":26},"end":{"line":171,"column":39}},{"start":{"line":171,"column":43},"end":{"line":171,"column":63}}]},"20":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"21":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":4},"end":{"line":190,"column":4}},{"start":{"line":190,"column":4},"end":{"line":190,"column":4}}]},"22":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"23":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":8},"end":{"line":195,"column":20}},{"start":{"line":195,"column":24},"end":{"line":195,"column":29}}]},"24":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"25":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":8},"end":{"line":211,"column":15}},{"start":{"line":211,"column":19},"end":{"line":211,"column":27}}]},"26":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":11},"end":{"line":217,"column":11}},{"start":{"line":217,"column":11},"end":{"line":217,"column":11}}]}},"code":["// ng-annotate.js","// MIT licensed, see LICENSE file","// Copyright (c) 2013-2016 Olov Lassus <olov.lassus@gmail.com>","","\"use strict\";","","const t0 = Date.now();","const fs = require(\"fs\");","const fmt = require(\"simple-fmt\");","const tryor = require(\"tryor\");","const ngAnnotate = require(\"./ng-annotate-main\");","const version = require(\"./package.json\").version;","const optimist = require(\"optimist\")","    .usage(\"ng-annotate v\" + version + \"\\n\\nUsage: ng-annotate OPTIONS <file>\\n\\n\" +","        \"provide - instead of <file> to read from stdin\\n\" +","        \"use -a and -r together to remove and add (rebuild) annotations in one go\")","    .options(\"a\", {","        alias: \"add\",","        boolean: true,","        describe: \"add dependency injection annotations where non-existing\",","    })","    .options(\"r\", {","        alias: \"remove\",","        boolean: true,","        describe: \"remove all existing dependency injection annotations\",","    })","    .options(\"o\", {","        describe: \"write output to <file>. output is written to stdout by default\",","    })","    .options(\"sourcemap\", {","        boolean: true,","        describe: \"generate an inline sourcemap\"","    })","    .options(\"sourceroot\", {","        describe: \"set the sourceRoot property of the generated sourcemap\"","    })","    .options(\"single_quotes\", {","        boolean: true,","        describe: \"use single quotes (') instead of double quotes (\\\")\",","    })","    .options(\"regexp\", {","        describe: \"detect short form myMod.controller(...) iff myMod matches regexp\",","    })","    .options(\"rename\", {","        describe: \"rename declarations and annotated references\\n\" +","            \"oldname1 newname1 oldname2 newname2 ...\",","        default: \"\"","    })","    .options(\"plugin\", {","        describe: \"use plugin with path (experimental)\",","    })","    .options(\"enable\", {","        describe: \"enable optional with name\",","    })","    .options(\"list\", {","        describe: \"list all optional names\",","        boolean: true,","    })","    .options(\"stats\", {","        boolean: true,","        describe: \"print statistics on stderr (experimental)\",","    });","","const argv = optimist.argv;","","function exit(msg) {","    if (msg) {","        process.stderr.write(msg);","        process.stderr.write(\"\\n\");","    }","    process.exit(-1);","}","","// special-case for --list","if (argv.list) {","    const list = ngAnnotate(\"\", {list: true}).list;","    if (list.length >= 1) {","        process.stdout.write(list.join(\"\\n\") + \"\\n\");","    }","    process.exit(0);","}","","// validate options","if (argv._.length !== 1) {","    optimist.showHelp();","    exit(\"error: no input file provided\");","}","","if (!argv.add && !argv.remove) {","    optimist.showHelp();","    exit(\"error: missing option --add and/or --remove\");","}","","const filename = argv._.shift();","","(filename === \"-\" ? slurpStdin : slurpFile)(runAnnotate);","","","function slurpStdin(cb) {","    let buf = \"\";","","    process.stdin.setEncoding(\"utf8\");","    process.stdin.on(\"data\", function(d) {","        buf += d;","    });","    process.stdin.on(\"end\", function() {","        cb(null, buf);","    });","    process.stdin.resume();","}","","function slurpFile(cb) {","    if (!fs.existsSync(filename)) {","        cb(new Error(fmt('error: file not found {0}', filename)));","    }","","    fs.readFile(filename, cb);","}","","function runAnnotate(err, src) {","    if (err) {","        exit(err.message);","    }","","    src = String(src);","","    const config = tryor(function() {","        return JSON.parse(String(fs.readFileSync(\"ng-annotate-config.json\")));","    }, {});","","    if (filename !== \"-\") {","        config.inFile = filename;","    }","","    [\"add\", \"remove\", \"o\", \"regexp\", \"rename\", \"single_quotes\", \"plugin\", \"enable\", \"stats\"].forEach(function(opt) {","        if (opt in argv) {","            config[opt] = argv[opt];","        }","    });","","    if (argv.sourcemap) {","        config.map = { inline: true, sourceRoot: argv.sourceroot };","        if (filename !== \"-\") {","            config.map.inFile = filename;","        }","    };","","    if (config.enable && !Array.isArray(config.enable)) {","        config.enable = [config.enable];","    }","","    if (config.plugin) {","        if (!Array.isArray(config.plugin)) {","            config.plugin = [config.plugin];","        }","        config.plugin = config.plugin.map(function(path) {","            const absPath = tryor(fs.realpathSync.bind(fs, path), null);","            if (!absPath) {","                exit(fmt('error: plugin file not found {0}', path));","            }","            // the require below may throw an exception on parse-error","            try {","                return require(absPath);","            } catch (e) {","                // node will already print file:line and offending line to stderr","                exit(fmt(\"error: couldn't require(\\\"{0}\\\")\", absPath));","            }","        });","    }","","    const trimmedRename = config.rename && config.rename.trim();","    if (trimmedRename) {","        const flattenRename = trimmedRename.split(\" \");","        const renameArray = [];","        for (let i = 0; i < flattenRename.length; i = i + 2) {","            renameArray.push({","                \"from\": flattenRename[i],","                \"to\": flattenRename[i + 1],","            });","        }","        config.rename = renameArray;","    } else {","        config.rename = null;","    }","","    const run_t0 = Date.now();","    const ret = ngAnnotate(src, config);","    const run_t1 = Date.now();","","    if (ret.errors) {","        exit(ret.errors.join(\"\\n\"));","    }","","    const stats = ret._stats;","    if (config.stats && stats) {","        const t1 = Date.now();","        const all = t1 - t0;","        const run_parser = stats.parser_parse_t1 - stats.parser_parse_t0;","        const all_parser = run_parser + (stats.parser_require_t1 - stats.parser_require_t0);","        const nga_run = (run_t1 - run_t0) - run_parser;","        const nga_init = all - all_parser - nga_run;","","        const pct = function(n) {","            return Math.round(100 * n / all);","        }","","        process.stderr.write(fmt(\"[{0} ms] parser: {1}, nga init: {2}, nga run: {3}\\n\", all, all_parser, nga_init, nga_run));","        process.stderr.write(fmt(\"[%] parser: {0}, nga init: {1}, nga run: {2}\\n\", pct(all_parser), pct(nga_init), pct(nga_run)));","    }","","    if (ret.src && config.o) {","        try {","            fs.writeFileSync(config.o, ret.src);","        } catch (e) {","            exit(e.message);","        }","    } else if (ret.src) {","        process.stdout.write(ret.src);","    }","}",""],"l":{"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"64":2,"66":1,"67":6,"68":6,"69":6,"71":6,"75":2,"76":0,"77":0,"78":0,"80":0,"84":2,"85":2,"86":2,"89":2,"90":2,"91":2,"94":2,"96":2,"99":1,"100":0,"102":0,"103":0,"104":0,"106":0,"107":0,"109":0,"112":1,"113":2,"114":2,"117":2,"120":1,"121":2,"122":2,"125":2,"127":2,"128":2,"131":2,"132":2,"135":2,"136":18,"137":10,"141":2,"142":0,"143":0,"144":0,"148":2,"149":0,"152":2,"153":0,"154":0,"156":0,"157":0,"158":0,"159":0,"162":0,"163":0,"166":0,"171":2,"172":2,"173":0,"174":0,"175":0,"176":0,"181":0,"183":2,"186":2,"187":2,"188":2,"190":2,"191":0,"194":2,"195":2,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"203":0,"204":0,"207":0,"208":0,"211":2,"212":0,"213":0,"215":0,"217":2,"218":2}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/ng-annotate-main.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/ng-annotate-main.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":1,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":1,"176":0,"177":1,"178":0,"179":1,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":1,"201":0,"202":0,"203":0,"204":1,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":0,"225":0,"226":1,"227":0,"228":0,"229":0,"230":0,"231":0,"232":1,"233":0,"234":0,"235":0,"236":1,"237":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":1,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":1,"277":0,"278":0,"279":1,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":1,"300":0,"301":0,"302":0,"303":1,"304":0,"305":0,"306":0,"307":0,"308":0,"309":1,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":1,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":1,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":1,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":1,"374":0,"375":0,"376":0,"377":0,"378":0,"379":1,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":1,"403":0,"404":0,"405":0,"406":1,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":1,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":1,"435":0,"436":1,"437":0,"438":0,"439":1,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":1,"451":0,"452":1,"453":0,"454":1,"455":0,"456":1,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":1,"466":1,"467":2,"468":0,"469":2,"470":2,"471":2,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":1,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0},"b":{"1":[0,0,0],"2":[0,0,0,0,0,0,0,0,0],"3":[0,0,0,0,0],"4":[0,0],"5":[0,0,0,0,0,0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0,0,0,0,0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0,0,0],"38":[0,0,0,0,0,0,0],"39":[0,0,0,0,0],"40":[0,0],"41":[0,0,0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0,0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0,0,0],"55":[0,0],"56":[0,0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0,0],"61":[0,0,0,0,0],"62":[0,0],"63":[0,0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0,0,0,0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0,0,0,0,0,0,0,0,0,0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,2],"164":[0,2],"165":[2,0],"166":[0,2],"167":[0,2],"168":[2,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":2,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0},"fnMap":{"1":{"name":"match","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":40}}},"2":{"name":"matchMaterialShowModalOpen","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":42}}},"3":{"name":"matchDirectiveReturnObject","line":70,"loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":42}}},"4":{"name":"limit","line":79,"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":27}}},"5":{"name":"matchProviderGet","line":86,"loc":{"start":{"line":86,"column":0},"end":{"line":86,"column":32}}},"6":{"name":"matchNgRoute","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":28}}},"7":{"name":"matchNgUi","line":139,"loc":{"start":{"line":139,"column":0},"end":{"line":139,"column":25}}},"8":{"name":"recursiveMatch","line":201,"loc":{"start":{"line":201,"column":4},"end":{"line":201,"column":50}}},"9":{"name":"matchStateProps","line":219,"loc":{"start":{"line":219,"column":4},"end":{"line":219,"column":41}}},"10":{"name":"(anonymous_10)","line":235,"loc":{"start":{"line":235,"column":33},"end":{"line":235,"column":48}}},"11":{"name":"(anonymous_11)","line":247,"loc":{"start":{"line":247,"column":42},"end":{"line":247,"column":57}}},"12":{"name":"matchInjectorInvoke","line":259,"loc":{"start":{"line":259,"column":0},"end":{"line":259,"column":35}}},"13":{"name":"matchHttpProvider","line":272,"loc":{"start":{"line":272,"column":0},"end":{"line":272,"column":33}}},"14":{"name":"matchControllerProvider","line":287,"loc":{"start":{"line":287,"column":0},"end":{"line":287,"column":39}}},"15":{"name":"matchProvide","line":305,"loc":{"start":{"line":305,"column":0},"end":{"line":305,"column":33}}},"16":{"name":"matchRegular","line":332,"loc":{"start":{"line":332,"column":0},"end":{"line":332,"column":33}}},"17":{"name":"isReDef","line":395,"loc":{"start":{"line":395,"column":0},"end":{"line":395,"column":28}}},"18":{"name":"isLongDef","line":400,"loc":{"start":{"line":400,"column":0},"end":{"line":400,"column":25}}},"19":{"name":"last","line":406,"loc":{"start":{"line":406,"column":0},"end":{"line":406,"column":19}}},"20":{"name":"matchProp","line":410,"loc":{"start":{"line":410,"column":0},"end":{"line":410,"column":32}}},"21":{"name":"matchResolve","line":421,"loc":{"start":{"line":421,"column":0},"end":{"line":421,"column":29}}},"22":{"name":"(anonymous_22)","line":424,"loc":{"start":{"line":424,"column":44},"end":{"line":424,"column":59}}},"23":{"name":"renamedString","line":431,"loc":{"start":{"line":431,"column":0},"end":{"line":431,"column":44}}},"24":{"name":"stringify","line":438,"loc":{"start":{"line":438,"column":0},"end":{"line":438,"column":35}}},"25":{"name":"(anonymous_25)","line":439,"loc":{"start":{"line":439,"column":25},"end":{"line":439,"column":39}}},"26":{"name":"parseExpressionOfType","line":444,"loc":{"start":{"line":444,"column":0},"end":{"line":444,"column":42}}},"27":{"name":"replaceNodeWith","line":451,"loc":{"start":{"line":451,"column":0},"end":{"line":451,"column":40}}},"28":{"name":"(anonymous_28)","line":455,"loc":{"start":{"line":455,"column":17},"end":{"line":455,"column":31}}},"29":{"name":"(anonymous_29)","line":467,"loc":{"start":{"line":467,"column":17},"end":{"line":467,"column":31}}},"30":{"name":"insertArray","line":482,"loc":{"start":{"line":482,"column":0},"end":{"line":482,"column":63}}},"31":{"name":"replaceArray","line":505,"loc":{"start":{"line":505,"column":0},"end":{"line":505,"column":51}}},"32":{"name":"removeArray","line":524,"loc":{"start":{"line":524,"column":0},"end":{"line":524,"column":39}}},"33":{"name":"renameProviderDeclarationSite","line":547,"loc":{"start":{"line":547,"column":0},"end":{"line":547,"column":68}}},"34":{"name":"judgeSuspects","line":564,"loc":{"start":{"line":564,"column":0},"end":{"line":564,"column":28}}},"35":{"name":"(anonymous_35)","line":582,"loc":{"start":{"line":582,"column":50},"end":{"line":582,"column":67}}},"36":{"name":"(anonymous_36)","line":597,"loc":{"start":{"line":597,"column":26},"end":{"line":597,"column":43}}},"37":{"name":"propagateModuleContextAndMethodName","line":617,"loc":{"start":{"line":617,"column":4},"end":{"line":617,"column":59}}},"38":{"name":"(anonymous_38)","line":618,"loc":{"start":{"line":618,"column":25},"end":{"line":618,"column":42}}},"39":{"name":"findOuterMethodName","line":632,"loc":{"start":{"line":632,"column":4},"end":{"line":632,"column":39}}},"40":{"name":"setChainedAndMethodNameThroughIifesAndReferences","line":638,"loc":{"start":{"line":638,"column":4},"end":{"line":638,"column":72}}},"41":{"name":"(anonymous_41)","line":640,"loc":{"start":{"line":640,"column":25},"end":{"line":640,"column":42}}},"42":{"name":"isInsideModuleContext","line":668,"loc":{"start":{"line":668,"column":4},"end":{"line":668,"column":41}}},"43":{"name":"makeUnique","line":675,"loc":{"start":{"line":675,"column":4},"end":{"line":675,"column":39}}},"44":{"name":"(anonymous_44)","line":676,"loc":{"start":{"line":676,"column":31},"end":{"line":676,"column":48}}},"45":{"name":"followReference","line":686,"loc":{"start":{"line":686,"column":0},"end":{"line":686,"column":31}}},"46":{"name":"posToLine","line":723,"loc":{"start":{"line":723,"column":0},"end":{"line":723,"column":29}}},"47":{"name":"firstNonPrologueStatement","line":742,"loc":{"start":{"line":742,"column":0},"end":{"line":742,"column":41}}},"48":{"name":"judgeInjectArraySuspect","line":757,"loc":{"start":{"line":757,"column":0},"end":{"line":757,"column":44}}},"49":{"name":"getIndent","line":842,"loc":{"start":{"line":842,"column":4},"end":{"line":842,"column":28}}},"50":{"name":"addRemoveInjectArray","line":851,"loc":{"start":{"line":851,"column":4},"end":{"line":851,"column":77}}},"51":{"name":"(anonymous_51)","line":859,"loc":{"start":{"line":859,"column":35},"end":{"line":859,"column":56}}},"52":{"name":"hasInjectArray","line":891,"loc":{"start":{"line":891,"column":8},"end":{"line":891,"column":38}}},"53":{"name":"skipPrevNewline","line":901,"loc":{"start":{"line":901,"column":8},"end":{"line":901,"column":43}}},"54":{"name":"jumpOverIife","line":960,"loc":{"start":{"line":960,"column":0},"end":{"line":960,"column":28}}},"55":{"name":"addModuleContextDependentSuspect","line":977,"loc":{"start":{"line":977,"column":0},"end":{"line":977,"column":55}}},"56":{"name":"addModuleContextIndependentSuspect","line":981,"loc":{"start":{"line":981,"column":0},"end":{"line":981,"column":57}}},"57":{"name":"isAnnotatedArray","line":986,"loc":{"start":{"line":986,"column":0},"end":{"line":986,"column":32}}},"58":{"name":"isFunctionExpressionWithArgs","line":1007,"loc":{"start":{"line":1007,"column":0},"end":{"line":1007,"column":44}}},"59":{"name":"isFunctionDeclarationWithArgs","line":1010,"loc":{"start":{"line":1010,"column":0},"end":{"line":1010,"column":45}}},"60":{"name":"isGenericProviderName","line":1013,"loc":{"start":{"line":1013,"column":0},"end":{"line":1013,"column":37}}},"61":{"name":"uniqifyFragments","line":1017,"loc":{"start":{"line":1017,"column":0},"end":{"line":1017,"column":37}}},"62":{"name":"ngAnnotate","line":1037,"loc":{"start":{"line":1037,"column":17},"end":{"line":1037,"column":51}}},"63":{"name":"(anonymous_63)","line":1056,"loc":{"start":{"line":1056,"column":31},"end":{"line":1056,"column":47}}},"64":{"name":"(anonymous_64)","line":1129,"loc":{"start":{"line":1129,"column":21},"end":{"line":1129,"column":37}}},"65":{"name":"(anonymous_65)","line":1161,"loc":{"start":{"line":1161,"column":43},"end":{"line":1161,"column":62}}},"66":{"name":"matchPlugins","line":1167,"loc":{"start":{"line":1167,"column":4},"end":{"line":1167,"column":46}}},"67":{"name":"(anonymous_67)","line":1179,"loc":{"start":{"line":1179,"column":20},"end":{"line":1179,"column":37}}},"68":{"name":"(anonymous_68)","line":1183,"loc":{"start":{"line":1183,"column":24},"end":{"line":1183,"column":39}}},"69":{"name":"(anonymous_69)","line":1186,"loc":{"start":{"line":1186,"column":13},"end":{"line":1186,"column":28}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":28}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":58}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":93}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":38}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}},"16":{"start":{"line":22,"column":0},"end":{"line":22,"column":31}},"17":{"start":{"line":23,"column":0},"end":{"line":23,"column":35}},"18":{"start":{"line":24,"column":0},"end":{"line":24,"column":31}},"19":{"start":{"line":25,"column":0},"end":{"line":25,"column":25}},"20":{"start":{"line":27,"column":0},"end":{"line":45,"column":1}},"21":{"start":{"line":28,"column":4},"end":{"line":32,"column":10}},"22":{"start":{"line":38,"column":4},"end":{"line":39,"column":228}},"23":{"start":{"line":41,"column":4},"end":{"line":44,"column":31}},"24":{"start":{"line":47,"column":0},"end":{"line":68,"column":1}},"25":{"start":{"line":54,"column":4},"end":{"line":54,"column":31}},"26":{"start":{"line":55,"column":4},"end":{"line":55,"column":30}},"27":{"start":{"line":56,"column":4},"end":{"line":56,"column":35}},"28":{"start":{"line":57,"column":4},"end":{"line":57,"column":32}},"29":{"start":{"line":59,"column":4},"end":{"line":66,"column":5}},"30":{"start":{"line":62,"column":8},"end":{"line":62,"column":41}},"31":{"start":{"line":63,"column":8},"end":{"line":63,"column":53}},"32":{"start":{"line":64,"column":8},"end":{"line":64,"column":49}},"33":{"start":{"line":65,"column":8},"end":{"line":65,"column":35}},"34":{"start":{"line":67,"column":4},"end":{"line":67,"column":17}},"35":{"start":{"line":70,"column":0},"end":{"line":77,"column":1}},"36":{"start":{"line":74,"column":4},"end":{"line":76,"column":59}},"37":{"start":{"line":79,"column":0},"end":{"line":84,"column":1}},"38":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"39":{"start":{"line":81,"column":8},"end":{"line":81,"column":39}},"40":{"start":{"line":83,"column":4},"end":{"line":83,"column":16}},"41":{"start":{"line":86,"column":0},"end":{"line":97,"column":1}},"42":{"start":{"line":90,"column":4},"end":{"line":90,"column":19}},"43":{"start":{"line":91,"column":4},"end":{"line":91,"column":13}},"44":{"start":{"line":92,"column":4},"end":{"line":96,"column":82}},"45":{"start":{"line":99,"column":0},"end":{"line":137,"column":1}},"46":{"start":{"line":107,"column":4},"end":{"line":107,"column":31}},"47":{"start":{"line":108,"column":4},"end":{"line":108,"column":30}},"48":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"49":{"start":{"line":110,"column":8},"end":{"line":110,"column":21}},"50":{"start":{"line":112,"column":4},"end":{"line":112,"column":41}},"51":{"start":{"line":114,"column":4},"end":{"line":114,"column":35}},"52":{"start":{"line":115,"column":4},"end":{"line":117,"column":5}},"53":{"start":{"line":116,"column":8},"end":{"line":116,"column":21}},"54":{"start":{"line":119,"column":4},"end":{"line":119,"column":32}},"55":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"56":{"start":{"line":121,"column":8},"end":{"line":121,"column":21}},"57":{"start":{"line":123,"column":4},"end":{"line":123,"column":32}},"58":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"59":{"start":{"line":125,"column":8},"end":{"line":125,"column":21}},"60":{"start":{"line":128,"column":4},"end":{"line":128,"column":39}},"61":{"start":{"line":129,"column":4},"end":{"line":131,"column":6}},"62":{"start":{"line":133,"column":4},"end":{"line":133,"column":45}},"63":{"start":{"line":135,"column":4},"end":{"line":135,"column":44}},"64":{"start":{"line":136,"column":4},"end":{"line":136,"column":60}},"65":{"start":{"line":139,"column":0},"end":{"line":257,"column":1}},"66":{"start":{"line":160,"column":4},"end":{"line":160,"column":31}},"67":{"start":{"line":161,"column":4},"end":{"line":161,"column":30}},"68":{"start":{"line":162,"column":4},"end":{"line":162,"column":35}},"69":{"start":{"line":163,"column":4},"end":{"line":163,"column":32}},"70":{"start":{"line":166,"column":4},"end":{"line":173,"column":5}},"71":{"start":{"line":167,"column":8},"end":{"line":167,"column":49}},"72":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"73":{"start":{"line":170,"column":12},"end":{"line":170,"column":30}},"74":{"start":{"line":172,"column":8},"end":{"line":172,"column":21}},"75":{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},"76":{"start":{"line":177,"column":8},"end":{"line":177,"column":21}},"77":{"start":{"line":179,"column":4},"end":{"line":179,"column":41}},"78":{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},"79":{"start":{"line":182,"column":8},"end":{"line":182,"column":21}},"80":{"start":{"line":187,"column":4},"end":{"line":189,"column":5}},"81":{"start":{"line":188,"column":8},"end":{"line":188,"column":21}},"82":{"start":{"line":191,"column":4},"end":{"line":191,"column":71}},"83":{"start":{"line":193,"column":4},"end":{"line":193,"column":19}},"84":{"start":{"line":195,"column":4},"end":{"line":195,"column":30}},"85":{"start":{"line":197,"column":4},"end":{"line":197,"column":44}},"86":{"start":{"line":198,"column":4},"end":{"line":198,"column":60}},"87":{"start":{"line":201,"column":4},"end":{"line":217,"column":5}},"88":{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},"89":{"start":{"line":203,"column":12},"end":{"line":203,"column":25}},"90":{"start":{"line":206,"column":8},"end":{"line":206,"column":59}},"91":{"start":{"line":208,"column":8},"end":{"line":208,"column":41}},"92":{"start":{"line":210,"column":8},"end":{"line":210,"column":74}},"93":{"start":{"line":211,"column":8},"end":{"line":211,"column":85}},"94":{"start":{"line":213,"column":8},"end":{"line":215,"column":9}},"95":{"start":{"line":214,"column":12},"end":{"line":214,"column":19}},"96":{"start":{"line":216,"column":8},"end":{"line":216,"column":41}},"97":{"start":{"line":219,"column":4},"end":{"line":256,"column":5}},"98":{"start":{"line":220,"column":8},"end":{"line":226,"column":10}},"99":{"start":{"line":227,"column":8},"end":{"line":227,"column":36}},"100":{"start":{"line":230,"column":8},"end":{"line":230,"column":49}},"101":{"start":{"line":233,"column":8},"end":{"line":233,"column":45}},"102":{"start":{"line":234,"column":8},"end":{"line":242,"column":9}},"103":{"start":{"line":235,"column":12},"end":{"line":241,"column":15}},"104":{"start":{"line":236,"column":16},"end":{"line":240,"column":17}},"105":{"start":{"line":237,"column":20},"end":{"line":237,"column":72}},"106":{"start":{"line":239,"column":20},"end":{"line":239,"column":41}},"107":{"start":{"line":245,"column":8},"end":{"line":245,"column":53}},"108":{"start":{"line":246,"column":8},"end":{"line":255,"column":9}},"109":{"start":{"line":247,"column":12},"end":{"line":254,"column":15}},"110":{"start":{"line":248,"column":16},"end":{"line":253,"column":17}},"111":{"start":{"line":249,"column":20},"end":{"line":249,"column":77}},"112":{"start":{"line":250,"column":20},"end":{"line":250,"column":85}},"113":{"start":{"line":251,"column":20},"end":{"line":251,"column":83}},"114":{"start":{"line":252,"column":20},"end":{"line":252,"column":77}},"115":{"start":{"line":259,"column":0},"end":{"line":270,"column":1}},"116":{"start":{"line":263,"column":4},"end":{"line":263,"column":31}},"117":{"start":{"line":264,"column":4},"end":{"line":264,"column":30}},"118":{"start":{"line":265,"column":4},"end":{"line":265,"column":35}},"119":{"start":{"line":267,"column":4},"end":{"line":269,"column":53}},"120":{"start":{"line":272,"column":0},"end":{"line":285,"column":1}},"121":{"start":{"line":277,"column":4},"end":{"line":277,"column":31}},"122":{"start":{"line":278,"column":4},"end":{"line":278,"column":30}},"123":{"start":{"line":279,"column":4},"end":{"line":279,"column":35}},"124":{"start":{"line":281,"column":4},"end":{"line":284,"column":54}},"125":{"start":{"line":287,"column":0},"end":{"line":303,"column":1}},"126":{"start":{"line":291,"column":4},"end":{"line":291,"column":31}},"127":{"start":{"line":292,"column":4},"end":{"line":292,"column":30}},"128":{"start":{"line":293,"column":4},"end":{"line":293,"column":35}},"129":{"start":{"line":294,"column":4},"end":{"line":294,"column":32}},"130":{"start":{"line":296,"column":4},"end":{"line":297,"column":67}},"131":{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},"132":{"start":{"line":300,"column":8},"end":{"line":300,"column":41}},"133":{"start":{"line":302,"column":4},"end":{"line":302,"column":18}},"134":{"start":{"line":305,"column":0},"end":{"line":330,"column":1}},"135":{"start":{"line":312,"column":4},"end":{"line":312,"column":31}},"136":{"start":{"line":313,"column":4},"end":{"line":313,"column":30}},"137":{"start":{"line":314,"column":4},"end":{"line":314,"column":35}},"138":{"start":{"line":315,"column":4},"end":{"line":315,"column":32}},"139":{"start":{"line":317,"column":4},"end":{"line":319,"column":37}},"140":{"start":{"line":321,"column":4},"end":{"line":328,"column":5}},"141":{"start":{"line":322,"column":8},"end":{"line":322,"column":41}},"142":{"start":{"line":324,"column":8},"end":{"line":327,"column":9}},"143":{"start":{"line":326,"column":12},"end":{"line":326,"column":24}},"144":{"start":{"line":329,"column":4},"end":{"line":329,"column":18}},"145":{"start":{"line":332,"column":0},"end":{"line":388,"column":1}},"146":{"start":{"line":334,"column":4},"end":{"line":334,"column":31}},"147":{"start":{"line":335,"column":4},"end":{"line":335,"column":30}},"148":{"start":{"line":336,"column":4},"end":{"line":336,"column":35}},"149":{"start":{"line":340,"column":4},"end":{"line":346,"column":5}},"150":{"start":{"line":341,"column":8},"end":{"line":341,"column":36}},"151":{"start":{"line":342,"column":8},"end":{"line":345,"column":9}},"152":{"start":{"line":343,"column":12},"end":{"line":343,"column":43}},"153":{"start":{"line":344,"column":12},"end":{"line":344,"column":30}},"154":{"start":{"line":350,"column":4},"end":{"line":352,"column":5}},"155":{"start":{"line":351,"column":8},"end":{"line":351,"column":21}},"156":{"start":{"line":354,"column":4},"end":{"line":355,"column":213}},"157":{"start":{"line":356,"column":4},"end":{"line":358,"column":5}},"158":{"start":{"line":357,"column":8},"end":{"line":357,"column":21}},"159":{"start":{"line":359,"column":4},"end":{"line":359,"column":35}},"160":{"start":{"line":361,"column":4},"end":{"line":363,"column":5}},"161":{"start":{"line":362,"column":8},"end":{"line":362,"column":21}},"162":{"start":{"line":365,"column":4},"end":{"line":365,"column":32}},"163":{"start":{"line":366,"column":4},"end":{"line":368,"column":96}},"164":{"start":{"line":370,"column":4},"end":{"line":376,"column":5}},"165":{"start":{"line":371,"column":8},"end":{"line":371,"column":124}},"166":{"start":{"line":372,"column":8},"end":{"line":374,"column":9}},"167":{"start":{"line":373,"column":12},"end":{"line":373,"column":25}},"168":{"start":{"line":375,"column":8},"end":{"line":375,"column":32}},"169":{"start":{"line":378,"column":4},"end":{"line":380,"column":5}},"170":{"start":{"line":379,"column":8},"end":{"line":379,"column":41}},"171":{"start":{"line":382,"column":4},"end":{"line":386,"column":5}},"172":{"start":{"line":384,"column":8},"end":{"line":384,"column":45}},"173":{"start":{"line":385,"column":8},"end":{"line":385,"column":46}},"174":{"start":{"line":387,"column":4},"end":{"line":387,"column":18}},"175":{"start":{"line":395,"column":0},"end":{"line":397,"column":1}},"176":{"start":{"line":396,"column":4},"end":{"line":396,"column":52}},"177":{"start":{"line":400,"column":0},"end":{"line":404,"column":1}},"178":{"start":{"line":401,"column":4},"end":{"line":403,"column":71}},"179":{"start":{"line":406,"column":0},"end":{"line":408,"column":1}},"180":{"start":{"line":407,"column":4},"end":{"line":407,"column":31}},"181":{"start":{"line":410,"column":0},"end":{"line":419,"column":1}},"182":{"start":{"line":411,"column":4},"end":{"line":417,"column":5}},"183":{"start":{"line":412,"column":8},"end":{"line":412,"column":30}},"184":{"start":{"line":413,"column":8},"end":{"line":416,"column":9}},"185":{"start":{"line":415,"column":12},"end":{"line":415,"column":30}},"186":{"start":{"line":418,"column":4},"end":{"line":418,"column":16}},"187":{"start":{"line":421,"column":0},"end":{"line":429,"column":1}},"188":{"start":{"line":422,"column":4},"end":{"line":422,"column":54}},"189":{"start":{"line":423,"column":4},"end":{"line":427,"column":5}},"190":{"start":{"line":424,"column":8},"end":{"line":426,"column":11}},"191":{"start":{"line":425,"column":12},"end":{"line":425,"column":30}},"192":{"start":{"line":428,"column":4},"end":{"line":428,"column":14}},"193":{"start":{"line":431,"column":0},"end":{"line":436,"column":1}},"194":{"start":{"line":432,"column":4},"end":{"line":434,"column":5}},"195":{"start":{"line":433,"column":8},"end":{"line":433,"column":64}},"196":{"start":{"line":435,"column":4},"end":{"line":435,"column":26}},"197":{"start":{"line":438,"column":0},"end":{"line":442,"column":1}},"198":{"start":{"line":439,"column":4},"end":{"line":441,"column":24}},"199":{"start":{"line":440,"column":8},"end":{"line":440,"column":58}},"200":{"start":{"line":444,"column":0},"end":{"line":448,"column":1}},"201":{"start":{"line":445,"column":4},"end":{"line":445,"column":48}},"202":{"start":{"line":446,"column":4},"end":{"line":446,"column":31}},"203":{"start":{"line":447,"column":4},"end":{"line":447,"column":16}},"204":{"start":{"line":451,"column":0},"end":{"line":480,"column":1}},"205":{"start":{"line":452,"column":4},"end":{"line":452,"column":21}},"206":{"start":{"line":453,"column":4},"end":{"line":453,"column":32}},"207":{"start":{"line":454,"column":4},"end":{"line":454,"column":37}},"208":{"start":{"line":455,"column":4},"end":{"line":460,"column":7}},"209":{"start":{"line":456,"column":8},"end":{"line":459,"column":9}},"210":{"start":{"line":457,"column":12},"end":{"line":457,"column":34}},"211":{"start":{"line":458,"column":12},"end":{"line":458,"column":24}},"212":{"start":{"line":462,"column":4},"end":{"line":464,"column":5}},"213":{"start":{"line":463,"column":8},"end":{"line":463,"column":15}},"214":{"start":{"line":467,"column":4},"end":{"line":477,"column":7}},"215":{"start":{"line":468,"column":8},"end":{"line":476,"column":9}},"216":{"start":{"line":469,"column":12},"end":{"line":469,"column":36}},"217":{"start":{"line":470,"column":12},"end":{"line":475,"column":13}},"218":{"start":{"line":471,"column":16},"end":{"line":474,"column":17}},"219":{"start":{"line":472,"column":20},"end":{"line":472,"column":37}},"220":{"start":{"line":473,"column":20},"end":{"line":473,"column":32}},"221":{"start":{"line":479,"column":4},"end":{"line":479,"column":17}},"222":{"start":{"line":482,"column":0},"end":{"line":503,"column":1}},"223":{"start":{"line":483,"column":4},"end":{"line":483,"column":65}},"224":{"start":{"line":485,"column":4},"end":{"line":493,"column":7}},"225":{"start":{"line":494,"column":4},"end":{"line":502,"column":7}},"226":{"start":{"line":505,"column":0},"end":{"line":522,"column":1}},"227":{"start":{"line":506,"column":4},"end":{"line":506,"column":52}},"228":{"start":{"line":508,"column":4},"end":{"line":510,"column":5}},"229":{"start":{"line":509,"column":8},"end":{"line":509,"column":45}},"230":{"start":{"line":512,"column":4},"end":{"line":512,"column":65}},"231":{"start":{"line":513,"column":4},"end":{"line":521,"column":7}},"232":{"start":{"line":524,"column":0},"end":{"line":545,"column":1}},"233":{"start":{"line":525,"column":4},"end":{"line":525,"column":52}},"234":{"start":{"line":527,"column":4},"end":{"line":535,"column":7}},"235":{"start":{"line":536,"column":4},"end":{"line":544,"column":7}},"236":{"start":{"line":547,"column":0},"end":{"line":562,"column":1}},"237":{"start":{"line":548,"column":4},"end":{"line":561,"column":7}},"238":{"start":{"line":564,"column":0},"end":{"line":684,"column":1}},"239":{"start":{"line":565,"column":4},"end":{"line":565,"column":26}},"240":{"start":{"line":566,"column":4},"end":{"line":566,"column":36}},"241":{"start":{"line":567,"column":4},"end":{"line":567,"column":26}},"242":{"start":{"line":568,"column":4},"end":{"line":568,"column":32}},"243":{"start":{"line":570,"column":4},"end":{"line":570,"column":49}},"244":{"start":{"line":572,"column":4},"end":{"line":579,"column":5}},"245":{"start":{"line":575,"column":8},"end":{"line":575,"column":54}},"246":{"start":{"line":576,"column":8},"end":{"line":578,"column":9}},"247":{"start":{"line":577,"column":12},"end":{"line":577,"column":18}},"248":{"start":{"line":582,"column":4},"end":{"line":595,"column":27}},"249":{"start":{"line":583,"column":8},"end":{"line":583,"column":44}},"250":{"start":{"line":584,"column":8},"end":{"line":584,"column":68}},"251":{"start":{"line":586,"column":8},"end":{"line":588,"column":9}},"252":{"start":{"line":587,"column":12},"end":{"line":587,"column":24}},"253":{"start":{"line":590,"column":8},"end":{"line":592,"column":9}},"254":{"start":{"line":591,"column":12},"end":{"line":591,"column":24}},"255":{"start":{"line":594,"column":8},"end":{"line":594,"column":33}},"256":{"start":{"line":597,"column":4},"end":{"line":614,"column":7}},"257":{"start":{"line":598,"column":8},"end":{"line":600,"column":9}},"258":{"start":{"line":599,"column":12},"end":{"line":599,"column":19}},"259":{"start":{"line":602,"column":8},"end":{"line":613,"column":9}},"260":{"start":{"line":603,"column":12},"end":{"line":603,"column":55}},"261":{"start":{"line":604,"column":15},"end":{"line":613,"column":9}},"262":{"start":{"line":605,"column":12},"end":{"line":605,"column":43}},"263":{"start":{"line":606,"column":15},"end":{"line":613,"column":9}},"264":{"start":{"line":607,"column":12},"end":{"line":607,"column":54}},"265":{"start":{"line":608,"column":15},"end":{"line":613,"column":9}},"266":{"start":{"line":609,"column":12},"end":{"line":609,"column":66}},"267":{"start":{"line":612,"column":12},"end":{"line":612,"column":49}},"268":{"start":{"line":617,"column":4},"end":{"line":630,"column":5}},"269":{"start":{"line":618,"column":8},"end":{"line":629,"column":11}},"270":{"start":{"line":619,"column":12},"end":{"line":621,"column":13}},"271":{"start":{"line":620,"column":16},"end":{"line":620,"column":49}},"272":{"start":{"line":623,"column":12},"end":{"line":628,"column":13}},"273":{"start":{"line":624,"column":16},"end":{"line":624,"column":63}},"274":{"start":{"line":625,"column":16},"end":{"line":627,"column":17}},"275":{"start":{"line":626,"column":20},"end":{"line":626,"column":52}},"276":{"start":{"line":632,"column":4},"end":{"line":636,"column":5}},"277":{"start":{"line":633,"column":8},"end":{"line":634,"column":9}},"278":{"start":{"line":635,"column":8},"end":{"line":635,"column":46}},"279":{"start":{"line":638,"column":4},"end":{"line":666,"column":5}},"280":{"start":{"line":639,"column":8},"end":{"line":639,"column":29}},"281":{"start":{"line":640,"column":8},"end":{"line":664,"column":11}},"282":{"start":{"line":641,"column":12},"end":{"line":641,"column":48}},"283":{"start":{"line":642,"column":12},"end":{"line":651,"column":13}},"284":{"start":{"line":643,"column":16},"end":{"line":646,"column":17}},"285":{"start":{"line":644,"column":20},"end":{"line":644,"column":36}},"286":{"start":{"line":645,"column":20},"end":{"line":645,"column":53}},"287":{"start":{"line":647,"column":16},"end":{"line":650,"column":17}},"288":{"start":{"line":648,"column":20},"end":{"line":648,"column":36}},"289":{"start":{"line":649,"column":20},"end":{"line":649,"column":60}},"290":{"start":{"line":653,"column":12},"end":{"line":653,"column":72}},"291":{"start":{"line":654,"column":12},"end":{"line":663,"column":13}},"292":{"start":{"line":655,"column":16},"end":{"line":658,"column":17}},"293":{"start":{"line":656,"column":20},"end":{"line":656,"column":36}},"294":{"start":{"line":657,"column":20},"end":{"line":657,"column":64}},"295":{"start":{"line":659,"column":16},"end":{"line":662,"column":17}},"296":{"start":{"line":660,"column":20},"end":{"line":660,"column":36}},"297":{"start":{"line":661,"column":20},"end":{"line":661,"column":71}},"298":{"start":{"line":665,"column":8},"end":{"line":665,"column":24}},"299":{"start":{"line":668,"column":4},"end":{"line":673,"column":5}},"300":{"start":{"line":669,"column":8},"end":{"line":669,"column":35}},"301":{"start":{"line":670,"column":8},"end":{"line":671,"column":9}},"302":{"start":{"line":672,"column":8},"end":{"line":672,"column":32}},"303":{"start":{"line":675,"column":4},"end":{"line":683,"column":5}},"304":{"start":{"line":676,"column":8},"end":{"line":682,"column":11}},"305":{"start":{"line":677,"column":12},"end":{"line":679,"column":13}},"306":{"start":{"line":678,"column":16},"end":{"line":678,"column":29}},"307":{"start":{"line":680,"column":12},"end":{"line":680,"column":31}},"308":{"start":{"line":681,"column":12},"end":{"line":681,"column":24}},"309":{"start":{"line":686,"column":0},"end":{"line":720,"column":1}},"310":{"start":{"line":687,"column":4},"end":{"line":689,"column":5}},"311":{"start":{"line":688,"column":8},"end":{"line":688,"column":20}},"312":{"start":{"line":691,"column":4},"end":{"line":691,"column":48}},"313":{"start":{"line":692,"column":4},"end":{"line":694,"column":5}},"314":{"start":{"line":693,"column":8},"end":{"line":693,"column":20}},"315":{"start":{"line":696,"column":4},"end":{"line":696,"column":52}},"316":{"start":{"line":697,"column":4},"end":{"line":697,"column":42}},"317":{"start":{"line":698,"column":4},"end":{"line":700,"column":5}},"318":{"start":{"line":699,"column":8},"end":{"line":699,"column":20}},"319":{"start":{"line":701,"column":4},"end":{"line":701,"column":30}},"320":{"start":{"line":703,"column":4},"end":{"line":715,"column":5}},"321":{"start":{"line":704,"column":8},"end":{"line":704,"column":47}},"322":{"start":{"line":706,"column":8},"end":{"line":706,"column":22}},"323":{"start":{"line":707,"column":11},"end":{"line":715,"column":5}},"324":{"start":{"line":708,"column":8},"end":{"line":708,"column":81}},"325":{"start":{"line":714,"column":8},"end":{"line":714,"column":22}},"326":{"start":{"line":719,"column":4},"end":{"line":719,"column":16}},"327":{"start":{"line":723,"column":0},"end":{"line":740,"column":1}},"328":{"start":{"line":724,"column":4},"end":{"line":726,"column":5}},"329":{"start":{"line":725,"column":8},"end":{"line":725,"column":29}},"330":{"start":{"line":728,"column":4},"end":{"line":730,"column":5}},"331":{"start":{"line":729,"column":8},"end":{"line":729,"column":18}},"332":{"start":{"line":732,"column":4},"end":{"line":732,"column":17}},"333":{"start":{"line":733,"column":4},"end":{"line":737,"column":5}},"334":{"start":{"line":734,"column":8},"end":{"line":736,"column":9}},"335":{"start":{"line":735,"column":12},"end":{"line":735,"column":19}},"336":{"start":{"line":739,"column":4},"end":{"line":739,"column":16}},"337":{"start":{"line":742,"column":0},"end":{"line":755,"column":1}},"338":{"start":{"line":743,"column":4},"end":{"line":753,"column":5}},"339":{"start":{"line":744,"column":8},"end":{"line":746,"column":9}},"340":{"start":{"line":745,"column":12},"end":{"line":745,"column":27}},"341":{"start":{"line":748,"column":8},"end":{"line":748,"column":40}},"342":{"start":{"line":749,"column":8},"end":{"line":749,"column":92}},"343":{"start":{"line":750,"column":8},"end":{"line":752,"column":9}},"344":{"start":{"line":751,"column":12},"end":{"line":751,"column":27}},"345":{"start":{"line":754,"column":4},"end":{"line":754,"column":16}},"346":{"start":{"line":757,"column":0},"end":{"line":958,"column":1}},"347":{"start":{"line":758,"column":4},"end":{"line":773,"column":5}},"348":{"start":{"line":765,"column":8},"end":{"line":768,"column":9}},"349":{"start":{"line":767,"column":12},"end":{"line":767,"column":19}},"350":{"start":{"line":772,"column":8},"end":{"line":772,"column":36}},"351":{"start":{"line":777,"column":4},"end":{"line":777,"column":21}},"352":{"start":{"line":778,"column":4},"end":{"line":778,"column":30}},"353":{"start":{"line":779,"column":4},"end":{"line":785,"column":5}},"354":{"start":{"line":780,"column":8},"end":{"line":780,"column":29}},"355":{"start":{"line":781,"column":8},"end":{"line":781,"column":38}},"356":{"start":{"line":782,"column":8},"end":{"line":782,"column":25}},"357":{"start":{"line":784,"column":8},"end":{"line":784,"column":21}},"358":{"start":{"line":788,"column":4},"end":{"line":790,"column":5}},"359":{"start":{"line":789,"column":8},"end":{"line":789,"column":15}},"360":{"start":{"line":792,"column":4},"end":{"line":795,"column":6}},"361":{"start":{"line":796,"column":4},"end":{"line":796,"column":71}},"362":{"start":{"line":798,"column":4},"end":{"line":798,"column":30}},"363":{"start":{"line":800,"column":4},"end":{"line":839,"column":5}},"364":{"start":{"line":803,"column":8},"end":{"line":803,"column":31}},"365":{"start":{"line":804,"column":8},"end":{"line":810,"column":28}},"366":{"start":{"line":812,"column":11},"end":{"line":839,"column":5}},"367":{"start":{"line":815,"column":8},"end":{"line":818,"column":26}},"368":{"start":{"line":820,"column":11},"end":{"line":839,"column":5}},"369":{"start":{"line":824,"column":8},"end":{"line":824,"column":65}},"370":{"start":{"line":825,"column":8},"end":{"line":831,"column":18}},"371":{"start":{"line":833,"column":11},"end":{"line":839,"column":5}},"372":{"start":{"line":838,"column":8},"end":{"line":838,"column":43}},"373":{"start":{"line":842,"column":4},"end":{"line":849,"column":5}},"374":{"start":{"line":843,"column":8},"end":{"line":843,"column":28}},"375":{"start":{"line":844,"column":8},"end":{"line":844,"column":61}},"376":{"start":{"line":845,"column":8},"end":{"line":845,"column":26}},"377":{"start":{"line":846,"column":8},"end":{"line":847,"column":9}},"378":{"start":{"line":848,"column":8},"end":{"line":848,"column":39}},"379":{"start":{"line":851,"column":4},"end":{"line":957,"column":5}},"380":{"start":{"line":854,"column":8},"end":{"line":854,"column":66}},"381":{"start":{"line":856,"column":8},"end":{"line":856,"column":39}},"382":{"start":{"line":857,"column":8},"end":{"line":857,"column":56}},"383":{"start":{"line":858,"column":8},"end":{"line":858,"column":36}},"384":{"start":{"line":859,"column":8},"end":{"line":880,"column":11}},"385":{"start":{"line":860,"column":12},"end":{"line":862,"column":13}},"386":{"start":{"line":861,"column":16},"end":{"line":861,"column":42}},"387":{"start":{"line":864,"column":12},"end":{"line":871,"column":13}},"388":{"start":{"line":865,"column":16},"end":{"line":869,"column":17}},"389":{"start":{"line":866,"column":20},"end":{"line":868,"column":60}},"390":{"start":{"line":870,"column":16},"end":{"line":870,"column":61}},"391":{"start":{"line":873,"column":12},"end":{"line":873,"column":18}},"392":{"start":{"line":874,"column":12},"end":{"line":879,"column":13}},"393":{"start":{"line":875,"column":16},"end":{"line":875,"column":66}},"394":{"start":{"line":876,"column":16},"end":{"line":878,"column":17}},"395":{"start":{"line":877,"column":20},"end":{"line":877,"column":53}},"396":{"start":{"line":881,"column":8},"end":{"line":881,"column":35}},"397":{"start":{"line":882,"column":8},"end":{"line":889,"column":9}},"398":{"start":{"line":883,"column":12},"end":{"line":885,"column":13}},"399":{"start":{"line":884,"column":16},"end":{"line":884,"column":81}},"400":{"start":{"line":886,"column":12},"end":{"line":888,"column":13}},"401":{"start":{"line":887,"column":16},"end":{"line":887,"column":117}},"402":{"start":{"line":891,"column":8},"end":{"line":899,"column":9}},"403":{"start":{"line":892,"column":12},"end":{"line":892,"column":23}},"404":{"start":{"line":893,"column":12},"end":{"line":893,"column":27}},"405":{"start":{"line":894,"column":12},"end":{"line":898,"column":175}},"406":{"start":{"line":901,"column":8},"end":{"line":921,"column":9}},"407":{"start":{"line":902,"column":12},"end":{"line":902,"column":56}},"408":{"start":{"line":903,"column":12},"end":{"line":905,"column":13}},"409":{"start":{"line":904,"column":16},"end":{"line":904,"column":46}},"410":{"start":{"line":906,"column":12},"end":{"line":908,"column":13}},"411":{"start":{"line":907,"column":16},"end":{"line":907,"column":25}},"412":{"start":{"line":910,"column":12},"end":{"line":912,"column":13}},"413":{"start":{"line":911,"column":16},"end":{"line":911,"column":46}},"414":{"start":{"line":914,"column":12},"end":{"line":920,"column":14}},"415":{"start":{"line":923,"column":8},"end":{"line":956,"column":9}},"416":{"start":{"line":924,"column":12},"end":{"line":924,"column":118}},"417":{"start":{"line":925,"column":12},"end":{"line":933,"column":15}},"418":{"start":{"line":934,"column":15},"end":{"line":956,"column":9}},"419":{"start":{"line":935,"column":12},"end":{"line":935,"column":137}},"420":{"start":{"line":936,"column":12},"end":{"line":944,"column":15}},"421":{"start":{"line":945,"column":15},"end":{"line":956,"column":9}},"422":{"start":{"line":946,"column":12},"end":{"line":946,"column":113}},"423":{"start":{"line":947,"column":12},"end":{"line":955,"column":15}},"424":{"start":{"line":960,"column":0},"end":{"line":975,"column":1}},"425":{"start":{"line":961,"column":4},"end":{"line":961,"column":16}},"426":{"start":{"line":962,"column":4},"end":{"line":964,"column":5}},"427":{"start":{"line":963,"column":8},"end":{"line":963,"column":20}},"428":{"start":{"line":966,"column":4},"end":{"line":966,"column":40}},"429":{"start":{"line":967,"column":4},"end":{"line":972,"column":5}},"430":{"start":{"line":968,"column":8},"end":{"line":968,"column":39}},"431":{"start":{"line":969,"column":8},"end":{"line":971,"column":9}},"432":{"start":{"line":970,"column":12},"end":{"line":970,"column":38}},"433":{"start":{"line":974,"column":4},"end":{"line":974,"column":16}},"434":{"start":{"line":977,"column":0},"end":{"line":979,"column":1}},"435":{"start":{"line":978,"column":4},"end":{"line":978,"column":30}},"436":{"start":{"line":981,"column":0},"end":{"line":984,"column":1}},"437":{"start":{"line":982,"column":4},"end":{"line":982,"column":37}},"438":{"start":{"line":983,"column":4},"end":{"line":983,"column":30}},"439":{"start":{"line":986,"column":0},"end":{"line":1006,"column":1}},"440":{"start":{"line":987,"column":4},"end":{"line":989,"column":5}},"441":{"start":{"line":988,"column":8},"end":{"line":988,"column":21}},"442":{"start":{"line":990,"column":4},"end":{"line":990,"column":35}},"443":{"start":{"line":993,"column":4},"end":{"line":995,"column":5}},"444":{"start":{"line":994,"column":8},"end":{"line":994,"column":21}},"445":{"start":{"line":998,"column":4},"end":{"line":1003,"column":5}},"446":{"start":{"line":999,"column":8},"end":{"line":999,"column":30}},"447":{"start":{"line":1000,"column":8},"end":{"line":1002,"column":9}},"448":{"start":{"line":1001,"column":12},"end":{"line":1001,"column":25}},"449":{"start":{"line":1005,"column":4},"end":{"line":1005,"column":16}},"450":{"start":{"line":1007,"column":0},"end":{"line":1009,"column":1}},"451":{"start":{"line":1008,"column":4},"end":{"line":1008,"column":73}},"452":{"start":{"line":1010,"column":0},"end":{"line":1012,"column":1}},"453":{"start":{"line":1011,"column":4},"end":{"line":1011,"column":74}},"454":{"start":{"line":1013,"column":0},"end":{"line":1015,"column":1}},"455":{"start":{"line":1014,"column":4},"end":{"line":1014,"column":60}},"456":{"start":{"line":1017,"column":0},"end":{"line":1031,"column":1}},"457":{"start":{"line":1020,"column":4},"end":{"line":1020,"column":36}},"458":{"start":{"line":1021,"column":4},"end":{"line":1030,"column":5}},"459":{"start":{"line":1022,"column":8},"end":{"line":1022,"column":34}},"460":{"start":{"line":1023,"column":8},"end":{"line":1023,"column":86}},"461":{"start":{"line":1024,"column":8},"end":{"line":1029,"column":9}},"462":{"start":{"line":1025,"column":12},"end":{"line":1025,"column":35}},"463":{"start":{"line":1026,"column":12},"end":{"line":1026,"column":16}},"464":{"start":{"line":1028,"column":12},"end":{"line":1028,"column":28}},"465":{"start":{"line":1033,"column":0},"end":{"line":1035,"column":2}},"466":{"start":{"line":1037,"column":0},"end":{"line":1226,"column":1}},"467":{"start":{"line":1038,"column":4},"end":{"line":1042,"column":5}},"468":{"start":{"line":1039,"column":8},"end":{"line":1041,"column":10}},"469":{"start":{"line":1044,"column":4},"end":{"line":1046,"column":40}},"470":{"start":{"line":1048,"column":4},"end":{"line":1050,"column":5}},"471":{"start":{"line":1049,"column":8},"end":{"line":1049,"column":26}},"472":{"start":{"line":1052,"column":4},"end":{"line":1052,"column":51}},"473":{"start":{"line":1053,"column":4},"end":{"line":1053,"column":87}},"474":{"start":{"line":1054,"column":4},"end":{"line":1054,"column":35}},"475":{"start":{"line":1055,"column":4},"end":{"line":1059,"column":5}},"476":{"start":{"line":1056,"column":8},"end":{"line":1058,"column":11}},"477":{"start":{"line":1057,"column":12},"end":{"line":1057,"column":45}},"478":{"start":{"line":1060,"column":4},"end":{"line":1060,"column":12}},"479":{"start":{"line":1061,"column":4},"end":{"line":1061,"column":21}},"480":{"start":{"line":1064,"column":4},"end":{"line":1064,"column":37}},"481":{"start":{"line":1065,"column":4},"end":{"line":1067,"column":5}},"482":{"start":{"line":1066,"column":8},"end":{"line":1066,"column":53}},"483":{"start":{"line":1070,"column":4},"end":{"line":1070,"column":22}},"484":{"start":{"line":1072,"column":4},"end":{"line":1089,"column":5}},"485":{"start":{"line":1073,"column":8},"end":{"line":1073,"column":51}},"486":{"start":{"line":1074,"column":8},"end":{"line":1074,"column":51}},"487":{"start":{"line":1075,"column":8},"end":{"line":1075,"column":43}},"488":{"start":{"line":1077,"column":8},"end":{"line":1083,"column":11}},"489":{"start":{"line":1084,"column":8},"end":{"line":1084,"column":43}},"490":{"start":{"line":1086,"column":8},"end":{"line":1088,"column":10}},"491":{"start":{"line":1092,"column":4},"end":{"line":1099,"column":7}},"492":{"start":{"line":1103,"column":4},"end":{"line":1103,"column":25}},"493":{"start":{"line":1110,"column":4},"end":{"line":1110,"column":24}},"494":{"start":{"line":1115,"column":4},"end":{"line":1115,"column":23}},"495":{"start":{"line":1119,"column":4},"end":{"line":1119,"column":29}},"496":{"start":{"line":1121,"column":4},"end":{"line":1121,"column":34}},"497":{"start":{"line":1123,"column":4},"end":{"line":1123,"column":44}},"498":{"start":{"line":1125,"column":4},"end":{"line":1149,"column":6}},"499":{"start":{"line":1130,"column":12},"end":{"line":1130,"column":49}},"500":{"start":{"line":1152,"column":4},"end":{"line":1152,"column":43}},"501":{"start":{"line":1153,"column":4},"end":{"line":1160,"column":5}},"502":{"start":{"line":1154,"column":8},"end":{"line":1154,"column":46}},"503":{"start":{"line":1155,"column":8},"end":{"line":1159,"column":9}},"504":{"start":{"line":1156,"column":12},"end":{"line":1158,"column":14}},"505":{"start":{"line":1161,"column":4},"end":{"line":1163,"column":7}},"506":{"start":{"line":1162,"column":8},"end":{"line":1162,"column":38}},"507":{"start":{"line":1165,"column":4},"end":{"line":1165,"column":70}},"508":{"start":{"line":1167,"column":4},"end":{"line":1175,"column":5}},"509":{"start":{"line":1168,"column":8},"end":{"line":1173,"column":9}},"510":{"start":{"line":1169,"column":12},"end":{"line":1169,"column":61}},"511":{"start":{"line":1170,"column":12},"end":{"line":1172,"column":13}},"512":{"start":{"line":1171,"column":16},"end":{"line":1171,"column":27}},"513":{"start":{"line":1174,"column":8},"end":{"line":1174,"column":21}},"514":{"start":{"line":1176,"column":4},"end":{"line":1176,"column":76}},"515":{"start":{"line":1178,"column":4},"end":{"line":1178,"column":34}},"516":{"start":{"line":1179,"column":4},"end":{"line":1181,"column":7}},"517":{"start":{"line":1180,"column":8},"end":{"line":1180,"column":25}},"518":{"start":{"line":1183,"column":4},"end":{"line":1199,"column":8}},"519":{"start":{"line":1184,"column":8},"end":{"line":1184,"column":40}},"520":{"start":{"line":1187,"column":8},"end":{"line":1187,"column":47}},"521":{"start":{"line":1188,"column":8},"end":{"line":1188,"column":59}},"522":{"start":{"line":1189,"column":8},"end":{"line":1191,"column":9}},"523":{"start":{"line":1190,"column":12},"end":{"line":1190,"column":19}},"524":{"start":{"line":1192,"column":8},"end":{"line":1194,"column":9}},"525":{"start":{"line":1193,"column":12},"end":{"line":1193,"column":32}},"526":{"start":{"line":1196,"column":8},"end":{"line":1198,"column":9}},"527":{"start":{"line":1197,"column":12},"end":{"line":1197,"column":62}},"528":{"start":{"line":1201,"column":4},"end":{"line":1207,"column":5}},"529":{"start":{"line":1202,"column":8},"end":{"line":1202,"column":27}},"530":{"start":{"line":1204,"column":8},"end":{"line":1206,"column":10}},"531":{"start":{"line":1209,"column":4},"end":{"line":1209,"column":36}},"532":{"start":{"line":1211,"column":4},"end":{"line":1211,"column":38}},"533":{"start":{"line":1212,"column":4},"end":{"line":1215,"column":6}},"534":{"start":{"line":1217,"column":4},"end":{"line":1223,"column":5}},"535":{"start":{"line":1218,"column":8},"end":{"line":1219,"column":29}},"536":{"start":{"line":1219,"column":12},"end":{"line":1219,"column":29}},"537":{"start":{"line":1220,"column":8},"end":{"line":1220,"column":40}},"538":{"start":{"line":1221,"column":8},"end":{"line":1221,"column":78}},"539":{"start":{"line":1222,"column":8},"end":{"line":1222,"column":40}},"540":{"start":{"line":1225,"column":4},"end":{"line":1225,"column":18}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":38}},{"start":{"line":30,"column":12},"end":{"line":30,"column":51}},{"start":{"line":31,"column":12},"end":{"line":31,"column":42}}]},"2":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":30},"end":{"line":38,"column":42}},{"start":{"line":39,"column":9},"end":{"line":39,"column":34}},{"start":{"line":39,"column":38},"end":{"line":39,"column":61}},{"start":{"line":39,"column":65},"end":{"line":39,"column":88}},{"start":{"line":39,"column":92},"end":{"line":39,"column":110}},{"start":{"line":39,"column":114},"end":{"line":39,"column":146}},{"start":{"line":39,"column":150},"end":{"line":39,"column":165}},{"start":{"line":39,"column":169},"end":{"line":39,"column":192}},{"start":{"line":39,"column":196},"end":{"line":39,"column":225}}]},"3":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":27}},{"start":{"line":42,"column":9},"end":{"line":42,"column":21}},{"start":{"line":42,"column":25},"end":{"line":42,"column":43}},{"start":{"line":43,"column":8},"end":{"line":43,"column":40}},{"start":{"line":44,"column":8},"end":{"line":44,"column":30}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"5":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":33}},{"start":{"line":60,"column":10},"end":{"line":60,"column":54}},{"start":{"line":60,"column":58},"end":{"line":60,"column":80}},{"start":{"line":60,"column":86},"end":{"line":60,"column":150}},{"start":{"line":60,"column":154},"end":{"line":60,"column":176}},{"start":{"line":61,"column":8},"end":{"line":61,"column":25}},{"start":{"line":61,"column":29},"end":{"line":61,"column":64}}]},"6":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":30},"end":{"line":74,"column":61}},{"start":{"line":75,"column":8},"end":{"line":75,"column":21}},{"start":{"line":75,"column":25},"end":{"line":75,"column":66}},{"start":{"line":76,"column":8},"end":{"line":76,"column":57}}]},"7":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"8":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":12}},{"start":{"line":80,"column":16},"end":{"line":80,"column":40}}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":30},"end":{"line":92,"column":66}},{"start":{"line":92,"column":70},"end":{"line":92,"column":122}},{"start":{"line":93,"column":8},"end":{"line":93,"column":43}},{"start":{"line":94,"column":9},"end":{"line":94,"column":61}},{"start":{"line":94,"column":66},"end":{"line":94,"column":92}},{"start":{"line":94,"column":96},"end":{"line":94,"column":134}},{"start":{"line":95,"column":8},"end":{"line":95,"column":18}},{"start":{"line":96,"column":9},"end":{"line":96,"column":41}},{"start":{"line":96,"column":45},"end":{"line":96,"column":79}}]},"10":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"11":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":10},"end":{"line":109,"column":47}},{"start":{"line":109,"column":52},"end":{"line":109,"column":77}},{"start":{"line":109,"column":81},"end":{"line":109,"column":110}}]},"12":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"13":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"14":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"15":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":39},"end":{"line":136,"column":44}},{"start":{"line":136,"column":47},"end":{"line":136,"column":58}}]},"16":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"17":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":8},"end":{"line":166,"column":49}},{"start":{"line":166,"column":54},"end":{"line":166,"column":79}},{"start":{"line":166,"column":83},"end":{"line":166,"column":116}}]},"18":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":169,"column":8}},{"start":{"line":169,"column":8},"end":{"line":169,"column":8}}]},"19":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":12},"end":{"line":169,"column":34}},{"start":{"line":169,"column":38},"end":{"line":169,"column":54}}]},"20":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":176,"column":4}},{"start":{"line":176,"column":4},"end":{"line":176,"column":4}}]},"21":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":10},"end":{"line":176,"column":47}},{"start":{"line":176,"column":52},"end":{"line":176,"column":77}},{"start":{"line":176,"column":81},"end":{"line":176,"column":143}}]},"22":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"23":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"24":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":10},"end":{"line":187,"column":26}},{"start":{"line":187,"column":30},"end":{"line":187,"column":46}}]},"25":{"line":191,"type":"cond-expr","locations":[{"start":{"line":191,"column":49},"end":{"line":191,"column":59}},{"start":{"line":191,"column":62},"end":{"line":191,"column":69}}]},"26":{"line":198,"type":"cond-expr","locations":[{"start":{"line":198,"column":39},"end":{"line":198,"column":44}},{"start":{"line":198,"column":47},"end":{"line":198,"column":58}}]},"27":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":8}},{"start":{"line":202,"column":8},"end":{"line":202,"column":8}}]},"28":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":12},"end":{"line":202,"column":33}},{"start":{"line":202,"column":37},"end":{"line":202,"column":85}}]},"29":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":25},"end":{"line":211,"column":48}},{"start":{"line":211,"column":52},"end":{"line":211,"column":84}}]},"30":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":213,"column":8}},{"start":{"line":213,"column":8},"end":{"line":213,"column":8}}]},"31":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":8},"end":{"line":234,"column":8}},{"start":{"line":234,"column":8},"end":{"line":234,"column":8}}]},"32":{"line":234,"type":"binary-expr","locations":[{"start":{"line":234,"column":12},"end":{"line":234,"column":13}},{"start":{"line":234,"column":17},"end":{"line":234,"column":46}}]},"33":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":16},"end":{"line":236,"column":16}},{"start":{"line":236,"column":16},"end":{"line":236,"column":16}}]},"34":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":8},"end":{"line":246,"column":8}},{"start":{"line":246,"column":8},"end":{"line":246,"column":8}}]},"35":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":12},"end":{"line":246,"column":22}},{"start":{"line":246,"column":26},"end":{"line":246,"column":64}}]},"36":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":16},"end":{"line":248,"column":16}},{"start":{"line":248,"column":16},"end":{"line":248,"column":16}}]},"37":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":11},"end":{"line":267,"column":35}},{"start":{"line":268,"column":8},"end":{"line":268,"column":33}},{"start":{"line":268,"column":37},"end":{"line":268,"column":61}},{"start":{"line":269,"column":8},"end":{"line":269,"column":34}},{"start":{"line":269,"column":38},"end":{"line":269,"column":52}}]},"38":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":12},"end":{"line":281,"column":34}},{"start":{"line":282,"column":8},"end":{"line":282,"column":39}},{"start":{"line":282,"column":43},"end":{"line":282,"column":56}},{"start":{"line":283,"column":8},"end":{"line":283,"column":43}},{"start":{"line":283,"column":47},"end":{"line":283,"column":118}},{"start":{"line":284,"column":8},"end":{"line":284,"column":34}},{"start":{"line":284,"column":38},"end":{"line":284,"column":52}}]},"39":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":19},"end":{"line":296,"column":44}},{"start":{"line":296,"column":48},"end":{"line":296,"column":82}},{"start":{"line":297,"column":8},"end":{"line":297,"column":34}},{"start":{"line":297,"column":38},"end":{"line":297,"column":55}},{"start":{"line":297,"column":59},"end":{"line":297,"column":66}}]},"40":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"41":{"line":317,"type":"binary-expr","locations":[{"start":{"line":317,"column":19},"end":{"line":317,"column":44}},{"start":{"line":317,"column":48},"end":{"line":317,"column":71}},{"start":{"line":318,"column":8},"end":{"line":318,"column":79}},{"start":{"line":319,"column":8},"end":{"line":319,"column":25}},{"start":{"line":319,"column":29},"end":{"line":319,"column":36}}]},"42":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":4},"end":{"line":321,"column":4}},{"start":{"line":321,"column":4},"end":{"line":321,"column":4}}]},"43":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":8},"end":{"line":324,"column":8}},{"start":{"line":324,"column":8},"end":{"line":324,"column":8}}]},"44":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":4},"end":{"line":340,"column":4}},{"start":{"line":340,"column":4},"end":{"line":340,"column":4}}]},"45":{"line":340,"type":"binary-expr","locations":[{"start":{"line":340,"column":8},"end":{"line":340,"column":30}},{"start":{"line":340,"column":34},"end":{"line":340,"column":58}}]},"46":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":8},"end":{"line":342,"column":8}},{"start":{"line":342,"column":8},"end":{"line":342,"column":8}}]},"47":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":4},"end":{"line":350,"column":4}},{"start":{"line":350,"column":4},"end":{"line":350,"column":4}}]},"48":{"line":350,"type":"binary-expr","locations":[{"start":{"line":350,"column":8},"end":{"line":350,"column":37}},{"start":{"line":350,"column":41},"end":{"line":350,"column":68}}]},"49":{"line":354,"type":"binary-expr","locations":[{"start":{"line":354,"column":32},"end":{"line":354,"column":63}},{"start":{"line":354,"column":67},"end":{"line":354,"column":84}},{"start":{"line":354,"column":88},"end":{"line":354,"column":102}},{"start":{"line":355,"column":8},"end":{"line":355,"column":212}}]},"50":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":4},"end":{"line":356,"column":4}},{"start":{"line":356,"column":4},"end":{"line":356,"column":4}}]},"51":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":4},"end":{"line":361,"column":4}},{"start":{"line":361,"column":4},"end":{"line":361,"column":4}}]},"52":{"line":366,"type":"cond-expr","locations":[{"start":{"line":367,"column":8},"end":{"line":367,"column":36}},{"start":{"line":368,"column":8},"end":{"line":368,"column":94}}]},"53":{"line":367,"type":"binary-expr","locations":[{"start":{"line":367,"column":8},"end":{"line":367,"column":25}},{"start":{"line":367,"column":29},"end":{"line":367,"column":36}}]},"54":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":8},"end":{"line":368,"column":25}},{"start":{"line":368,"column":29},"end":{"line":368,"column":55}},{"start":{"line":368,"column":59},"end":{"line":368,"column":83}},{"start":{"line":368,"column":87},"end":{"line":368,"column":94}}]},"55":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":4},"end":{"line":370,"column":4}},{"start":{"line":370,"column":4},"end":{"line":370,"column":4}}]},"56":{"line":371,"type":"binary-expr","locations":[{"start":{"line":371,"column":32},"end":{"line":371,"column":38}},{"start":{"line":371,"column":42},"end":{"line":371,"column":76}},{"start":{"line":371,"column":80},"end":{"line":371,"column":122}}]},"57":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":8},"end":{"line":372,"column":8}},{"start":{"line":372,"column":8},"end":{"line":372,"column":8}}]},"58":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":4},"end":{"line":378,"column":4}},{"start":{"line":378,"column":4},"end":{"line":378,"column":4}}]},"59":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":4},"end":{"line":382,"column":4}},{"start":{"line":382,"column":4},"end":{"line":382,"column":4}}]},"60":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":8},"end":{"line":382,"column":18}},{"start":{"line":382,"column":22},"end":{"line":382,"column":39}},{"start":{"line":382,"column":43},"end":{"line":382,"column":49}}]},"61":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":11},"end":{"line":401,"column":22}},{"start":{"line":402,"column":8},"end":{"line":402,"column":26}},{"start":{"line":402,"column":30},"end":{"line":402,"column":67}},{"start":{"line":403,"column":8},"end":{"line":403,"column":28}},{"start":{"line":403,"column":32},"end":{"line":403,"column":70}}]},"62":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":8},"end":{"line":413,"column":8}},{"start":{"line":413,"column":8},"end":{"line":413,"column":8}}]},"63":{"line":413,"type":"binary-expr","locations":[{"start":{"line":413,"column":13},"end":{"line":413,"column":43}},{"start":{"line":413,"column":47},"end":{"line":413,"column":69}},{"start":{"line":414,"column":13},"end":{"line":414,"column":40}},{"start":{"line":414,"column":44},"end":{"line":414,"column":67}}]},"64":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":4},"end":{"line":423,"column":4}},{"start":{"line":423,"column":4},"end":{"line":423,"column":4}}]},"65":{"line":423,"type":"binary-expr","locations":[{"start":{"line":423,"column":8},"end":{"line":423,"column":21}},{"start":{"line":423,"column":25},"end":{"line":423,"column":66}}]},"66":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":4},"end":{"line":432,"column":4}},{"start":{"line":432,"column":4},"end":{"line":432,"column":4}}]},"67":{"line":433,"type":"binary-expr","locations":[{"start":{"line":433,"column":15},"end":{"line":433,"column":45}},{"start":{"line":433,"column":49},"end":{"line":433,"column":63}}]},"68":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":8},"end":{"line":456,"column":8}},{"start":{"line":456,"column":8},"end":{"line":456,"column":8}}]},"69":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":4},"end":{"line":462,"column":4}},{"start":{"line":462,"column":4},"end":{"line":462,"column":4}}]},"70":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":8},"end":{"line":468,"column":8}},{"start":{"line":468,"column":8},"end":{"line":468,"column":8}}]},"71":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":16},"end":{"line":471,"column":16}},{"start":{"line":471,"column":16},"end":{"line":471,"column":16}}]},"72":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":4},"end":{"line":508,"column":4}},{"start":{"line":508,"column":4},"end":{"line":508,"column":4}}]},"73":{"line":576,"type":"if","locations":[{"start":{"line":576,"column":8},"end":{"line":576,"column":8}},{"start":{"line":576,"column":8},"end":{"line":576,"column":8}}]},"74":{"line":584,"type":"binary-expr","locations":[{"start":{"line":584,"column":34},"end":{"line":584,"column":57}},{"start":{"line":584,"column":61},"end":{"line":584,"column":67}}]},"75":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":8},"end":{"line":586,"column":8}},{"start":{"line":586,"column":8},"end":{"line":586,"column":8}}]},"76":{"line":586,"type":"binary-expr","locations":[{"start":{"line":586,"column":12},"end":{"line":586,"column":37}},{"start":{"line":586,"column":41},"end":{"line":586,"column":80}},{"start":{"line":586,"column":84},"end":{"line":586,"column":141}}]},"77":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":8},"end":{"line":590,"column":8}},{"start":{"line":590,"column":8},"end":{"line":590,"column":8}}]},"78":{"line":598,"type":"if","locations":[{"start":{"line":598,"column":8},"end":{"line":598,"column":8}},{"start":{"line":598,"column":8},"end":{"line":598,"column":8}}]},"79":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":8},"end":{"line":602,"column":8}},{"start":{"line":602,"column":8},"end":{"line":602,"column":8}}]},"80":{"line":602,"type":"binary-expr","locations":[{"start":{"line":602,"column":12},"end":{"line":602,"column":30}},{"start":{"line":602,"column":34},"end":{"line":602,"column":58}}]},"81":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":15},"end":{"line":604,"column":15}},{"start":{"line":604,"column":15},"end":{"line":604,"column":15}}]},"82":{"line":604,"type":"binary-expr","locations":[{"start":{"line":604,"column":19},"end":{"line":604,"column":36}},{"start":{"line":604,"column":40},"end":{"line":604,"column":64}}]},"83":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":15},"end":{"line":606,"column":15}},{"start":{"line":606,"column":15},"end":{"line":606,"column":15}}]},"84":{"line":606,"type":"binary-expr","locations":[{"start":{"line":606,"column":19},"end":{"line":606,"column":54}},{"start":{"line":606,"column":58},"end":{"line":606,"column":94}}]},"85":{"line":608,"type":"if","locations":[{"start":{"line":608,"column":15},"end":{"line":608,"column":15}},{"start":{"line":608,"column":15},"end":{"line":608,"column":15}}]},"86":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":12},"end":{"line":619,"column":12}},{"start":{"line":619,"column":12},"end":{"line":619,"column":12}}]},"87":{"line":619,"type":"binary-expr","locations":[{"start":{"line":619,"column":16},"end":{"line":619,"column":50}},{"start":{"line":619,"column":54},"end":{"line":619,"column":83}}]},"88":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":12},"end":{"line":623,"column":12}},{"start":{"line":623,"column":12},"end":{"line":623,"column":12}}]},"89":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":16},"end":{"line":625,"column":16}},{"start":{"line":625,"column":16},"end":{"line":625,"column":16}}]},"90":{"line":633,"type":"binary-expr","locations":[{"start":{"line":633,"column":15},"end":{"line":633,"column":19}},{"start":{"line":633,"column":23},"end":{"line":633,"column":40}}]},"91":{"line":635,"type":"cond-expr","locations":[{"start":{"line":635,"column":22},"end":{"line":635,"column":38}},{"start":{"line":635,"column":41},"end":{"line":635,"column":45}}]},"92":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":12},"end":{"line":642,"column":12}},{"start":{"line":642,"column":12},"end":{"line":642,"column":12}}]},"93":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":16},"end":{"line":643,"column":16}},{"start":{"line":643,"column":16},"end":{"line":643,"column":16}}]},"94":{"line":643,"type":"binary-expr","locations":[{"start":{"line":643,"column":20},"end":{"line":643,"column":54}},{"start":{"line":643,"column":58},"end":{"line":643,"column":92}}]},"95":{"line":647,"type":"if","locations":[{"start":{"line":647,"column":16},"end":{"line":647,"column":16}},{"start":{"line":647,"column":16},"end":{"line":647,"column":16}}]},"96":{"line":647,"type":"binary-expr","locations":[{"start":{"line":647,"column":20},"end":{"line":647,"column":38}},{"start":{"line":647,"column":42},"end":{"line":647,"column":61}}]},"97":{"line":653,"type":"binary-expr","locations":[{"start":{"line":653,"column":38},"end":{"line":653,"column":61}},{"start":{"line":653,"column":65},"end":{"line":653,"column":71}}]},"98":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":12},"end":{"line":654,"column":12}},{"start":{"line":654,"column":12},"end":{"line":654,"column":12}}]},"99":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":16},"end":{"line":655,"column":16}},{"start":{"line":655,"column":16},"end":{"line":655,"column":16}}]},"100":{"line":655,"type":"binary-expr","locations":[{"start":{"line":655,"column":20},"end":{"line":655,"column":54}},{"start":{"line":655,"column":58},"end":{"line":655,"column":103}}]},"101":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":16},"end":{"line":659,"column":16}},{"start":{"line":659,"column":16},"end":{"line":659,"column":16}}]},"102":{"line":659,"type":"binary-expr","locations":[{"start":{"line":659,"column":20},"end":{"line":659,"column":38}},{"start":{"line":659,"column":42},"end":{"line":659,"column":72}}]},"103":{"line":670,"type":"binary-expr","locations":[{"start":{"line":670,"column":15},"end":{"line":670,"column":22}},{"start":{"line":670,"column":26},"end":{"line":670,"column":61}}]},"104":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":12},"end":{"line":677,"column":12}},{"start":{"line":677,"column":12},"end":{"line":677,"column":12}}]},"105":{"line":687,"type":"if","locations":[{"start":{"line":687,"column":4},"end":{"line":687,"column":4}},{"start":{"line":687,"column":4},"end":{"line":687,"column":4}}]},"106":{"line":692,"type":"if","locations":[{"start":{"line":692,"column":4},"end":{"line":692,"column":4}},{"start":{"line":692,"column":4},"end":{"line":692,"column":4}}]},"107":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":4},"end":{"line":698,"column":4}},{"start":{"line":698,"column":4},"end":{"line":698,"column":4}}]},"108":{"line":703,"type":"if","locations":[{"start":{"line":703,"column":4},"end":{"line":703,"column":4}},{"start":{"line":703,"column":4},"end":{"line":703,"column":4}}]},"109":{"line":707,"type":"if","locations":[{"start":{"line":707,"column":11},"end":{"line":707,"column":11}},{"start":{"line":707,"column":11},"end":{"line":707,"column":11}}]},"110":{"line":708,"type":"binary-expr","locations":[{"start":{"line":708,"column":15},"end":{"line":708,"column":46}},{"start":{"line":708,"column":50},"end":{"line":708,"column":80}}]},"111":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":4},"end":{"line":724,"column":4}},{"start":{"line":724,"column":4},"end":{"line":724,"column":4}}]},"112":{"line":728,"type":"if","locations":[{"start":{"line":728,"column":4},"end":{"line":728,"column":4}},{"start":{"line":728,"column":4},"end":{"line":728,"column":4}}]},"113":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":8},"end":{"line":734,"column":8}},{"start":{"line":734,"column":8},"end":{"line":734,"column":8}}]},"114":{"line":744,"type":"if","locations":[{"start":{"line":744,"column":8},"end":{"line":744,"column":8}},{"start":{"line":744,"column":8},"end":{"line":744,"column":8}}]},"115":{"line":749,"type":"binary-expr","locations":[{"start":{"line":749,"column":33},"end":{"line":749,"column":56}},{"start":{"line":749,"column":60},"end":{"line":749,"column":90}}]},"116":{"line":750,"type":"if","locations":[{"start":{"line":750,"column":8},"end":{"line":750,"column":8}},{"start":{"line":750,"column":8},"end":{"line":750,"column":8}}]},"117":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":4},"end":{"line":758,"column":4}},{"start":{"line":758,"column":4},"end":{"line":758,"column":4}}]},"118":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":8},"end":{"line":765,"column":8}},{"start":{"line":765,"column":8},"end":{"line":765,"column":8}}]},"119":{"line":779,"type":"if","locations":[{"start":{"line":779,"column":4},"end":{"line":779,"column":4}},{"start":{"line":779,"column":4},"end":{"line":779,"column":4}}]},"120":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":4},"end":{"line":788,"column":4}},{"start":{"line":788,"column":4},"end":{"line":788,"column":4}}]},"121":{"line":788,"type":"binary-expr","locations":[{"start":{"line":788,"column":8},"end":{"line":788,"column":13}},{"start":{"line":788,"column":17},"end":{"line":788,"column":31}},{"start":{"line":788,"column":35},"end":{"line":788,"column":95}}]},"122":{"line":800,"type":"if","locations":[{"start":{"line":800,"column":4},"end":{"line":800,"column":4}},{"start":{"line":800,"column":4},"end":{"line":800,"column":4}}]},"123":{"line":806,"type":"cond-expr","locations":[{"start":{"line":806,"column":36},"end":{"line":806,"column":45}},{"start":{"line":806,"column":48},"end":{"line":809,"column":13}}]},"124":{"line":812,"type":"if","locations":[{"start":{"line":812,"column":11},"end":{"line":812,"column":11}},{"start":{"line":812,"column":11},"end":{"line":812,"column":11}}]},"125":{"line":820,"type":"if","locations":[{"start":{"line":820,"column":11},"end":{"line":820,"column":11}},{"start":{"line":820,"column":11},"end":{"line":820,"column":11}}]},"126":{"line":820,"type":"binary-expr","locations":[{"start":{"line":820,"column":15},"end":{"line":820,"column":50}},{"start":{"line":820,"column":54},"end":{"line":820,"column":101}},{"start":{"line":821,"column":8},"end":{"line":821,"column":63}}]},"127":{"line":827,"type":"cond-expr","locations":[{"start":{"line":827,"column":36},"end":{"line":827,"column":45}},{"start":{"line":827,"column":48},"end":{"line":830,"column":13}}]},"128":{"line":833,"type":"if","locations":[{"start":{"line":833,"column":11},"end":{"line":833,"column":11}},{"start":{"line":833,"column":11},"end":{"line":833,"column":11}}]},"129":{"line":846,"type":"binary-expr","locations":[{"start":{"line":846,"column":15},"end":{"line":846,"column":29}},{"start":{"line":846,"column":33},"end":{"line":846,"column":48}}]},"130":{"line":860,"type":"if","locations":[{"start":{"line":860,"column":12},"end":{"line":860,"column":12}},{"start":{"line":860,"column":12},"end":{"line":860,"column":12}}]},"131":{"line":864,"type":"if","locations":[{"start":{"line":864,"column":12},"end":{"line":864,"column":12}},{"start":{"line":864,"column":12},"end":{"line":864,"column":12}}]},"132":{"line":865,"type":"if","locations":[{"start":{"line":865,"column":16},"end":{"line":865,"column":16}},{"start":{"line":865,"column":16},"end":{"line":865,"column":16}}]},"133":{"line":874,"type":"if","locations":[{"start":{"line":874,"column":12},"end":{"line":874,"column":12}},{"start":{"line":874,"column":12},"end":{"line":874,"column":12}}]},"134":{"line":874,"type":"binary-expr","locations":[{"start":{"line":874,"column":16},"end":{"line":874,"column":33}},{"start":{"line":874,"column":37},"end":{"line":874,"column":56}},{"start":{"line":874,"column":60},"end":{"line":874,"column":96}},{"start":{"line":874,"column":100},"end":{"line":874,"column":148}},{"start":{"line":874,"column":152},"end":{"line":874,"column":182}},{"start":{"line":874,"column":186},"end":{"line":874,"column":215}}]},"135":{"line":876,"type":"if","locations":[{"start":{"line":876,"column":16},"end":{"line":876,"column":16}},{"start":{"line":876,"column":16},"end":{"line":876,"column":16}}]},"136":{"line":882,"type":"if","locations":[{"start":{"line":882,"column":8},"end":{"line":882,"column":8}},{"start":{"line":882,"column":8},"end":{"line":882,"column":8}}]},"137":{"line":883,"type":"if","locations":[{"start":{"line":883,"column":12},"end":{"line":883,"column":12}},{"start":{"line":883,"column":12},"end":{"line":883,"column":12}}]},"138":{"line":886,"type":"if","locations":[{"start":{"line":886,"column":12},"end":{"line":886,"column":12}},{"start":{"line":886,"column":12},"end":{"line":886,"column":12}}]},"139":{"line":886,"type":"binary-expr","locations":[{"start":{"line":886,"column":16},"end":{"line":886,"column":32}},{"start":{"line":886,"column":36},"end":{"line":886,"column":73}}]},"140":{"line":894,"type":"binary-expr","locations":[{"start":{"line":894,"column":20},"end":{"line":894,"column":24}},{"start":{"line":894,"column":28},"end":{"line":894,"column":63}},{"start":{"line":894,"column":67},"end":{"line":894,"column":129}},{"start":{"line":895,"column":16},"end":{"line":895,"column":43}},{"start":{"line":896,"column":16},"end":{"line":896,"column":70}},{"start":{"line":897,"column":18},"end":{"line":897,"column":43}},{"start":{"line":897,"column":47},"end":{"line":897,"column":92}},{"start":{"line":897,"column":96},"end":{"line":897,"column":130}},{"start":{"line":898,"column":21},"end":{"line":898,"column":45}},{"start":{"line":898,"column":49},"end":{"line":898,"column":94}},{"start":{"line":898,"column":98},"end":{"line":898,"column":132}},{"start":{"line":898,"column":136},"end":{"line":898,"column":171}}]},"141":{"line":903,"type":"if","locations":[{"start":{"line":903,"column":12},"end":{"line":903,"column":12}},{"start":{"line":903,"column":12},"end":{"line":903,"column":12}}]},"142":{"line":906,"type":"if","locations":[{"start":{"line":906,"column":12},"end":{"line":906,"column":12}},{"start":{"line":906,"column":12},"end":{"line":906,"column":12}}]},"143":{"line":906,"type":"binary-expr","locations":[{"start":{"line":906,"column":16},"end":{"line":906,"column":27}},{"start":{"line":906,"column":31},"end":{"line":906,"column":59}}]},"144":{"line":910,"type":"if","locations":[{"start":{"line":910,"column":12},"end":{"line":910,"column":12}},{"start":{"line":910,"column":12},"end":{"line":910,"column":12}}]},"145":{"line":923,"type":"if","locations":[{"start":{"line":923,"column":8},"end":{"line":923,"column":8}},{"start":{"line":923,"column":8},"end":{"line":923,"column":8}}]},"146":{"line":923,"type":"binary-expr","locations":[{"start":{"line":923,"column":12},"end":{"line":923,"column":34}},{"start":{"line":923,"column":38},"end":{"line":923,"column":74}}]},"147":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":15},"end":{"line":934,"column":15}},{"start":{"line":934,"column":15},"end":{"line":934,"column":15}}]},"148":{"line":934,"type":"binary-expr","locations":[{"start":{"line":934,"column":19},"end":{"line":934,"column":40}},{"start":{"line":934,"column":44},"end":{"line":934,"column":80}}]},"149":{"line":945,"type":"if","locations":[{"start":{"line":945,"column":15},"end":{"line":945,"column":15}},{"start":{"line":945,"column":15},"end":{"line":945,"column":15}}]},"150":{"line":945,"type":"binary-expr","locations":[{"start":{"line":945,"column":19},"end":{"line":945,"column":58}},{"start":{"line":945,"column":62},"end":{"line":945,"column":99}}]},"151":{"line":962,"type":"if","locations":[{"start":{"line":962,"column":4},"end":{"line":962,"column":4}},{"start":{"line":962,"column":4},"end":{"line":962,"column":4}}]},"152":{"line":962,"type":"binary-expr","locations":[{"start":{"line":962,"column":10},"end":{"line":962,"column":40}},{"start":{"line":962,"column":44},"end":{"line":962,"column":97}}]},"153":{"line":969,"type":"if","locations":[{"start":{"line":969,"column":8},"end":{"line":969,"column":8}},{"start":{"line":969,"column":8},"end":{"line":969,"column":8}}]},"154":{"line":987,"type":"if","locations":[{"start":{"line":987,"column":4},"end":{"line":987,"column":4}},{"start":{"line":987,"column":4},"end":{"line":987,"column":4}}]},"155":{"line":993,"type":"if","locations":[{"start":{"line":993,"column":4},"end":{"line":993,"column":4}},{"start":{"line":993,"column":4},"end":{"line":993,"column":4}}]},"156":{"line":993,"type":"binary-expr","locations":[{"start":{"line":993,"column":8},"end":{"line":993,"column":29}},{"start":{"line":993,"column":33},"end":{"line":993,"column":77}}]},"157":{"line":1000,"type":"if","locations":[{"start":{"line":1000,"column":8},"end":{"line":1000,"column":8}},{"start":{"line":1000,"column":8},"end":{"line":1000,"column":8}}]},"158":{"line":1000,"type":"binary-expr","locations":[{"start":{"line":1000,"column":12},"end":{"line":1000,"column":32}},{"start":{"line":1000,"column":36},"end":{"line":1000,"column":55}}]},"159":{"line":1008,"type":"binary-expr","locations":[{"start":{"line":1008,"column":11},"end":{"line":1008,"column":45}},{"start":{"line":1008,"column":49},"end":{"line":1008,"column":72}}]},"160":{"line":1011,"type":"binary-expr","locations":[{"start":{"line":1011,"column":11},"end":{"line":1011,"column":46}},{"start":{"line":1011,"column":50},"end":{"line":1011,"column":73}}]},"161":{"line":1014,"type":"binary-expr","locations":[{"start":{"line":1014,"column":11},"end":{"line":1014,"column":34}},{"start":{"line":1014,"column":38},"end":{"line":1014,"column":59}}]},"162":{"line":1024,"type":"if","locations":[{"start":{"line":1024,"column":8},"end":{"line":1024,"column":8}},{"start":{"line":1024,"column":8},"end":{"line":1024,"column":8}}]},"163":{"line":1038,"type":"if","locations":[{"start":{"line":1038,"column":4},"end":{"line":1038,"column":4}},{"start":{"line":1038,"column":4},"end":{"line":1038,"column":4}}]},"164":{"line":1044,"type":"cond-expr","locations":[{"start":{"line":1044,"column":50},"end":{"line":1044,"column":59}},{"start":{"line":1045,"column":8},"end":{"line":1046,"column":38}}]},"165":{"line":1044,"type":"binary-expr","locations":[{"start":{"line":1044,"column":18},"end":{"line":1044,"column":29}},{"start":{"line":1044,"column":33},"end":{"line":1044,"column":47}}]},"166":{"line":1045,"type":"cond-expr","locations":[{"start":{"line":1045,"column":25},"end":{"line":1045,"column":33}},{"start":{"line":1046,"column":12},"end":{"line":1046,"column":38}}]},"167":{"line":1046,"type":"cond-expr","locations":[{"start":{"line":1046,"column":26},"end":{"line":1046,"column":31}},{"start":{"line":1046,"column":34},"end":{"line":1046,"column":38}}]},"168":{"line":1048,"type":"if","locations":[{"start":{"line":1048,"column":4},"end":{"line":1048,"column":4}},{"start":{"line":1048,"column":4},"end":{"line":1048,"column":4}}]},"169":{"line":1052,"type":"cond-expr","locations":[{"start":{"line":1052,"column":41},"end":{"line":1052,"column":44}},{"start":{"line":1052,"column":47},"end":{"line":1052,"column":50}}]},"170":{"line":1053,"type":"cond-expr","locations":[{"start":{"line":1053,"column":33},"end":{"line":1053,"column":59}},{"start":{"line":1053,"column":62},"end":{"line":1053,"column":85}}]},"171":{"line":1055,"type":"if","locations":[{"start":{"line":1055,"column":4},"end":{"line":1055,"column":4}},{"start":{"line":1055,"column":4},"end":{"line":1055,"column":4}}]},"172":{"line":1065,"type":"if","locations":[{"start":{"line":1065,"column":4},"end":{"line":1065,"column":4}},{"start":{"line":1065,"column":4},"end":{"line":1065,"column":4}}]},"173":{"line":1066,"type":"cond-expr","locations":[{"start":{"line":1066,"column":38},"end":{"line":1066,"column":44}},{"start":{"line":1066,"column":47},"end":{"line":1066,"column":51}}]},"174":{"line":1152,"type":"binary-expr","locations":[{"start":{"line":1152,"column":22},"end":{"line":1152,"column":36}},{"start":{"line":1152,"column":40},"end":{"line":1152,"column":42}}]},"175":{"line":1155,"type":"if","locations":[{"start":{"line":1155,"column":8},"end":{"line":1155,"column":8}},{"start":{"line":1155,"column":8},"end":{"line":1155,"column":8}}]},"176":{"line":1165,"type":"binary-expr","locations":[{"start":{"line":1165,"column":48},"end":{"line":1165,"column":62}},{"start":{"line":1165,"column":66},"end":{"line":1165,"column":68}}]},"177":{"line":1170,"type":"if","locations":[{"start":{"line":1170,"column":12},"end":{"line":1170,"column":12}},{"start":{"line":1170,"column":12},"end":{"line":1170,"column":12}}]},"178":{"line":1176,"type":"cond-expr","locations":[{"start":{"line":1176,"column":55},"end":{"line":1176,"column":59}},{"start":{"line":1176,"column":62},"end":{"line":1176,"column":74}}]},"179":{"line":1189,"type":"if","locations":[{"start":{"line":1189,"column":8},"end":{"line":1189,"column":8}},{"start":{"line":1189,"column":8},"end":{"line":1189,"column":8}}]},"180":{"line":1192,"type":"if","locations":[{"start":{"line":1192,"column":8},"end":{"line":1192,"column":8}},{"start":{"line":1192,"column":8},"end":{"line":1192,"column":8}}]},"181":{"line":1217,"type":"if","locations":[{"start":{"line":1217,"column":4},"end":{"line":1217,"column":4}},{"start":{"line":1217,"column":4},"end":{"line":1217,"column":4}}]},"182":{"line":1218,"type":"if","locations":[{"start":{"line":1218,"column":8},"end":{"line":1218,"column":8}},{"start":{"line":1218,"column":8},"end":{"line":1218,"column":8}}]}},"code":["// ng-annotate-main.js","// MIT licensed, see LICENSE file","// Copyright (c) 2013-2016 Olov Lassus <olov.lassus@gmail.com>","","\"use strict\";","const fmt = require(\"simple-fmt\");","const is = require(\"simple-is\");","const alter = require(\"alter\");","const traverse = require(\"ordered-ast-traverse\");","let EOL = require(\"os\").EOL;","const assert = require(\"assert\");","const ngInject = require(\"./nginject\");","const generateSourcemap = require(\"./generate-sourcemap\");","const Lut = require(\"./lut\");","const scopeTools = require(\"./scopetools\");","const stringmap = require(\"stringmap\");","const optionalAngularDashboardFramework = require(\"./optionals/angular-dashboard-framework\");","const require_acorn_t0 = Date.now();","const parser = require(\"acorn\").parse;","const require_acorn_t1 = Date.now();","","const chainedRouteProvider = 1;","const chainedUrlRouterProvider = 2;","const chainedStateProvider = 3;","const chainedRegular = 4;","","function match(node, ctx, matchPlugins) {","    const isMethodCall = (","        node.type === \"CallExpression\" &&","            node.callee.type === \"MemberExpression\" &&","            node.callee.computed === false","        );","","    // matchInjectorInvoke must happen before matchRegular","    // to prevent false positive ($injector.invoke() outside module)","    // matchProvide must happen before matchRegular","    // to prevent regular from matching it as a short-form","    const matchMethodCalls = (isMethodCall &&","        (matchInjectorInvoke(node) || matchProvide(node, ctx) || matchRegular(node, ctx) || matchNgRoute(node) || matchMaterialShowModalOpen(node) || matchNgUi(node) || matchHttpProvider(node) || matchControllerProvider(node)));","","    return matchMethodCalls ||","        (matchPlugins && matchPlugins(node)) ||","        matchDirectiveReturnObject(node) ||","        matchProviderGet(node);","}","","function matchMaterialShowModalOpen(node) {","    // $mdDialog.show({.. controller: fn, resolve: {f: function($scope) {}, ..}});","    // $mdToast.show({.. controller: fn, resolve: {f: function($scope) {}, ..}});","    // $mdBottomSheet.show({.. controller: fn, resolve: {f: function($scope) {}, ..}});","    // $modal.open({.. controller: fn, resolve: {f: function($scope) {}, ..}});","","    // we already know that node is a (non-computed) method call","    const callee = node.callee;","    const obj = callee.object; // identifier or expression","    const method = callee.property; // identifier","    const args = node.arguments;","","    if (obj.type === \"Identifier\" &&","        ((is.someof(obj.name, [\"$modal\", \"$uibModal\"]) && method.name === \"open\") || (is.someof(obj.name, [\"$mdDialog\", \"$mdToast\", \"$mdBottomSheet\"]) && method.name === \"show\")) &&","        args.length === 1 && args[0].type === \"ObjectExpression\") {","        const props = args[0].properties;","        const res = [matchProp(\"controller\", props)];","        res.push.apply(res, matchResolve(props));","        return res.filter(Boolean);","    }","    return false;","}","","function matchDirectiveReturnObject(node) {","    // only matches inside directives","    // return { .. controller: function($scope, $timeout), ...}","","    return limit(\"directive\", node.type === \"ReturnStatement\" &&","        node.argument && node.argument.type === \"ObjectExpression\" &&","        matchProp(\"controller\", node.argument.properties));","}","","function limit(name, node) {","    if (node && !node.$limitToMethodName) {","        node.$limitToMethodName = name;","    }","    return node;","}","","function matchProviderGet(node) {","    // only matches inside providers","    // (this|self|that).$get = function($scope, $timeout)","    // { ... $get: function($scope, $timeout), ...}","    let memberExpr;","    let self;","    return limit(\"provider\", (node.type === \"AssignmentExpression\" && (memberExpr = node.left).type === \"MemberExpression\" &&","        memberExpr.property.name === \"$get\" &&","        ((self = memberExpr.object).type === \"ThisExpression\" || (self.type === \"Identifier\" && is.someof(self.name, [\"self\", \"that\"]))) &&","        node.right) ||","        (node.type === \"ObjectExpression\" && matchProp(\"$get\", node.properties)));","}","","function matchNgRoute(node) {","    // $routeProvider.when(\"path\", {","    //   ...","    //   controller: function($scope) {},","    //   resolve: {f: function($scope) {}, ..}","    // })","","    // we already know that node is a (non-computed) method call","    const callee = node.callee;","    const obj = callee.object; // identifier or expression","    if (!(obj.$chained === chainedRouteProvider || (obj.type === \"Identifier\" && obj.name === \"$routeProvider\"))) {","        return false;","    }","    node.$chained = chainedRouteProvider;","","    const method = callee.property; // identifier","    if (method.name !== \"when\") {","        return false;","    }","","    const args = node.arguments;","    if (args.length !== 2) {","        return false;","    }","    const configArg = last(args)","    if (configArg.type !== \"ObjectExpression\") {","        return false;","    }","","    const props = configArg.properties;","    const res = [","        matchProp(\"controller\", props)","    ];","    // {resolve: ..}","    res.push.apply(res, matchResolve(props));","","    const filteredRes = res.filter(Boolean);","    return (filteredRes.length === 0 ? false : filteredRes);","}","","function matchNgUi(node) {","    // $stateProvider.state(\"myState\", {","    //     ...","    //     controller: function($scope)","    //     controllerProvider: function($scope)","    //     templateProvider: function($scope)","    //     onEnter: function($scope)","    //     onExit: function($scope)","    // });","    // $stateProvider.state(\"myState\", {... resolve: {f: function($scope) {}, ..} ..})","    // $stateProvider.state(\"myState\", {... params: {params: {simple: function($scope) {}, inValue: { value: function($scope) {} }} ..})","    // $stateProvider.state(\"myState\", {... views: {... somename: {... controller: fn, controllerProvider: fn, templateProvider: fn, resolve: {f: fn}}}})","    //","    // stateHelperProvider.setNestedState({ sameasregularstate, children: [sameasregularstate, ..]})","    // stateHelperProvider.setNestedState({ sameasregularstate, children: [sameasregularstate, ..]}, true)","    //","    // $urlRouterProvider.when(.., function($scope) {})","    //","    // $modal.open see matchMaterialShowModalOpen","","    // we already know that node is a (non-computed) method call","    const callee = node.callee;","    const obj = callee.object; // identifier or expression","    const method = callee.property; // identifier","    const args = node.arguments;","","    // shortcut for $urlRouterProvider.when(.., function($scope) {})","    if (obj.$chained === chainedUrlRouterProvider || (obj.type === \"Identifier\" && obj.name === \"$urlRouterProvider\")) {","        node.$chained = chainedUrlRouterProvider;","","        if (method.name === \"when\" && args.length >= 1) {","            return last(args);","        }","        return false;","    }","","    // everything below is for $stateProvider and stateHelperProvider alone","    if (!(obj.$chained === chainedStateProvider || (obj.type === \"Identifier\" && is.someof(obj.name, [\"$stateProvider\", \"stateHelperProvider\"])))) {","        return false;","    }","    node.$chained = chainedStateProvider;","","    if (is.noneof(method.name, [\"state\", \"setNestedState\"])) {","        return false;","    }","","    // $stateProvider.state({ ... }) and $stateProvider.state(\"name\", { ... })","    // stateHelperProvider.setNestedState({ .. }) and stateHelperProvider.setNestedState({ .. }, true)","    if (!(args.length >= 1 && args.length <= 2)) {","        return false;","    }","","    const configArg = (method.name === \"state\" ? last(args) : args[0]);","","    const res = [];","","    recursiveMatch(configArg);","","    const filteredRes = res.filter(Boolean);","    return (filteredRes.length === 0 ? false : filteredRes);","","","    function recursiveMatch(objectExpressionNode) {","        if (!objectExpressionNode || objectExpressionNode.type !== \"ObjectExpression\") {","            return false;","        }","","        const properties = objectExpressionNode.properties;","","        matchStateProps(properties, res);","","        const childrenArrayExpression = matchProp(\"children\", properties);","        const children = childrenArrayExpression && childrenArrayExpression.elements;","","        if (!children) {","            return;","        }","        children.forEach(recursiveMatch);","    }","","    function matchStateProps(props, res) {","        const simple = [","            matchProp(\"controller\", props),","            matchProp(\"controllerProvider\", props),","            matchProp(\"templateProvider\", props),","            matchProp(\"onEnter\", props),","            matchProp(\"onExit\", props),","        ];","        res.push.apply(res, simple);","","        // {resolve: ..}","        res.push.apply(res, matchResolve(props));","","        // {params: {simple: function($scope) {}, inValue: { value: function($scope) {} }}","        const a = matchProp(\"params\", props);","        if (a && a.type === \"ObjectExpression\") {","            a.properties.forEach(function(prop) {","                if (prop.value.type === \"ObjectExpression\") {","                    res.push(matchProp(\"value\", prop.value.properties));","                } else {","                    res.push(prop.value);","                }","            });","        }","","        // {view: ...}","        const viewObject = matchProp(\"views\", props);","        if (viewObject && viewObject.type === \"ObjectExpression\") {","            viewObject.properties.forEach(function(prop) {","                if (prop.value.type === \"ObjectExpression\") {","                    res.push(matchProp(\"controller\", prop.value.properties));","                    res.push(matchProp(\"controllerProvider\", prop.value.properties));","                    res.push(matchProp(\"templateProvider\", prop.value.properties));","                    res.push.apply(res, matchResolve(prop.value.properties));","                }","            });","        }","    }","}","","function matchInjectorInvoke(node) {","    // $injector.invoke(function($compile) { ... });","","    // we already know that node is a (non-computed) method call","    const callee = node.callee;","    const obj = callee.object; // identifier or expression","    const method = callee.property; // identifier","","    return method.name === \"invoke\" &&","        obj.type === \"Identifier\" && obj.name === \"$injector\" &&","        node.arguments.length >= 1 && node.arguments;","}","","function matchHttpProvider(node) {","    // $httpProvider.interceptors.push(function($scope) {});","    // $httpProvider.responseInterceptors.push(function($scope) {});","","    // we already know that node is a (non-computed) method call","    const callee = node.callee;","    const obj = callee.object; // identifier or expression","    const method = callee.property; // identifier","","    return (method.name === \"push\" &&","        obj.type === \"MemberExpression\" && !obj.computed &&","        obj.object.name === \"$httpProvider\" && is.someof(obj.property.name,  [\"interceptors\", \"responseInterceptors\"]) &&","        node.arguments.length >= 1 && node.arguments);","}","","function matchControllerProvider(node) {","    // $controllerProvider.register(\"foo\", function($scope) {});","","    // we already know that node is a (non-computed) method call","    const callee = node.callee;","    const obj = callee.object; // identifier or expression","    const method = callee.property; // identifier","    const args = node.arguments;","","    const target = obj.type === \"Identifier\" && obj.name === \"$controllerProvider\" &&","        method.name === \"register\" && args.length === 2 && args[1];","","    if (target) {","        target.$methodName = method.name;","    }","    return target;","}","","function matchProvide(node, ctx) {","    // $provide.decorator(\"foo\", function($scope) {});","    // $provide.service(\"foo\", function($scope) {});","    // $provide.factory(\"foo\", function($scope) {});","    // $provide.provider(\"foo\", function($scope) {});","","    // we already know that node is a (non-computed) method call","    const callee = node.callee;","    const obj = callee.object; // identifier or expression","    const method = callee.property; // identifier","    const args = node.arguments;","","    const target = obj.type === \"Identifier\" && obj.name === \"$provide\" &&","        is.someof(method.name, [\"decorator\", \"service\", \"factory\", \"provider\"]) &&","        args.length === 2 && args[1];","","    if (target) {","        target.$methodName = method.name;","","        if (ctx.rename) {","            // for eventual rename purposes","            return args;","        }","    }","    return target;","}","","function matchRegular(node, ctx) {","    // we already know that node is a (non-computed) method call","    const callee = node.callee;","    const obj = callee.object; // identifier or expression","    const method = callee.property; // identifier","","    // short-cut implicit config special case:","    // angular.module(\"MyMod\", function(a) {})","    if (obj.name === \"angular\" && method.name === \"module\") {","        const args = node.arguments;","        if (args.length >= 2) {","            node.$chained = chainedRegular;","            return last(args);","        }","    }","","    // hardcoded exception: foo.decorator is generally considered a short-form","    // declaration but $stateProvider.decorator is not. see https://github.com/olov/ng-annotate/issues/82","    if (obj.name === \"$stateProvider\" && method.name === \"decorator\") {","        return false;","    }","","    const matchAngularModule = (obj.$chained === chainedRegular || isReDef(obj, ctx) || isLongDef(obj)) &&","        is.someof(method.name, [\"provider\", \"value\", \"constant\", \"bootstrap\", \"config\", \"factory\", \"directive\", \"filter\", \"run\", \"controller\", \"service\", \"animation\", \"invoke\", \"store\", \"decorator\", \"component\"]);","    if (!matchAngularModule) {","        return false;","    }","    node.$chained = chainedRegular;","","    if (is.someof(method.name, [\"value\", \"constant\", \"bootstrap\"])) {","        return false; // affects matchAngularModule because of chaining","    }","","    const args = node.arguments;","    let target = (is.someof(method.name, [\"config\", \"run\"]) ?","        args.length === 1 && args[0] :","        args.length === 2 && args[0].type === \"Literal\" && is.string(args[0].value) && args[1]);","","    if (method.name === \"component\") {","        const controllerProp = (target && target.type === \"ObjectExpression\" && matchProp(\"controller\", target.properties));","        if (!controllerProp) {","            return false;","        }","        target = controllerProp;","    }","","    if (target) {","        target.$methodName = method.name;","    }","","    if (ctx.rename && args.length === 2 && target) {","        // for eventual rename purposes","        const somethingNameLiteral = args[0];","        return [somethingNameLiteral, target];","    }","    return target;","}","","// matches with default regexp","//   *.controller(\"MyCtrl\", function($scope, $timeout) {});","//   *.*.controller(\"MyCtrl\", function($scope, $timeout) {});","// matches with --regexp \"^require(.*)$\"","//   require(\"app-module\").controller(\"MyCtrl\", function($scope) {});","function isReDef(node, ctx) {","    return ctx.re.test(ctx.srcForRange(node.range));","}","","// Long form: angular.module(*).controller(\"MyCtrl\", function($scope, $timeout) {});","function isLongDef(node) {","    return node.callee &&","        node.callee.object && node.callee.object.name === \"angular\" &&","        node.callee.property && node.callee.property.name === \"module\";","}","","function last(arr) {","    return arr[arr.length - 1];","}","","function matchProp(name, props) {","    for (let i = 0; i < props.length; i++) {","        const prop = props[i];","        if ((prop.key.type === \"Identifier\" && prop.key.name === name) ||","            (prop.key.type === \"Literal\" && prop.key.value === name)) {","            return prop.value; // FunctionExpression or ArrayExpression","        }","    }","    return null;","}","","function matchResolve(props) {","    const resolveObject = matchProp(\"resolve\", props);","    if (resolveObject && resolveObject.type === \"ObjectExpression\") {","        return resolveObject.properties.map(function(prop) {","            return prop.value;","        });","    }","    return [];","};","","function renamedString(ctx, originalString) {","    if (ctx.rename) {","        return ctx.rename.get(originalString) || originalString;","    }","    return originalString;","}","","function stringify(ctx, arr, quot) {","    return \"[\" + arr.map(function(arg) {","        return quot + renamedString(ctx, arg.name) + quot;","    }).join(\", \") + \"]\";","}","","function parseExpressionOfType(str, type) {","    const node = parser(str).body[0].expression;","    assert(node.type === type);","    return node;","}","","// stand-in for not having a jsshaper-style ref's","function replaceNodeWith(node, newNode) {","    let done = false;","    const parent = node.$parent;","    const keys = Object.keys(parent);","    keys.forEach(function(key) {","        if (parent[key] === node) {","            parent[key] = newNode;","            done = true;","        }","    });","","    if (done) {","        return;","    }","","    // second pass, now check arrays","    keys.forEach(function(key) {","        if (Array.isArray(parent[key])) {","            const arr = parent[key];","            for (let i = 0; i < arr.length; i++) {","                if (arr[i] === node) {","                    arr[i] = newNode;","                    done = true;","                }","            }","        }","    });","","    assert(done);","}","","function insertArray(ctx, functionExpression, fragments, quot) {","    const args = stringify(ctx, functionExpression.params, quot);","","    fragments.push({","        start: functionExpression.range[0],","        end: functionExpression.range[0],","        str: args.slice(0, -1) + \", \",","        loc: {","            start: functionExpression.loc.start,","            end: functionExpression.loc.start","        }","    });","    fragments.push({","        start: functionExpression.range[1],","        end: functionExpression.range[1],","        str: \"]\",","        loc: {","            start: functionExpression.loc.end,","            end: functionExpression.loc.end","        }","    });","}","","function replaceArray(ctx, array, fragments, quot) {","    const functionExpression = last(array.elements);","","    if (functionExpression.params.length === 0) {","        return removeArray(array, fragments);","    }","","    const args = stringify(ctx, functionExpression.params, quot);","    fragments.push({","        start: array.range[0],","        end: functionExpression.range[0],","        str: args.slice(0, -1) + \", \",","        loc: {","            start: array.loc.start,","            end: functionExpression.loc.start","        }","    });","}","","function removeArray(array, fragments) {","    const functionExpression = last(array.elements);","","    fragments.push({","        start: array.range[0],","        end: functionExpression.range[0],","        str: \"\",","        loc: {","            start: array.loc.start,","            end: functionExpression.loc.start","        }","    });","    fragments.push({","        start: functionExpression.range[1],","        end: array.range[1],","        str: \"\",","        loc: {","            start: functionExpression.loc.end,","            end: array.loc.end","        }","    });","}","","function renameProviderDeclarationSite(ctx, literalNode, fragments) {","    fragments.push({","        start: literalNode.range[0] + 1,","        end: literalNode.range[1] - 1,","        str: renamedString(ctx, literalNode.value),","        loc: {","            start: {","                line: literalNode.loc.start.line,","                column: literalNode.loc.start.column + 1","            }, end: {","                line: literalNode.loc.end.line,","                column: literalNode.loc.end.column - 1","            }","        }","    });","}","","function judgeSuspects(ctx) {","    const mode = ctx.mode;","    const fragments = ctx.fragments;","    const quot = ctx.quot;","    const blocked = ctx.blocked;","","    const suspects = makeUnique(ctx.suspects, 1);","","    for (let n = 0; n < 42; n++) {","        // could be while(true), above is just a safety-net","        // in practice it will loop just a couple of times","        propagateModuleContextAndMethodName(suspects);","        if (!setChainedAndMethodNameThroughIifesAndReferences(suspects)) {","            break;","        }","    }","","    // create final suspects by jumping, following, uniq'ing, blocking","    const finalSuspects = makeUnique(suspects.map(function(target) {","        const jumped = jumpOverIife(target);","        const jumpedAndFollowed = followReference(jumped) || jumped;","","        if (target.$limitToMethodName && target.$limitToMethodName !== \"*never*\" && findOuterMethodName(target) !== target.$limitToMethodName) {","            return null;","        }","","        if (blocked.indexOf(jumpedAndFollowed) >= 0) {","            return null;","        }","","        return jumpedAndFollowed;","    }).filter(Boolean), 2);","","    finalSuspects.forEach(function(target) {","        if (target.$chained !== chainedRegular) {","            return;","        }","","        if (mode === \"rebuild\" && isAnnotatedArray(target)) {","            replaceArray(ctx, target, fragments, quot);","        } else if (mode === \"remove\" && isAnnotatedArray(target)) {","            removeArray(target, fragments);","        } else if (is.someof(mode, [\"add\", \"rebuild\"]) && isFunctionExpressionWithArgs(target)) {","            insertArray(ctx, target, fragments, quot);","        } else if (isGenericProviderName(target)) {","            renameProviderDeclarationSite(ctx, target, fragments);","        } else {","            // if it's not array or function-expression, then it's a candidate for foo.$inject = [..]","            judgeInjectArraySuspect(target, ctx);","        }","    });","","","    function propagateModuleContextAndMethodName(suspects) {","        suspects.forEach(function(target) {","            if (target.$chained !== chainedRegular && isInsideModuleContext(target)) {","                target.$chained = chainedRegular;","            }","","            if (!target.$methodName) {","                const methodName = findOuterMethodName(target);","                if (methodName) {","                    target.$methodName = methodName;","                }","            }","        });","    }","","    function findOuterMethodName(node) {","        for (; node && !node.$methodName; node = node.$parent) {","        }","        return node ? node.$methodName : null;","    }","","    function setChainedAndMethodNameThroughIifesAndReferences(suspects) {","        let modified = false;","        suspects.forEach(function(target) {","            const jumped = jumpOverIife(target);","            if (jumped !== target) { // we did skip an IIFE","                if (target.$chained === chainedRegular && jumped.$chained !== chainedRegular) {","                    modified = true;","                    jumped.$chained = chainedRegular;","                }","                if (target.$methodName && !jumped.$methodName) {","                    modified = true;","                    jumped.$methodName = target.$methodName;","                }","            }","","            const jumpedAndFollowed = followReference(jumped) || jumped;","            if (jumpedAndFollowed !== jumped) { // we did follow a reference","                if (jumped.$chained === chainedRegular && jumpedAndFollowed.$chained !== chainedRegular) {","                    modified = true;","                    jumpedAndFollowed.$chained = chainedRegular;","                }","                if (jumped.$methodName && !jumpedAndFollowed.$methodName) {","                    modified = true;","                    jumpedAndFollowed.$methodName = jumped.$methodName;","                }","            }","        });","        return modified;","    }","","    function isInsideModuleContext(node) {","        let $parent = node.$parent;","        for (; $parent && $parent.$chained !== chainedRegular; $parent = $parent.$parent) {","        }","        return Boolean($parent);","    }","","    function makeUnique(suspects, val) {","        return suspects.filter(function(target) {","            if (target.$seen === val) {","                return false;","            }","            target.$seen = val;","            return true;","        });","    }","}","","function followReference(node) {","    if (!scopeTools.isReference(node)) {","        return null;","    }","","    const scope = node.$scope.lookup(node.name);","    if (!scope) {","        return null;","    }","","    const parent = scope.getNode(node.name).$parent;","    const kind = scope.getKind(node.name);","    if (!parent) {","        return null;","    }","    const ptype = parent.type;","","    if (is.someof(kind, [\"const\", \"let\", \"var\"])) {","        assert(ptype === \"VariableDeclarator\");","        // {type: \"VariableDeclarator\", id: {type: \"Identifier\", name: \"foo\"}, init: ..}","        return parent;","    } else if (kind === \"fun\") {","        assert(ptype === \"FunctionDeclaration\" || ptype === \"FunctionExpression\")","        // FunctionDeclaration is the common case, i.e.","        // function foo(a, b) {}","","        // FunctionExpression is only applicable for cases similar to","        // var f = function asdf(a,b) { mymod.controller(\"asdf\", asdf) };","        return parent;","    }","","    // other kinds should not be handled (\"param\", \"caught\")","","    return null;","}","","// O(srclength) so should only be used for debugging purposes, else replace with lut","function posToLine(pos, src) {","    if (pos >= src.length) {","        pos = src.length - 1;","    }","","    if (pos <= -1) {","        return -1;","    }","","    let line = 1;","    for (let i = 0; i < pos; i++) {","        if (src[i] === \"\\n\") {","            ++line;","        }","    }","","    return line;","}","","function firstNonPrologueStatement(body) {","    for (let i = 0; i < body.length; i++) {","        if (body[i].type !== \"ExpressionStatement\") {","            return body[i];","        }","","        const expr = body[i].expression;","        const isStringLiteral = (expr.type === \"Literal\" && typeof expr.value === \"string\");","        if (!isStringLiteral) {","            return body[i];","        }","    }","    return null;","}","","function judgeInjectArraySuspect(node, ctx) {","    if (node.type === \"VariableDeclaration\") {","        // suspect can only be a VariableDeclaration (statement) in case of","        // explicitly marked via /*@ngInject*/, not via references because","        // references follow to VariableDeclarator (child)","","        // /*@ngInject*/ var foo = function($scope) {} and","","        if (node.declarations.length !== 1) {","            // more than one declarator => exit","            return;","        }","","        // one declarator => jump over declaration into declarator","        // rest of code will treat it as any (referenced) declarator","        node = node.declarations[0];","    }","","    // onode is a top-level node (inside function block), later verified","    // node is inner match, descent in multiple steps","    let onode = null;","    let declaratorName = null;","    if (node.type === \"VariableDeclarator\") {","        onode = node.$parent;","        declaratorName = node.id.name;","        node = node.init; // var foo = ___;","    } else {","        onode = node;","    }","","    // suspect must be inside of a block or at the top-level (i.e. inside of node.$parent.body[])","    if (!node || !onode.$parent || is.noneof(onode.$parent.type, [\"Program\", \"BlockStatement\"])) {","        return;","    }","","    const insertPos = {","        pos: onode.range[1],","        loc: onode.loc.end","    };","    const isSemicolonTerminated = (ctx.src[insertPos.pos - 1] === \";\");","","    node = jumpOverIife(node);","","    if (ctx.isFunctionExpressionWithArgs(node)) {","        // var x = 1, y = function(a,b) {}, z;","","        assert(declaratorName);","        addRemoveInjectArray(","            node.params,","            isSemicolonTerminated ? insertPos : {","                pos: node.range[1],","                loc: node.loc.end","            },","            declaratorName);","","    } else if (ctx.isFunctionDeclarationWithArgs(node)) {","        // /*@ngInject*/ function foo($scope) {}","","        addRemoveInjectArray(","            node.params,","            insertPos,","            node.id.name);","","    } else if (node.type === \"ExpressionStatement\" && node.expression.type === \"AssignmentExpression\" &&","        ctx.isFunctionExpressionWithArgs(node.expression.right)) {","        // /*@ngInject*/ foo.bar[0] = function($scope) {}","","        const name = ctx.srcForRange(node.expression.left.range);","        addRemoveInjectArray(","            node.expression.right.params,","            isSemicolonTerminated ? insertPos : {","                pos: node.expression.right.range[1],","                loc: node.expression.right.loc.end","            },","            name);","","    } else if (node = followReference(node)) {","        // node was a reference and followed node now is either a","        // FunctionDeclaration or a VariableDeclarator","        // => recurse","","        judgeInjectArraySuspect(node, ctx);","    }","","","    function getIndent(pos) {","        const src = ctx.src;","        const lineStart = src.lastIndexOf(\"\\n\", pos - 1) + 1;","        let i = lineStart;","        for (; src[i] === \" \" || src[i] === \"\\t\"; i++) {","        }","        return src.slice(lineStart, i);","    }","","    function addRemoveInjectArray(params, posAfterFunctionDeclaration, name) {","        // if an existing something.$inject = [..] exists then is will always be recycled when rebuilding","","        const indent = getIndent(posAfterFunctionDeclaration.pos);","","        let foundSuspectInBody = false;","        let existingExpressionStatementWithArray = null;","        let nodeAfterExtends = null;","        onode.$parent.body.forEach(function(bnode, idx) {","            if (bnode === onode) {","                foundSuspectInBody = true;","            }","","            if (hasInjectArray(bnode)) {","                if (existingExpressionStatementWithArray) {","                    throw fmt(\"conflicting inject arrays at line {0} and {1}\",","                        posToLine(existingExpressionStatementWithArray.range[0], ctx.src),","                        posToLine(bnode.range[0], ctx.src));","                }","                existingExpressionStatementWithArray = bnode;","            }","","            let e;","            if (!nodeAfterExtends && !foundSuspectInBody && bnode.type === \"ExpressionStatement\" && (e = bnode.expression).type === \"CallExpression\" && e.callee.type === \"Identifier\" && e.callee.name === \"__extends\") {","                const nextStatement = onode.$parent.body[idx + 1];","                if (nextStatement) {","                    nodeAfterExtends = nextStatement;","                }","            }","        });","        assert(foundSuspectInBody);","        if (onode.type === \"FunctionDeclaration\") {","            if (!nodeAfterExtends) {","                nodeAfterExtends = firstNonPrologueStatement(onode.$parent.body);","            }","            if (nodeAfterExtends && !existingExpressionStatementWithArray) {","                posAfterFunctionDeclaration = skipPrevNewline(nodeAfterExtends.range[0], nodeAfterExtends.loc.start);","            }","        }","","        function hasInjectArray(node) {","            let lvalue;","            let assignment;","            return (node && node.type === \"ExpressionStatement\" && (assignment = node.expression).type === \"AssignmentExpression\" &&","                assignment.operator === \"=\" &&","                (lvalue = assignment.left).type === \"MemberExpression\" &&","                ((lvalue.computed === false && ctx.srcForRange(lvalue.object.range) === name && lvalue.property.name === \"$inject\") ||","                    (lvalue.computed === true && ctx.srcForRange(lvalue.object.range) === name && lvalue.property.type === \"Literal\" && lvalue.property.value === \"$inject\")));","        }","","        function skipPrevNewline(pos, loc) {","            let prevLF = ctx.src.lastIndexOf(\"\\n\", pos);","            if (prevLF === -1) {","                return { pos: pos, loc: loc };","            }","            if (prevLF >= 1 && ctx.src[prevLF - 1] === \"\\r\") {","                --prevLF;","            }","","            if (/\\S/g.test(ctx.src.slice(prevLF, pos - 1))) { // any non-whitespace chars between prev newline and pos?","                return { pos: pos, loc: loc };","            }","","            return {","                pos: prevLF,","                loc: {","                    line: loc.line - 1,","                    column: prevLF - ctx.src.lastIndexOf(\"\\n\", prevLF) - 1,","                }","            };","        }","","        if (ctx.mode === \"rebuild\" && existingExpressionStatementWithArray) {","            const strNoWhitespace = fmt(\"{2}.$inject = {3};\", null, null, name, ctx.stringify(ctx, params, ctx.quot));","            ctx.fragments.push({","                start: existingExpressionStatementWithArray.range[0],","                end: existingExpressionStatementWithArray.range[1],","                str: strNoWhitespace,","                loc: {","                    start: existingExpressionStatementWithArray.loc.start,","                    end: existingExpressionStatementWithArray.loc.end","                }","            });","        } else if (ctx.mode === \"remove\" && existingExpressionStatementWithArray) {","            const start = skipPrevNewline(existingExpressionStatementWithArray.range[0], existingExpressionStatementWithArray.loc.start);","            ctx.fragments.push({","                start: start.pos,","                end: existingExpressionStatementWithArray.range[1],","                str: \"\",","                loc: {","                    start: start.loc,","                    end: existingExpressionStatementWithArray.loc.end","                }","            });","        } else if (is.someof(ctx.mode, [\"add\", \"rebuild\"]) && !existingExpressionStatementWithArray) {","            const str = fmt(\"{0}{1}{2}.$inject = {3};\", EOL, indent, name, ctx.stringify(ctx, params, ctx.quot));","            ctx.fragments.push({","                start: posAfterFunctionDeclaration.pos,","                end: posAfterFunctionDeclaration.pos,","                str: str,","                loc: {","                    start: posAfterFunctionDeclaration.loc,","                    end: posAfterFunctionDeclaration.loc","                }","            });","        }","    }","}","","function jumpOverIife(node) {","    let outerfn;","    if (!(node.type === \"CallExpression\" && (outerfn = node.callee).type === \"FunctionExpression\")) {","        return node;","    }","","    const outerbody = outerfn.body.body;","    for (let i = 0; i < outerbody.length; i++) {","        const statement = outerbody[i];","        if (statement.type === \"ReturnStatement\") {","            return statement.argument;","        }","    }","","    return node;","}","","function addModuleContextDependentSuspect(target, ctx) {","    ctx.suspects.push(target);","}","","function addModuleContextIndependentSuspect(target, ctx) {","    target.$chained = chainedRegular;","    ctx.suspects.push(target);","}","","function isAnnotatedArray(node) {","    if (node.type !== \"ArrayExpression\") {","        return false;","    }","    const elements = node.elements;","","    // last should be a function expression","    if (elements.length === 0 || last(elements).type !== \"FunctionExpression\") {","        return false;","    }","","    // all but last should be string literals","    for (let i = 0; i < elements.length - 1; i++) {","        const n = elements[i];","        if (n.type !== \"Literal\" || !is.string(n.value)) {","            return false;","        }","    }","","    return true;","}","function isFunctionExpressionWithArgs(node) {","    return node.type === \"FunctionExpression\" && node.params.length >= 1;","}","function isFunctionDeclarationWithArgs(node) {","    return node.type === \"FunctionDeclaration\" && node.params.length >= 1;","}","function isGenericProviderName(node) {","    return node.type === \"Literal\" && is.string(node.value);","}","","function uniqifyFragments(fragments) {","    // must do in-place modification of ctx.fragments because shared reference","","    const map = Object.create(null);","    for (let i = 0; i < fragments.length; i++) {","        const frag = fragments[i];","        const str = JSON.stringify({start: frag.start, end: frag.end, str: frag.str});","        if (map[str]) {","            fragments.splice(i, 1); // remove","            i--;","        } else {","            map[str] = true;","        }","    }","}","","const allOptionals = {","    \"angular-dashboard-framework\": optionalAngularDashboardFramework,","};","","module.exports = function ngAnnotate(src, options) {","    if (options.list) {","        return {","            list: Object.keys(allOptionals).sort(),","        };","    }","","    const mode = (options.add && options.remove ? \"rebuild\" :","        options.remove ? \"remove\" :","            options.add ? \"add\" : null);","","    if (!mode) {","        return {src: src};","    }","","    const quot = options.single_quotes ? \"'\" : '\"';","    const re = (options.regexp ? new RegExp(options.regexp) : /^[a-zA-Z0-9_\\$\\.\\s]+$/);","    const rename = new stringmap();","    if (options.rename) {","        options.rename.forEach(function(value) {","            rename.set(value.from, value.to);","        });","    }","    let ast;","    const stats = {};","","    // detect newline and override os.EOL","    const lf = src.lastIndexOf(\"\\n\");","    if (lf >= 1) {","        EOL = (src[lf - 1] === \"\\r\" ? \"\\r\\n\" : \"\\n\");","    }","","    // [{type: \"Block\"|\"Line\", value: str, range: [from,to]}, ..]","    let comments = [];","","    try {","        stats.parser_require_t0 = require_acorn_t0;","        stats.parser_require_t1 = require_acorn_t1;","        stats.parser_parse_t0 = Date.now();","        // acorn","        ast = parser(src, {","            ecmaVersion: 6,","            allowReserved: true,","            locations: true,","            ranges: true,","            onComment: comments,","        });","        stats.parser_parse_t1 = Date.now();","    } catch(e) {","        return {","            errors: [\"error: couldn't process source due to parse error\", e.message],","        };","    }","","    // append a dummy-node to ast so that lut.findNodeFromPos(lastPos) returns something","    ast.body.push({","        type: \"DebuggerStatement\",","        range: [ast.range[1], ast.range[1]],","        loc: {","            start: ast.loc.end,","            end: ast.loc.end","        }","    });","","    // all source modifications are built up as operations in the","    // fragments array, later sent to alter in one shot","    const fragments = [];","","    // suspects is built up with suspect nodes by match.","    // A suspect node will get annotations added / removed if it","    // fulfills the arrayexpression or functionexpression look,","    // and if it is in the correct context (inside an angular","    // module definition)","    const suspects = [];","","    // blocked is an array of blocked suspects. Any target node","    // (final, i.e. IIFE-jumped, reference-followed and such) included","    // in blocked will be ignored by judgeSuspects","    const blocked = [];","","    // Position information for all nodes in the AST,","    // used for sourcemap generation","    const nodePositions = [];","","    const lut = new Lut(ast, src);","","    scopeTools.setupScopeAndReferences(ast);","","    const ctx = {","        mode: mode,","        quot: quot,","        src: src,","        srcForRange: function(range) {","            return src.slice(range[0], range[1]);","        },","        re: re,","        rename: rename,","        comments: comments,","        fragments: fragments,","        suspects: suspects,","        blocked: blocked,","        lut: lut,","        isFunctionExpressionWithArgs: isFunctionExpressionWithArgs,","        isFunctionDeclarationWithArgs: isFunctionDeclarationWithArgs,","        isAnnotatedArray: isAnnotatedArray,","        addModuleContextDependentSuspect: addModuleContextDependentSuspect,","        addModuleContextIndependentSuspect: addModuleContextIndependentSuspect,","        stringify: stringify,","        nodePositions: nodePositions,","        matchResolve: matchResolve,","        matchProp: matchProp,","        last: last,","    };","","    // setup optionals","    const optionals = options.enable || [];","    for (let i = 0; i < optionals.length; i++) {","        const optional = String(optionals[i]);","        if (!allOptionals.hasOwnProperty(optional)) {","            return {","                errors: [\"error: found no optional named \" + optional],","            };","        }","    }","    const optionalsPlugins = optionals.map(function(optional) {","        return allOptionals[optional];","    });","","    const plugins = [].concat(optionalsPlugins, options.plugin || []);","","    function matchPlugins(node, isMethodCall) {","        for (let i = 0; i < plugins.length; i++) {","            const res = plugins[i].match(node, isMethodCall);","            if (res) {","                return res;","            }","        }","        return false;","    }","    const matchPluginsOrNull = (plugins.length === 0 ? null : matchPlugins);","","    ngInject.inspectComments(ctx);","    plugins.forEach(function(plugin) {","        plugin.init(ctx);","    });","","    traverse(ast, {pre: function(node) {","        ngInject.inspectNode(node, ctx);","","    }, post: function(node) {","        ctx.nodePositions.push(node.loc.start);","        let targets = match(node, ctx, matchPluginsOrNull);","        if (!targets) {","            return;","        }","        if (!is.array(targets)) {","            targets = [targets];","        }","","        for (let i = 0; i < targets.length; i++) {","            addModuleContextDependentSuspect(targets[i], ctx);","        }","    }});","","    try {","        judgeSuspects(ctx);","    } catch(e) {","        return {","            errors: [\"error: \" + e],","        };","    }","","    uniqifyFragments(ctx.fragments);","","    const out = alter(src, fragments);","    const result = {","        src: out,","        _stats: stats,","    };","","    if (options.map) {","        if (typeof(options.map) !== 'object')","            options.map = {};","        stats.sourcemap_t0 = Date.now();","        generateSourcemap(result, src, nodePositions, fragments, options.map);","        stats.sourcemap_t1 = Date.now();","    }","","    return result;","}",""],"l":{"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"22":1,"23":1,"24":1,"25":1,"27":1,"28":0,"38":0,"41":0,"47":1,"54":0,"55":0,"56":0,"57":0,"59":0,"62":0,"63":0,"64":0,"65":0,"67":0,"70":1,"74":0,"79":1,"80":0,"81":0,"83":0,"86":1,"90":0,"91":0,"92":0,"99":1,"107":0,"108":0,"109":0,"110":0,"112":0,"114":0,"115":0,"116":0,"119":0,"120":0,"121":0,"123":0,"124":0,"125":0,"128":0,"129":0,"133":0,"135":0,"136":0,"139":1,"160":0,"161":0,"162":0,"163":0,"166":0,"167":0,"169":0,"170":0,"172":0,"176":0,"177":0,"179":0,"181":0,"182":0,"187":0,"188":0,"191":0,"193":0,"195":0,"197":0,"198":0,"201":1,"202":0,"203":0,"206":0,"208":0,"210":0,"211":0,"213":0,"214":0,"216":0,"219":1,"220":0,"227":0,"230":0,"233":0,"234":0,"235":0,"236":0,"237":0,"239":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"259":1,"263":0,"264":0,"265":0,"267":0,"272":1,"277":0,"278":0,"279":0,"281":0,"287":1,"291":0,"292":0,"293":0,"294":0,"296":0,"299":0,"300":0,"302":0,"305":1,"312":0,"313":0,"314":0,"315":0,"317":0,"321":0,"322":0,"324":0,"326":0,"329":0,"332":1,"334":0,"335":0,"336":0,"340":0,"341":0,"342":0,"343":0,"344":0,"350":0,"351":0,"354":0,"356":0,"357":0,"359":0,"361":0,"362":0,"365":0,"366":0,"370":0,"371":0,"372":0,"373":0,"375":0,"378":0,"379":0,"382":0,"384":0,"385":0,"387":0,"395":1,"396":0,"400":1,"401":0,"406":1,"407":0,"410":1,"411":0,"412":0,"413":0,"415":0,"418":0,"421":1,"422":0,"423":0,"424":0,"425":0,"428":0,"431":1,"432":0,"433":0,"435":0,"438":1,"439":0,"440":0,"444":1,"445":0,"446":0,"447":0,"451":1,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"462":0,"463":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"479":0,"482":1,"483":0,"485":0,"494":0,"505":1,"506":0,"508":0,"509":0,"512":0,"513":0,"524":1,"525":0,"527":0,"536":0,"547":1,"548":0,"564":1,"565":0,"566":0,"567":0,"568":0,"570":0,"572":0,"575":0,"576":0,"577":0,"582":0,"583":0,"584":0,"586":0,"587":0,"590":0,"591":0,"594":0,"597":0,"598":0,"599":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"612":0,"617":1,"618":0,"619":0,"620":0,"623":0,"624":0,"625":0,"626":0,"632":1,"633":0,"635":0,"638":1,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"647":0,"648":0,"649":0,"653":0,"654":0,"655":0,"656":0,"657":0,"659":0,"660":0,"661":0,"665":0,"668":1,"669":0,"670":0,"672":0,"675":1,"676":0,"677":0,"678":0,"680":0,"681":0,"686":1,"687":0,"688":0,"691":0,"692":0,"693":0,"696":0,"697":0,"698":0,"699":0,"701":0,"703":0,"704":0,"706":0,"707":0,"708":0,"714":0,"719":0,"723":1,"724":0,"725":0,"728":0,"729":0,"732":0,"733":0,"734":0,"735":0,"739":0,"742":1,"743":0,"744":0,"745":0,"748":0,"749":0,"750":0,"751":0,"754":0,"757":1,"758":0,"765":0,"767":0,"772":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"784":0,"788":0,"789":0,"792":0,"796":0,"798":0,"800":0,"803":0,"804":0,"812":0,"815":0,"820":0,"824":0,"825":0,"833":0,"838":0,"842":1,"843":0,"844":0,"845":0,"846":0,"848":0,"851":1,"854":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"864":0,"865":0,"866":0,"870":0,"873":0,"874":0,"875":0,"876":0,"877":0,"881":0,"882":0,"883":0,"884":0,"886":0,"887":0,"891":1,"892":0,"893":0,"894":0,"901":1,"902":0,"903":0,"904":0,"906":0,"907":0,"910":0,"911":0,"914":0,"923":0,"924":0,"925":0,"934":0,"935":0,"936":0,"945":0,"946":0,"947":0,"960":1,"961":0,"962":0,"963":0,"966":0,"967":0,"968":0,"969":0,"970":0,"974":0,"977":1,"978":0,"981":1,"982":0,"983":0,"986":1,"987":0,"988":0,"990":0,"993":0,"994":0,"998":0,"999":0,"1000":0,"1001":0,"1005":0,"1007":1,"1008":0,"1010":1,"1011":0,"1013":1,"1014":0,"1017":1,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1028":0,"1033":1,"1037":1,"1038":2,"1039":0,"1044":2,"1048":2,"1049":2,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1060":0,"1061":0,"1064":0,"1065":0,"1066":0,"1070":0,"1072":0,"1073":0,"1074":0,"1075":0,"1077":0,"1084":0,"1086":0,"1092":0,"1103":0,"1110":0,"1115":0,"1119":0,"1121":0,"1123":0,"1125":0,"1130":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1161":0,"1162":0,"1165":0,"1167":1,"1168":0,"1169":0,"1170":0,"1171":0,"1174":0,"1176":0,"1178":0,"1179":0,"1180":0,"1183":0,"1184":0,"1187":0,"1188":0,"1189":0,"1190":0,"1192":0,"1193":0,"1196":0,"1197":0,"1201":0,"1202":0,"1204":0,"1209":0,"1211":0,"1212":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1225":0}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/nginject.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/nginject.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"inspectNode","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":32}}},"2":{"name":"inspectCallExpression","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":42}}},"3":{"name":"inspectFunction","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":36}}},"4":{"name":"matchPrologueDirectives","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":59}}},"5":{"name":"inspectComments","line":105,"loc":{"start":{"line":105,"column":0},"end":{"line":105,"column":30}}},"6":{"name":"isStringArray","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":29}}},"7":{"name":"(anonymous_7)","line":128,"loc":{"start":{"line":128,"column":60},"end":{"line":128,"column":72}}},"8":{"name":"findNextStatement","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":33}}},"9":{"name":"addSuspect","line":143,"loc":{"start":{"line":143,"column":0},"end":{"line":143,"column":40}}},"10":{"name":"addObjectExpression","line":177,"loc":{"start":{"line":177,"column":4},"end":{"line":177,"column":44}}},"11":{"name":"(anonymous_11)","line":178,"loc":{"start":{"line":178,"column":41},"end":{"line":178,"column":53}}},"12":{"name":"addOrBlock","line":184,"loc":{"start":{"line":184,"column":4},"end":{"line":184,"column":35}}},"13":{"name":"nestedObjectValues","line":193,"loc":{"start":{"line":193,"column":0},"end":{"line":193,"column":39}}},"14":{"name":"(anonymous_14)","line":196,"loc":{"start":{"line":196,"column":28},"end":{"line":196,"column":43}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"2":{"start":{"line":9,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":14,"column":0},"end":{"line":20,"column":1}},"4":{"start":{"line":15,"column":4},"end":{"line":19,"column":5}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":41}},"6":{"start":{"line":17,"column":11},"end":{"line":19,"column":5}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":35}},"8":{"start":{"line":22,"column":0},"end":{"line":28,"column":1}},"9":{"start":{"line":23,"column":4},"end":{"line":23,"column":34}},"10":{"start":{"line":24,"column":4},"end":{"line":27,"column":5}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":46}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":50}},"13":{"start":{"line":30,"column":0},"end":{"line":30,"column":64}},"14":{"start":{"line":32,"column":0},"end":{"line":79,"column":1}},"15":{"start":{"line":33,"column":4},"end":{"line":33,"column":76}},"16":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"17":{"start":{"line":35,"column":8},"end":{"line":35,"column":15}},"18":{"start":{"line":37,"column":4},"end":{"line":37,"column":41}},"19":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"20":{"start":{"line":43,"column":8},"end":{"line":43,"column":37}},"21":{"start":{"line":44,"column":8},"end":{"line":44,"column":15}},"22":{"start":{"line":56,"column":4},"end":{"line":59,"column":5}},"23":{"start":{"line":57,"column":8},"end":{"line":57,"column":45}},"24":{"start":{"line":58,"column":8},"end":{"line":58,"column":15}},"25":{"start":{"line":73,"column":4},"end":{"line":73,"column":46}},"26":{"start":{"line":74,"column":4},"end":{"line":78,"column":5}},"27":{"start":{"line":75,"column":8},"end":{"line":75,"column":53}},"28":{"start":{"line":77,"column":8},"end":{"line":77,"column":37}},"29":{"start":{"line":81,"column":0},"end":{"line":103,"column":1}},"30":{"start":{"line":82,"column":4},"end":{"line":82,"column":32}},"31":{"start":{"line":84,"column":4},"end":{"line":84,"column":21}},"32":{"start":{"line":85,"column":4},"end":{"line":100,"column":5}},"33":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"34":{"start":{"line":87,"column":12},"end":{"line":87,"column":18}},"35":{"start":{"line":90,"column":8},"end":{"line":90,"column":40}},"36":{"start":{"line":91,"column":8},"end":{"line":91,"column":92}},"37":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"38":{"start":{"line":93,"column":12},"end":{"line":93,"column":18}},"39":{"start":{"line":96,"column":8},"end":{"line":99,"column":9}},"40":{"start":{"line":97,"column":12},"end":{"line":97,"column":31}},"41":{"start":{"line":98,"column":12},"end":{"line":98,"column":18}},"42":{"start":{"line":102,"column":4},"end":{"line":102,"column":17}},"43":{"start":{"line":105,"column":0},"end":{"line":122,"column":1}},"44":{"start":{"line":106,"column":4},"end":{"line":106,"column":34}},"45":{"start":{"line":107,"column":4},"end":{"line":121,"column":5}},"46":{"start":{"line":108,"column":8},"end":{"line":108,"column":36}},"47":{"start":{"line":109,"column":8},"end":{"line":109,"column":58}},"48":{"start":{"line":110,"column":8},"end":{"line":110,"column":82}},"49":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"50":{"start":{"line":112,"column":12},"end":{"line":112,"column":21}},"51":{"start":{"line":115,"column":8},"end":{"line":115,"column":65}},"52":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"53":{"start":{"line":117,"column":12},"end":{"line":117,"column":21}},"54":{"start":{"line":120,"column":8},"end":{"line":120,"column":44}},"55":{"start":{"line":124,"column":0},"end":{"line":131,"column":1}},"56":{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},"57":{"start":{"line":126,"column":8},"end":{"line":126,"column":21}},"58":{"start":{"line":128,"column":4},"end":{"line":130,"column":7}},"59":{"start":{"line":129,"column":8},"end":{"line":129,"column":58}},"60":{"start":{"line":133,"column":0},"end":{"line":141,"column":1}},"61":{"start":{"line":134,"column":4},"end":{"line":134,"column":35}},"62":{"start":{"line":135,"column":4},"end":{"line":139,"column":5}},"63":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"64":{"start":{"line":137,"column":12},"end":{"line":137,"column":39}},"65":{"start":{"line":140,"column":4},"end":{"line":140,"column":16}},"66":{"start":{"line":143,"column":0},"end":{"line":191,"column":1}},"67":{"start":{"line":144,"column":4},"end":{"line":152,"column":5}},"68":{"start":{"line":148,"column":8},"end":{"line":148,"column":57}},"69":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"70":{"start":{"line":150,"column":12},"end":{"line":150,"column":58}},"71":{"start":{"line":154,"column":4},"end":{"line":174,"column":5}},"72":{"start":{"line":156,"column":8},"end":{"line":156,"column":41}},"73":{"start":{"line":157,"column":11},"end":{"line":174,"column":5}},"74":{"start":{"line":159,"column":8},"end":{"line":159,"column":47}},"75":{"start":{"line":160,"column":11},"end":{"line":174,"column":5}},"76":{"start":{"line":162,"column":8},"end":{"line":162,"column":58}},"77":{"start":{"line":163,"column":11},"end":{"line":174,"column":5}},"78":{"start":{"line":165,"column":8},"end":{"line":165,"column":62}},"79":{"start":{"line":166,"column":11},"end":{"line":174,"column":5}},"80":{"start":{"line":168,"column":8},"end":{"line":168,"column":52}},"81":{"start":{"line":169,"column":8},"end":{"line":169,"column":38}},"82":{"start":{"line":172,"column":8},"end":{"line":172,"column":46}},"83":{"start":{"line":173,"column":8},"end":{"line":173,"column":32}},"84":{"start":{"line":177,"column":4},"end":{"line":182,"column":5}},"85":{"start":{"line":178,"column":8},"end":{"line":181,"column":11}},"86":{"start":{"line":179,"column":12},"end":{"line":179,"column":45}},"87":{"start":{"line":180,"column":12},"end":{"line":180,"column":31}},"88":{"start":{"line":184,"column":4},"end":{"line":190,"column":5}},"89":{"start":{"line":185,"column":8},"end":{"line":189,"column":9}},"90":{"start":{"line":186,"column":12},"end":{"line":186,"column":35}},"91":{"start":{"line":188,"column":12},"end":{"line":188,"column":61}},"92":{"start":{"line":193,"column":0},"end":{"line":206,"column":1}},"93":{"start":{"line":194,"column":4},"end":{"line":194,"column":20}},"94":{"start":{"line":196,"column":4},"end":{"line":203,"column":7}},"95":{"start":{"line":197,"column":8},"end":{"line":197,"column":29}},"96":{"start":{"line":198,"column":8},"end":{"line":202,"column":9}},"97":{"start":{"line":199,"column":12},"end":{"line":199,"column":24}},"98":{"start":{"line":200,"column":15},"end":{"line":202,"column":9}},"99":{"start":{"line":201,"column":12},"end":{"line":201,"column":39}},"100":{"start":{"line":205,"column":4},"end":{"line":205,"column":15}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":11},"end":{"line":17,"column":11}},{"start":{"line":17,"column":11},"end":{"line":17,"column":11}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":15},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":88}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"5":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":41}},{"start":{"line":24,"column":46},"end":{"line":24,"column":65}},{"start":{"line":24,"column":69},"end":{"line":24,"column":90}},{"start":{"line":24,"column":95},"end":{"line":24,"column":122}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"7":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"8":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"9":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"10":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"11":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":33},"end":{"line":91,"column":56}},{"start":{"line":91,"column":60},"end":{"line":91,"column":90}}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":8}},{"start":{"line":92,"column":8},"end":{"line":92,"column":8}}]},"13":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8}},{"start":{"line":96,"column":8},"end":{"line":96,"column":8}}]},"14":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":39},"end":{"line":110,"column":75}},{"start":{"line":110,"column":78},"end":{"line":110,"column":80}}]},"15":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"16":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":25}},{"start":{"line":111,"column":29},"end":{"line":111,"column":41}}]},"17":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":8}},{"start":{"line":116,"column":8},"end":{"line":116,"column":8}}]},"18":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"19":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":11},"end":{"line":128,"column":36}},{"start":{"line":128,"column":40},"end":{"line":130,"column":6}}]},"20":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":15},"end":{"line":129,"column":35}},{"start":{"line":129,"column":39},"end":{"line":129,"column":57}}]},"21":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]},"22":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":19},"end":{"line":137,"column":30}},{"start":{"line":137,"column":34},"end":{"line":137,"column":38}}]},"23":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"24":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":8},"end":{"line":144,"column":45}},{"start":{"line":144,"column":49},"end":{"line":144,"column":98}},{"start":{"line":144,"column":102},"end":{"line":144,"column":140}}]},"25":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":8}},{"start":{"line":149,"column":8},"end":{"line":149,"column":8}}]},"26":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"27":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":11},"end":{"line":157,"column":11}},{"start":{"line":157,"column":11},"end":{"line":157,"column":11}}]},"28":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":15},"end":{"line":157,"column":53}},{"start":{"line":157,"column":57},"end":{"line":157,"column":97}}]},"29":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":11},"end":{"line":160,"column":11}},{"start":{"line":160,"column":11},"end":{"line":160,"column":11}}]},"30":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":15},"end":{"line":160,"column":52}},{"start":{"line":160,"column":56},"end":{"line":160,"column":105}},{"start":{"line":160,"column":109},"end":{"line":160,"column":160}}]},"31":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":11},"end":{"line":163,"column":11}},{"start":{"line":163,"column":11},"end":{"line":163,"column":11}}]},"32":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":15},"end":{"line":163,"column":52}},{"start":{"line":163,"column":56},"end":{"line":163,"column":88}},{"start":{"line":163,"column":92},"end":{"line":163,"column":119}},{"start":{"line":163,"column":123},"end":{"line":163,"column":178}}]},"33":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":11},"end":{"line":166,"column":11}},{"start":{"line":166,"column":11},"end":{"line":166,"column":11}}]},"34":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":8},"end":{"line":185,"column":8}},{"start":{"line":185,"column":8},"end":{"line":185,"column":8}}]},"35":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":10},"end":{"line":194,"column":13}},{"start":{"line":194,"column":17},"end":{"line":194,"column":19}}]},"36":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":8},"end":{"line":198,"column":8}},{"start":{"line":198,"column":8},"end":{"line":198,"column":8}}]},"37":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":15},"end":{"line":200,"column":15}},{"start":{"line":200,"column":15},"end":{"line":200,"column":15}}]}},"code":["// nginject.js","// MIT licensed, see LICENSE file","// Copyright (c) 2013-2016 Olov Lassus <olov.lassus@gmail.com>","","\"use strict\";","","const is = require(\"simple-is\");","","module.exports = {","    inspectComments: inspectComments,","    inspectNode: inspectNode,","};","","function inspectNode(node, ctx) {","    if (node.type === \"CallExpression\") {","        inspectCallExpression(node, ctx);","    } else if (node.type === \"FunctionExpression\" || node.type === \"FunctionDeclaration\") {","        inspectFunction(node, ctx);","    }","}","","function inspectCallExpression(node, ctx) {","    const name = node.callee.name;","    if (node.callee.type === \"Identifier\" && (name === \"ngInject\" || name === \"ngNoInject\") && node.arguments.length === 1) {","        const block = (name === \"ngNoInject\");","        addSuspect(node.arguments[0], ctx, block);","    }","}","","const ngAnnotatePrologueDirectives = [\"ngInject\", \"ngNoInject\"];","","function inspectFunction(node, ctx) {","    const str = matchPrologueDirectives(ngAnnotatePrologueDirectives, node);","    if (!str) {","        return;","    }","    const block = (str === \"ngNoInject\");","","    // now add the correct suspect","","    // for function declarations, it is always the function declaration node itself","    if (node.type === \"FunctionDeclaration\") {","        addSuspect(node, ctx, block);","        return;","    }","","    // node is a function expression below","","    // case 1: a function expression which is the rhs of a variable declarator, such as","    // var f1 = function(a) {","    //     \"ngInject\"","    // };","    // in this case we can mark the declarator, same as saying var /*@ngInject*/ f1 = function(a) ..","    // or /*@ngInject*/ var f1 = function(a) ..","    // f1.$inject = [\"a\"]; will be added (or rebuilt/removed)","    if (node.$parent.type === \"VariableDeclarator\") {","        addSuspect(node.$parent, ctx, block);","        return;","    }","","    // case 2: an anonymous function expression, such as","    // g(function(a) {","    //     \"ngInject\"","    // });","    //","    // the suspect is now its parent annotated array (if any), otherwise itself","    // there is a risk of false suspects here, in case the parent annotated array has nothing to do","    // with annotations. the risk should be very low and hopefully easy to workaround","    //","    // added/rebuilt/removed => g([\"a\", function(a) {","    //     \"ngInject\"","    // }]);","    const maybeArrayExpression = node.$parent;","    if (ctx.isAnnotatedArray(maybeArrayExpression)) {","        addSuspect(maybeArrayExpression, ctx, block);","    } else {","        addSuspect(node, ctx, block);","    }","}","","function matchPrologueDirectives(prologueDirectives, node) {","    const body = node.body.body;","","    let found = null;","    for (let i = 0; i < body.length; i++) {","        if (body[i].type !== \"ExpressionStatement\") {","            break;","        }","","        const expr = body[i].expression;","        const isStringLiteral = (expr.type === \"Literal\" && typeof expr.value === \"string\");","        if (!isStringLiteral) {","            break;","        }","","        if (prologueDirectives.indexOf(expr.value) >= 0) {","            found = expr.value;","            break;","        }","    }","","    return found;","}","","function inspectComments(ctx) {","    const comments = ctx.comments;","    for (let i = 0; i < comments.length; i++) {","        const comment = comments[i];","        const yesPos = comment.value.indexOf(\"@ngInject\");","        const noPos = (yesPos === -1 ? comment.value.indexOf(\"@ngNoInject\") : -1);","        if (yesPos === -1 && noPos === -1) {","            continue;","        }","","        const target = ctx.lut.findNodeFromPos(comment.range[1]);","        if (!target) {","            continue;","        }","","        addSuspect(target, ctx, noPos >= 0);","    }","}","","function isStringArray(node) {","    if (node.type !== \"ArrayExpression\") {","        return false;","    }","    return node.elements.length >= 1 && node.elements.every(function(n) {","        return n.type === \"Literal\" && is.string(n.value);","    });","}","","function findNextStatement(node) {","    const body = node.$parent.body;","    for (let i = 0; i < body.length; i++) {","        if (body[i] === node) {","            return body[i + 1] || null;","        }","    }","    return null;","}","","function addSuspect(target, ctx, block) {","    if (target.type === \"ExpressionStatement\" && target.expression.type === \"AssignmentExpression\" && isStringArray(target.expression.right)) {","        // /*@ngInject*/","        // FooBar.$inject = [\"$a\", \"$b\"];","        // function FooBar($a, $b) {}","        const adjustedTarget = findNextStatement(target);","        if (adjustedTarget) {","            return addSuspect(adjustedTarget, ctx, block);","        }","    }","","    if (target.type === \"ObjectExpression\") {","        // /*@ngInject*/ {f1: function(a), .., {f2: function(b)}}","        addObjectExpression(target, ctx);","    } else if (target.type === \"AssignmentExpression\" && target.right.type === \"ObjectExpression\") {","        // /*@ngInject*/ f(x.y = {f1: function(a), .., {f2: function(b)}})","        addObjectExpression(target.right, ctx);","    } else if (target.type === \"ExpressionStatement\" && target.expression.type === \"AssignmentExpression\" && target.expression.right.type === \"ObjectExpression\") {","        // /*@ngInject*/ x.y = {f1: function(a), .., {f2: function(b)}}","        addObjectExpression(target.expression.right, ctx);","    } else if (target.type === \"VariableDeclaration\" && target.declarations.length === 1 && target.declarations[0].init && target.declarations[0].init.type === \"ObjectExpression\") {","        // /*@ngInject*/ var x = {f1: function(a), .., {f2: function(b)}}","        addObjectExpression(target.declarations[0].init, ctx);","    } else if (target.type === \"Property\") {","        // {/*@ngInject*/ justthisone: function(a), ..}","        target.value.$limitToMethodName = \"*never*\";","        addOrBlock(target.value, ctx);","    } else {","        // /*@ngInject*/ function(a) {}","        target.$limitToMethodName = \"*never*\";","        addOrBlock(target, ctx);","    }","","","    function addObjectExpression(node, ctx) {","        nestedObjectValues(node).forEach(function(n) {","            n.$limitToMethodName = \"*never*\";","            addOrBlock(n, ctx);","        });","    }","","    function addOrBlock(node, ctx) {","        if (block) {","            ctx.blocked.push(node);","        } else {","            ctx.addModuleContextIndependentSuspect(node, ctx)","        }","    }","}","","function nestedObjectValues(node, res) {","    res = res || [];","","    node.properties.forEach(function(prop) {","        const v = prop.value;","        if (is.someof(v.type, [\"FunctionExpression\", \"ArrayExpression\"])) {","            res.push(v);","        } else if (v.type === \"ObjectExpression\") {","            nestedObjectValues(v, res);","        }","    });","","    return res;","}",""],"l":{"7":1,"9":1,"14":1,"15":0,"16":0,"17":0,"18":0,"22":1,"23":0,"24":0,"25":0,"26":0,"30":1,"32":1,"33":0,"34":0,"35":0,"37":0,"42":0,"43":0,"44":0,"56":0,"57":0,"58":0,"73":0,"74":0,"75":0,"77":0,"81":1,"82":0,"84":0,"85":0,"86":0,"87":0,"90":0,"91":0,"92":0,"93":0,"96":0,"97":0,"98":0,"102":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"115":0,"116":0,"117":0,"120":0,"124":1,"125":0,"126":0,"128":0,"129":0,"133":1,"134":0,"135":0,"136":0,"137":0,"140":0,"143":1,"144":0,"148":0,"149":0,"150":0,"154":0,"156":0,"157":0,"159":0,"160":0,"162":0,"163":0,"165":0,"166":0,"168":0,"169":0,"172":0,"173":0,"177":1,"178":0,"179":0,"180":0,"184":1,"185":0,"186":0,"188":0,"193":1,"194":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"205":0}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/scopetools.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/scopetools.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":1,"54":0,"55":1,"56":0,"57":1,"58":0,"59":1,"60":0,"61":1,"62":0,"63":1,"64":0,"65":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0,0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0,0,0,0,0,0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"setupScopeAndReferences","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":39}}},"2":{"name":"createScopes","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":36}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":34},"end":{"line":36,"column":55}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":28},"end":{"line":64,"column":44}}},"5":{"name":"createTopScope","line":109,"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":38}}},"6":{"name":"inject","line":110,"loc":{"start":{"line":110,"column":4},"end":{"line":110,"column":25}}},"7":{"name":"isConstLet","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":26}}},"8":{"name":"isNonFunctionBlock","line":148,"loc":{"start":{"line":148,"column":0},"end":{"line":148,"column":42}}},"9":{"name":"isForWithConstLet","line":152,"loc":{"start":{"line":152,"column":0},"end":{"line":152,"column":33}}},"10":{"name":"isForInOfWithConstLet","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":37}}},"11":{"name":"isForInOf","line":160,"loc":{"start":{"line":160,"column":0},"end":{"line":160,"column":25}}},"12":{"name":"isFunction","line":164,"loc":{"start":{"line":164,"column":0},"end":{"line":164,"column":26}}},"13":{"name":"isReference","line":168,"loc":{"start":{"line":168,"column":0},"end":{"line":168,"column":27}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":33}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}},"5":{"start":{"line":12,"column":0},"end":{"line":15,"column":2}},"6":{"start":{"line":17,"column":0},"end":{"line":20,"column":1}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":40}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":32}},"9":{"start":{"line":22,"column":0},"end":{"line":107,"column":1}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":26}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":48}},"12":{"start":{"line":26,"column":4},"end":{"line":106,"column":5}},"13":{"start":{"line":28,"column":8},"end":{"line":32,"column":11}},"14":{"start":{"line":34,"column":11},"end":{"line":106,"column":5}},"15":{"start":{"line":36,"column":8},"end":{"line":39,"column":11}},"16":{"start":{"line":37,"column":12},"end":{"line":37,"column":44}},"17":{"start":{"line":38,"column":12},"end":{"line":38,"column":81}},"18":{"start":{"line":41,"column":11},"end":{"line":106,"column":5}},"19":{"start":{"line":45,"column":8},"end":{"line":49,"column":11}},"20":{"start":{"line":52,"column":8},"end":{"line":62,"column":9}},"21":{"start":{"line":53,"column":12},"end":{"line":61,"column":13}},"22":{"start":{"line":55,"column":16},"end":{"line":55,"column":70}},"23":{"start":{"line":56,"column":19},"end":{"line":61,"column":13}},"24":{"start":{"line":58,"column":16},"end":{"line":58,"column":68}},"25":{"start":{"line":60,"column":16},"end":{"line":60,"column":30}},"26":{"start":{"line":64,"column":8},"end":{"line":66,"column":11}},"27":{"start":{"line":65,"column":12},"end":{"line":65,"column":62}},"28":{"start":{"line":68,"column":11},"end":{"line":106,"column":5}},"29":{"start":{"line":71,"column":8},"end":{"line":75,"column":11}},"30":{"start":{"line":77,"column":11},"end":{"line":106,"column":5}},"31":{"start":{"line":78,"column":8},"end":{"line":78,"column":38}},"32":{"start":{"line":80,"column":8},"end":{"line":84,"column":11}},"33":{"start":{"line":85,"column":8},"end":{"line":85,"column":69}},"34":{"start":{"line":96,"column":8},"end":{"line":96,"column":72}},"35":{"start":{"line":98,"column":11},"end":{"line":106,"column":5}},"36":{"start":{"line":101,"column":8},"end":{"line":105,"column":11}},"37":{"start":{"line":109,"column":0},"end":{"line":142,"column":1}},"38":{"start":{"line":110,"column":4},"end":{"line":119,"column":5}},"39":{"start":{"line":111,"column":8},"end":{"line":118,"column":9}},"40":{"start":{"line":112,"column":12},"end":{"line":112,"column":40}},"41":{"start":{"line":113,"column":12},"end":{"line":113,"column":55}},"42":{"start":{"line":114,"column":12},"end":{"line":116,"column":13}},"43":{"start":{"line":115,"column":16},"end":{"line":115,"column":38}},"44":{"start":{"line":117,"column":12},"end":{"line":117,"column":69}},"45":{"start":{"line":121,"column":4},"end":{"line":125,"column":7}},"46":{"start":{"line":127,"column":4},"end":{"line":131,"column":6}},"47":{"start":{"line":133,"column":4},"end":{"line":133,"column":26}},"48":{"start":{"line":138,"column":4},"end":{"line":138,"column":35}},"49":{"start":{"line":139,"column":4},"end":{"line":139,"column":41}},"50":{"start":{"line":141,"column":4},"end":{"line":141,"column":20}},"51":{"start":{"line":144,"column":0},"end":{"line":146,"column":1}},"52":{"start":{"line":145,"column":4},"end":{"line":145,"column":46}},"53":{"start":{"line":148,"column":0},"end":{"line":150,"column":1}},"54":{"start":{"line":149,"column":4},"end":{"line":149,"column":123}},"55":{"start":{"line":152,"column":0},"end":{"line":154,"column":1}},"56":{"start":{"line":153,"column":4},"end":{"line":153,"column":127}},"57":{"start":{"line":156,"column":0},"end":{"line":158,"column":1}},"58":{"start":{"line":157,"column":4},"end":{"line":157,"column":101}},"59":{"start":{"line":160,"column":0},"end":{"line":162,"column":1}},"60":{"start":{"line":161,"column":4},"end":{"line":161,"column":76}},"61":{"start":{"line":164,"column":0},"end":{"line":166,"column":1}},"62":{"start":{"line":165,"column":4},"end":{"line":165,"column":85}},"63":{"start":{"line":168,"column":0},"end":{"line":180,"column":1}},"64":{"start":{"line":169,"column":4},"end":{"line":169,"column":32}},"65":{"start":{"line":170,"column":4},"end":{"line":179,"column":17}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":27},"end":{"line":24,"column":40}},{"start":{"line":24,"column":43},"end":{"line":24,"column":47}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":11},"end":{"line":34,"column":11}},{"start":{"line":34,"column":11},"end":{"line":34,"column":11}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":11}},{"start":{"line":41,"column":11},"end":{"line":41,"column":11}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"6":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":12}},{"start":{"line":53,"column":12},"end":{"line":53,"column":12}}]},"7":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":19},"end":{"line":56,"column":19}},{"start":{"line":56,"column":19},"end":{"line":56,"column":19}}]},"8":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":11},"end":{"line":68,"column":11}},{"start":{"line":68,"column":11},"end":{"line":68,"column":11}}]},"9":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":15},"end":{"line":68,"column":38}},{"start":{"line":68,"column":42},"end":{"line":68,"column":69}}]},"10":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":11},"end":{"line":77,"column":11}},{"start":{"line":77,"column":11},"end":{"line":77,"column":11}}]},"11":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":11},"end":{"line":98,"column":11}},{"start":{"line":98,"column":11},"end":{"line":98,"column":11}}]},"12":{"line":113,"type":"cond-expr","locations":[{"start":{"line":113,"column":38},"end":{"line":113,"column":43}},{"start":{"line":113,"column":46},"end":{"line":113,"column":53}}]},"13":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":12},"end":{"line":114,"column":12}},{"start":{"line":114,"column":12},"end":{"line":114,"column":12}}]},"14":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":11},"end":{"line":145,"column":27}},{"start":{"line":145,"column":31},"end":{"line":145,"column":45}}]},"15":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":11},"end":{"line":149,"column":41}},{"start":{"line":149,"column":45},"end":{"line":149,"column":82}},{"start":{"line":149,"column":86},"end":{"line":149,"column":122}}]},"16":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":11},"end":{"line":153,"column":39}},{"start":{"line":153,"column":43},"end":{"line":153,"column":52}},{"start":{"line":153,"column":56},"end":{"line":153,"column":96}},{"start":{"line":153,"column":100},"end":{"line":153,"column":126}}]},"17":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":11},"end":{"line":157,"column":26}},{"start":{"line":157,"column":30},"end":{"line":157,"column":70}},{"start":{"line":157,"column":74},"end":{"line":157,"column":100}}]},"18":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":11},"end":{"line":161,"column":41}},{"start":{"line":161,"column":45},"end":{"line":161,"column":75}}]},"19":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":11},"end":{"line":165,"column":46}},{"start":{"line":165,"column":50},"end":{"line":165,"column":84}}]},"20":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":11},"end":{"line":170,"column":27}},{"start":{"line":171,"column":8},"end":{"line":171,"column":34}},{"start":{"line":172,"column":12},"end":{"line":172,"column":73}},{"start":{"line":173,"column":12},"end":{"line":173,"column":106}},{"start":{"line":174,"column":12},"end":{"line":174,"column":64}},{"start":{"line":175,"column":12},"end":{"line":175,"column":74}},{"start":{"line":176,"column":12},"end":{"line":176,"column":69}},{"start":{"line":177,"column":12},"end":{"line":177,"column":55}},{"start":{"line":178,"column":12},"end":{"line":178,"column":67}},{"start":{"line":179,"column":12},"end":{"line":179,"column":16}}]},"21":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":14},"end":{"line":172,"column":50}},{"start":{"line":172,"column":54},"end":{"line":172,"column":72}}]},"22":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":14},"end":{"line":173,"column":48}},{"start":{"line":173,"column":52},"end":{"line":173,"column":77}},{"start":{"line":173,"column":81},"end":{"line":173,"column":105}}]},"23":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":14},"end":{"line":174,"column":40}},{"start":{"line":174,"column":44},"end":{"line":174,"column":63}}]},"24":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":14},"end":{"line":175,"column":48}},{"start":{"line":175,"column":52},"end":{"line":175,"column":73}}]},"25":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":14},"end":{"line":176,"column":43}},{"start":{"line":176,"column":47},"end":{"line":176,"column":68}}]},"26":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":14},"end":{"line":177,"column":32}},{"start":{"line":177,"column":36},"end":{"line":177,"column":54}}]},"27":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":14},"end":{"line":178,"column":32}},{"start":{"line":178,"column":36},"end":{"line":178,"column":66}}]}},"code":["// scopetools.js","// MIT licensed, see LICENSE file","// Copyright (c) 2013-2016 Olov Lassus <olov.lassus@gmail.com>","","\"use strict\";","","const assert = require(\"assert\");","const traverse = require(\"ordered-ast-traverse\");","const Scope = require(\"./scope\");","const is = require(\"simple-is\");","","module.exports = {","    setupScopeAndReferences: setupScopeAndReferences,","    isReference: isReference,","};","","function setupScopeAndReferences(root) {","    traverse(root, {pre: createScopes});","    createTopScope(root.$scope);","}","","function createScopes(node, parent) {","    node.$parent = parent;","    node.$scope = parent ? parent.$scope : null; // may be overridden","","    if (isNonFunctionBlock(node, parent)) {","        // A block node is a scope unless parent is a function","        node.$scope = new Scope({","            kind: \"block\",","            node: node,","            parent: parent.$scope,","        });","","    } else if (node.type === \"VariableDeclaration\") {","        // Variable declarations names goes in current scope","        node.declarations.forEach(function(declarator) {","            const name = declarator.id.name;","            node.$scope.add(name, node.kind, declarator.id, declarator.range[1]);","        });","","    } else if (isFunction(node)) {","        // Function is a scope, with params in it","        // There's no block-scope under it","","        node.$scope = new Scope({","            kind: \"hoist\",","            node: node,","            parent: parent.$scope,","        });","","        // function has a name","        if (node.id) {","            if (node.type === \"FunctionDeclaration\") {","                // Function name goes in parent scope for declared functions","                parent.$scope.add(node.id.name, \"fun\", node.id, null);","            } else if (node.type === \"FunctionExpression\") {","                // Function name goes in function's scope for named function expressions","                node.$scope.add(node.id.name, \"fun\", node.id, null);","            } else {","                assert(false);","            }","        }","","        node.params.forEach(function(param) {","            node.$scope.add(param.name, \"param\", param, null);","        });","","    } else if (isForWithConstLet(node) || isForInOfWithConstLet(node)) {","        // For(In/Of) loop with const|let declaration is a scope, with declaration in it","        // There may be a block-scope under it","        node.$scope = new Scope({","            kind: \"block\",","            node: node,","            parent: parent.$scope,","        });","","    } else if (node.type === \"CatchClause\") {","        const identifier = node.param;","","        node.$scope = new Scope({","            kind: \"catch-block\",","            node: node,","            parent: parent.$scope,","        });","        node.$scope.add(identifier.name, \"caught\", identifier, null);","","        // All hoist-scope keeps track of which variables that are propagated through,","        // i.e. an reference inside the scope points to a declaration outside the scope.","        // This is used to mark \"taint\" the name since adding a new variable in the scope,","        // with a propagated name, would change the meaning of the existing references.","        //","        // catch(e) is special because even though e is a variable in its own scope,","        // we want to make sure that catch(e){let e} is never transformed to","        // catch(e){var e} (but rather var e$0). For that reason we taint the use of e","        // in the closest hoist-scope, i.e. where var e$0 belongs.","        node.$scope.closestHoistScope().markPropagates(identifier.name);","","    } else if (node.type === \"Program\") {","        // Top-level program is a scope","        // There's no block-scope under it","        node.$scope = new Scope({","            kind: \"hoist\",","            node: node,","            parent: null,","        });","    }","}","","function createTopScope(programScope) {","    function inject(obj) {","        for (let name in obj) {","            const writeable = obj[name];","            const kind = (writeable ? \"var\" : \"const\");","            if (topScope.hasOwn(name)) {","                topScope.remove(name);","            }","            topScope.add(name, kind, {loc: {start: {line: -1}}}, -1);","        }","    }","","    const topScope = new Scope({","        kind: \"hoist\",","        node: {},","        parent: null,","    });","","    const complementary = {","        undefined: false,","        Infinity: false,","        console: false,","    };","","    inject(complementary);","//    inject(jshint_vars.reservedVars);","//    inject(jshint_vars.ecmaIdentifiers);","","    // link it in","    programScope.parent = topScope;","    topScope.children.push(programScope);","","    return topScope;","}","","function isConstLet(kind) {","    return kind === \"const\" || kind === \"let\";","}","","function isNonFunctionBlock(node, parent) {","    return node.type === \"BlockStatement\" && parent.type !== \"FunctionDeclaration\" && parent.type !== \"FunctionExpression\";","}","","function isForWithConstLet(node) {","    return node.type === \"ForStatement\" && node.init && node.init.type === \"VariableDeclaration\" && isConstLet(node.init.kind);","}","","function isForInOfWithConstLet(node) {","    return isForInOf(node) && node.left.type === \"VariableDeclaration\" && isConstLet(node.left.kind);","}","","function isForInOf(node) {","    return node.type === \"ForInStatement\" || node.type === \"ForOfStatement\";","}","","function isFunction(node) {","    return node.type === \"FunctionDeclaration\" || node.type === \"FunctionExpression\";","}","","function isReference(node) {","    const parent = node.$parent;","    return node.$refToScope ||","        node.type === \"Identifier\" &&","            !(parent.type === \"VariableDeclarator\" && parent.id === node) && // var|let|const $","            !(parent.type === \"MemberExpression\" && parent.computed === false && parent.property === node) && // obj.$","            !(parent.type === \"Property\" && parent.key === node) && // {$: ...}","            !(parent.type === \"LabeledStatement\" && parent.label === node) && // $: ...","            !(parent.type === \"CatchClause\" && parent.param === node) && // catch($)","            !(isFunction(parent) && parent.id === node) && // function $(..","            !(isFunction(parent) && is.someof(node, parent.params)) && // function f($)..","            true;","}",""],"l":{"7":1,"8":1,"9":1,"10":1,"12":1,"17":1,"18":0,"19":0,"22":1,"23":0,"24":0,"26":0,"28":0,"34":0,"36":0,"37":0,"38":0,"41":0,"45":0,"52":0,"53":0,"55":0,"56":0,"58":0,"60":0,"64":0,"65":0,"68":0,"71":0,"77":0,"78":0,"80":0,"85":0,"96":0,"98":0,"101":0,"109":1,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"117":0,"121":0,"127":0,"133":0,"138":0,"139":0,"141":0,"144":1,"145":0,"148":1,"149":0,"152":1,"153":0,"156":1,"157":0,"160":1,"161":0,"164":1,"165":0,"168":1,"169":0,"170":0}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/scope.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/scope.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":1,"53":0,"54":1,"55":0,"56":1,"57":0,"58":1,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"Scope","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":21}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":57,"column":24},"end":{"line":57,"column":41}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":40},"end":{"line":60,"column":55}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":26},"end":{"line":65,"column":38}}},"5":{"name":"(anonymous_5)","line":70,"loc":{"start":{"line":70,"column":22},"end":{"line":70,"column":67}}},"6":{"name":"isConstLet","line":73,"loc":{"start":{"line":73,"column":4},"end":{"line":73,"column":30}}},"7":{"name":"(anonymous_7)","line":105,"loc":{"start":{"line":105,"column":26},"end":{"line":105,"column":41}}},"8":{"name":"(anonymous_8)","line":111,"loc":{"start":{"line":111,"column":26},"end":{"line":111,"column":41}}},"9":{"name":"(anonymous_9)","line":117,"loc":{"start":{"line":117,"column":29},"end":{"line":117,"column":44}}},"10":{"name":"(anonymous_10)","line":123,"loc":{"start":{"line":123,"column":25},"end":{"line":123,"column":40}}},"11":{"name":"(anonymous_11)","line":127,"loc":{"start":{"line":127,"column":25},"end":{"line":127,"column":40}}},"12":{"name":"(anonymous_12)","line":131,"loc":{"start":{"line":131,"column":32},"end":{"line":131,"column":47}}},"13":{"name":"(anonymous_13)","line":135,"loc":{"start":{"line":135,"column":33},"end":{"line":135,"column":48}}},"14":{"name":"(anonymous_14)","line":139,"loc":{"start":{"line":139,"column":36},"end":{"line":139,"column":47}}},"15":{"name":"(anonymous_15)","line":147,"loc":{"start":{"line":147,"column":25},"end":{"line":147,"column":40}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"6":{"start":{"line":13,"column":0},"end":{"line":55,"column":1}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":68}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":33}},"9":{"start":{"line":16,"column":4},"end":{"line":16,"column":59}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":26}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":26}},"12":{"start":{"line":27,"column":4},"end":{"line":27,"column":30}},"13":{"start":{"line":30,"column":4},"end":{"line":30,"column":23}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":29}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":67}},"16":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"17":{"start":{"line":53,"column":8},"end":{"line":53,"column":40}},"18":{"start":{"line":57,"column":0},"end":{"line":68,"column":2}},"19":{"start":{"line":58,"column":4},"end":{"line":58,"column":25}},"20":{"start":{"line":59,"column":4},"end":{"line":59,"column":23}},"21":{"start":{"line":60,"column":4},"end":{"line":62,"column":18}},"22":{"start":{"line":61,"column":8},"end":{"line":61,"column":66}},"23":{"start":{"line":63,"column":4},"end":{"line":63,"column":81}},"24":{"start":{"line":64,"column":4},"end":{"line":64,"column":113}},"25":{"start":{"line":65,"column":4},"end":{"line":67,"column":7}},"26":{"start":{"line":66,"column":8},"end":{"line":66,"column":28}},"27":{"start":{"line":70,"column":0},"end":{"line":103,"column":2}},"28":{"start":{"line":71,"column":4},"end":{"line":71,"column":79}},"29":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"30":{"start":{"line":74,"column":8},"end":{"line":74,"column":49}},"31":{"start":{"line":77,"column":4},"end":{"line":77,"column":21}},"32":{"start":{"line":81,"column":4},"end":{"line":88,"column":5}},"33":{"start":{"line":82,"column":8},"end":{"line":87,"column":9}},"34":{"start":{"line":86,"column":12},"end":{"line":86,"column":33}},"35":{"start":{"line":94,"column":4},"end":{"line":97,"column":6}},"36":{"start":{"line":98,"column":4},"end":{"line":101,"column":5}},"37":{"start":{"line":99,"column":8},"end":{"line":99,"column":57}},"38":{"start":{"line":100,"column":8},"end":{"line":100,"column":44}},"39":{"start":{"line":102,"column":4},"end":{"line":102,"column":39}},"40":{"start":{"line":105,"column":0},"end":{"line":109,"column":2}},"41":{"start":{"line":106,"column":4},"end":{"line":106,"column":28}},"42":{"start":{"line":107,"column":4},"end":{"line":107,"column":38}},"43":{"start":{"line":108,"column":4},"end":{"line":108,"column":35}},"44":{"start":{"line":111,"column":0},"end":{"line":115,"column":2}},"45":{"start":{"line":112,"column":4},"end":{"line":112,"column":28}},"46":{"start":{"line":113,"column":4},"end":{"line":113,"column":38}},"47":{"start":{"line":114,"column":4},"end":{"line":114,"column":35}},"48":{"start":{"line":117,"column":0},"end":{"line":121,"column":2}},"49":{"start":{"line":118,"column":4},"end":{"line":118,"column":28}},"50":{"start":{"line":119,"column":4},"end":{"line":119,"column":38}},"51":{"start":{"line":120,"column":4},"end":{"line":120,"column":35}},"52":{"start":{"line":123,"column":0},"end":{"line":125,"column":2}},"53":{"start":{"line":124,"column":4},"end":{"line":124,"column":32}},"54":{"start":{"line":127,"column":0},"end":{"line":129,"column":2}},"55":{"start":{"line":128,"column":4},"end":{"line":128,"column":35}},"56":{"start":{"line":131,"column":0},"end":{"line":133,"column":2}},"57":{"start":{"line":132,"column":4},"end":{"line":132,"column":37}},"58":{"start":{"line":135,"column":0},"end":{"line":137,"column":2}},"59":{"start":{"line":136,"column":4},"end":{"line":136,"column":30}},"60":{"start":{"line":139,"column":0},"end":{"line":145,"column":2}},"61":{"start":{"line":140,"column":4},"end":{"line":140,"column":21}},"62":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"63":{"start":{"line":142,"column":8},"end":{"line":142,"column":29}},"64":{"start":{"line":144,"column":4},"end":{"line":144,"column":17}},"65":{"start":{"line":147,"column":0},"end":{"line":156,"column":2}},"66":{"start":{"line":148,"column":4},"end":{"line":154,"column":5}},"67":{"start":{"line":149,"column":8},"end":{"line":153,"column":9}},"68":{"start":{"line":150,"column":12},"end":{"line":150,"column":25}},"69":{"start":{"line":151,"column":15},"end":{"line":153,"column":9}},"70":{"start":{"line":152,"column":12},"end":{"line":152,"column":39}},"71":{"start":{"line":155,"column":4},"end":{"line":155,"column":16}},"72":{"start":{"line":158,"column":0},"end":{"line":158,"column":23}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":11},"end":{"line":16,"column":31}},{"start":{"line":16,"column":35},"end":{"line":16,"column":57}}]},"2":{"line":49,"type":"cond-expr","locations":[{"start":{"line":49,"column":47},"end":{"line":49,"column":58}},{"start":{"line":49,"column":61},"end":{"line":49,"column":65}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"4":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":13},"end":{"line":58,"column":19}},{"start":{"line":58,"column":23},"end":{"line":58,"column":24}}]},"5":{"line":63,"type":"cond-expr","locations":[{"start":{"line":63,"column":41},"end":{"line":63,"column":75}},{"start":{"line":63,"column":78},"end":{"line":63,"column":80}}]},"6":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"7":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"8":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":18},"end":{"line":108,"column":27}},{"start":{"line":108,"column":30},"end":{"line":108,"column":34}}]},"9":{"line":114,"type":"cond-expr","locations":[{"start":{"line":114,"column":18},"end":{"line":114,"column":27}},{"start":{"line":114,"column":30},"end":{"line":114,"column":34}}]},"10":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":18},"end":{"line":120,"column":27}},{"start":{"line":120,"column":30},"end":{"line":120,"column":34}}]},"11":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":8}},{"start":{"line":149,"column":8},"end":{"line":149,"column":8}}]},"12":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":15},"end":{"line":151,"column":15}},{"start":{"line":151,"column":15},"end":{"line":151,"column":15}}]}},"code":["// scope.js","// MIT licensed, see LICENSE file","// Copyright (c) 2013-2016 Olov Lassus <olov.lassus@gmail.com>","","\"use strict\";","","const assert = require(\"assert\");","const stringmap = require(\"stringmap\");","const stringset = require(\"stringset\");","const is = require(\"simple-is\");","const fmt = require(\"simple-fmt\");","","function Scope(args) {","    assert(is.someof(args.kind, [\"hoist\", \"block\", \"catch-block\"]));","    assert(is.object(args.node));","    assert(args.parent === null || is.object(args.parent));","","    // kind === \"hoist\": function scopes, program scope, injected globals","    // kind === \"block\": ES6 block scopes","    // kind === \"catch-block\": catch block scopes","    this.kind = args.kind;","","    // the AST node the block corresponds to","    this.node = args.node;","","    // parent scope","    this.parent = args.parent;","","    // children scopes for easier traversal (populated internally)","    this.children = [];","","    // scope declarations. decls[variable_name] = {","    //     kind: \"fun\" for functions,","    //           \"param\" for function parameters,","    //           \"caught\" for catch parameter","    //           \"var\",","    //           \"const\",","    //           \"let\"","    //     node: the AST node the declaration corresponds to","    //     from: source code index from which it is visible at earliest","    //           (only stored for \"const\", \"let\" [and \"var\"] nodes)","    // }","    this.decls = stringmap();","","    // names of all variables declared outside this hoist scope but","    // referenced in this scope (immediately or in child).","    // only stored on hoist scopes for efficiency","    // (because we currently generate lots of empty block scopes)","    this.propagates = (this.kind === \"hoist\" ? stringset() : null);","","    // scopes register themselves with their parents for easier traversal","    if (this.parent) {","        this.parent.children.push(this);","    }","}","","Scope.prototype.print = function(indent) {","    indent = indent || 0;","    const scope = this;","    const names = this.decls.keys().map(function(name) {","        return fmt(\"{0} [{1}]\", name, scope.decls.get(name).kind);","    }).join(\", \");","    const propagates = this.propagates ? this.propagates.items().join(\", \") : \"\";","    console.log(fmt(\"{0}{1}: {2}. propagates: {3}\", fmt.repeat(\" \", indent), this.node.type, names, propagates));","    this.children.forEach(function(c) {","        c.print(indent + 2);","    });","};","","Scope.prototype.add = function(name, kind, node, referableFromPos) {","    assert(is.someof(kind, [\"fun\", \"param\", \"var\", \"caught\", \"const\", \"let\"]));","","    function isConstLet(kind) {","        return is.someof(kind, [\"const\", \"let\"]);","    }","","    let scope = this;","","    // search nearest hoist-scope for fun, param and var's","    // const, let and caught variables go directly in the scope (which may be hoist, block or catch-block)","    if (is.someof(kind, [\"fun\", \"param\", \"var\"])) {","        while (scope.kind !== \"hoist\") {","//            if (scope.decls.has(name) && isConstLet(scope.decls.get(name).kind)) { // could be caught","//                return error(getline(node), \"{0} is already declared\", name);","//            }","            scope = scope.parent;","        }","    }","    // name exists in scope and either new or existing kind is const|let => error","//    if (scope.decls.has(name) && (isConstLet(scope.decls.get(name).kind) || isConstLet(kind))) {","//        return error(getline(node), \"{0} is already declared\", name);","//    }","","    const declaration = {","        kind: kind,","        node: node,","    };","    if (referableFromPos) {","        assert(is.someof(kind, [\"var\", \"const\", \"let\"]));","        declaration.from = referableFromPos;","    }","    scope.decls.set(name, declaration);","};","","Scope.prototype.getKind = function(name) {","    assert(is.string(name));","    const decl = this.decls.get(name);","    return decl ? decl.kind : null;","};","","Scope.prototype.getNode = function(name) {","    assert(is.string(name));","    const decl = this.decls.get(name);","    return decl ? decl.node : null;","};","","Scope.prototype.getFromPos = function(name) {","    assert(is.string(name));","    const decl = this.decls.get(name);","    return decl ? decl.from : null;","};","","Scope.prototype.hasOwn = function(name) {","    return this.decls.has(name);","};","","Scope.prototype.remove = function(name) {","    return this.decls.remove(name);","};","","Scope.prototype.doesPropagate = function(name) {","    return this.propagates.has(name);","};","","Scope.prototype.markPropagates = function(name) {","    this.propagates.add(name);","};","","Scope.prototype.closestHoistScope = function() {","    let scope = this;","    while (scope.kind !== \"hoist\") {","        scope = scope.parent;","    }","    return scope;","};","","Scope.prototype.lookup = function(name) {","    for (let scope = this; scope; scope = scope.parent) {","        if (scope.decls.has(name)) {","            return scope;","        } else if (scope.kind === \"hoist\") {","            scope.propagates.add(name);","        }","    }","    return null;","};","","module.exports = Scope;",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"14":0,"15":0,"16":0,"21":0,"24":0,"27":0,"30":0,"43":0,"49":0,"52":0,"53":0,"57":1,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0,"66":0,"70":1,"71":0,"73":1,"74":0,"77":0,"81":0,"82":0,"86":0,"94":0,"98":0,"99":0,"100":0,"102":0,"105":1,"106":0,"107":0,"108":0,"111":1,"112":0,"113":0,"114":0,"117":1,"118":0,"119":0,"120":0,"123":1,"124":0,"127":1,"128":0,"131":1,"132":0,"135":1,"136":0,"139":1,"140":0,"141":0,"142":0,"144":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"155":0,"158":1}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/optionals/angular-dashboard-framework.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/optionals/angular-dashboard-framework.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":10},"end":{"line":5,"column":25}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":11},"end":{"line":9,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":15}},"2":{"start":{"line":4,"column":0},"end":{"line":67,"column":2}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":19}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":35}},"5":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"6":{"start":{"line":18,"column":12},"end":{"line":18,"column":25}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":34}},"8":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"9":{"start":{"line":23,"column":12},"end":{"line":23,"column":25}},"10":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"11":{"start":{"line":28,"column":12},"end":{"line":28,"column":25}},"12":{"start":{"line":31,"column":8},"end":{"line":31,"column":26}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":39}},"14":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"15":{"start":{"line":35,"column":12},"end":{"line":35,"column":25}},"16":{"start":{"line":38,"column":8},"end":{"line":38,"column":36}},"17":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"18":{"start":{"line":40,"column":12},"end":{"line":40,"column":25}},"19":{"start":{"line":43,"column":8},"end":{"line":43,"column":41}},"20":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"21":{"start":{"line":45,"column":12},"end":{"line":45,"column":25}},"22":{"start":{"line":48,"column":8},"end":{"line":48,"column":43}},"23":{"start":{"line":49,"column":8},"end":{"line":51,"column":10}},"24":{"start":{"line":53,"column":8},"end":{"line":53,"column":53}},"25":{"start":{"line":56,"column":8},"end":{"line":56,"column":50}},"26":{"start":{"line":57,"column":8},"end":{"line":62,"column":9}},"27":{"start":{"line":58,"column":12},"end":{"line":58,"column":46}},"28":{"start":{"line":59,"column":12},"end":{"line":59,"column":61}},"29":{"start":{"line":60,"column":12},"end":{"line":60,"column":56}},"30":{"start":{"line":61,"column":12},"end":{"line":61,"column":61}},"31":{"start":{"line":64,"column":8},"end":{"line":64,"column":48}},"32":{"start":{"line":65,"column":8},"end":{"line":65,"column":64}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":8}},{"start":{"line":17,"column":8},"end":{"line":17,"column":8}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":8}},{"start":{"line":22,"column":8},"end":{"line":22,"column":8}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"4":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":14},"end":{"line":27,"column":32}},{"start":{"line":27,"column":37},"end":{"line":27,"column":62}},{"start":{"line":27,"column":66},"end":{"line":27,"column":98}}]},"5":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":8}},{"start":{"line":34,"column":8},"end":{"line":34,"column":8}}]},"6":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]},"7":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]},"8":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"9":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":16}},{"start":{"line":57,"column":20},"end":{"line":57,"column":52}}]},"10":{"line":65,"type":"cond-expr","locations":[{"start":{"line":65,"column":43},"end":{"line":65,"column":48}},{"start":{"line":65,"column":51},"end":{"line":65,"column":62}}]}},"code":["\"use strict\";","","let ctx = null;","module.exports = {","    init: function(_ctx) {","        ctx = _ctx;","    },","","    match: function(node) {","        // dashboardProvider.widget(\"name\", {","        //   ...","        //   controller: function($scope) {},","        //   resolve: {f: function($scope) {}, ..}","        // })","","        const callee = node.callee;","        if (!callee) {","            return false;","        }","","        const obj = callee.object;","        if (!obj) {","            return false;","        }","","        // identifier or expression","        if (!(obj.$chained === 1 || (obj.type === \"Identifier\" && obj.name === \"dashboardProvider\"))) {","            return false;","        }","","        node.$chained = 1;","","        const method = callee.property; // identifier","        if (method.name !== \"widget\") {","            return false;","        }","","        const args = node.arguments;","        if (args.length !== 2) {","            return false;","        }","","        const configArg = ctx.last(args);","        if (configArg.type !== \"ObjectExpression\") {","            return false;","        }","","        const props = configArg.properties;","        const res = [","            ctx.matchProp(\"controller\", props)","        ];","        // {resolve: ..}","        res.push.apply(res, ctx.matchResolve(props));","","        // edit: {controller: function(), resolve: {}, apply: function()}","        const edit = ctx.matchProp('edit', props);","        if (edit && edit.type === \"ObjectExpression\") {","            const editProps = edit.properties;","            res.push(ctx.matchProp('controller', editProps));","            res.push(ctx.matchProp('apply', editProps));","            res.push.apply(res, ctx.matchResolve(editProps));","        }","","        const filteredRes = res.filter(Boolean);","        return (filteredRes.length === 0 ? false : filteredRes);","    }","};",""],"l":{"3":1,"4":1,"6":0,"16":0,"17":0,"18":0,"21":0,"22":0,"23":0,"27":0,"28":0,"31":0,"33":0,"34":0,"35":0,"38":0,"39":0,"40":0,"43":0,"44":0,"45":0,"48":0,"49":0,"53":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"64":0,"65":0}},"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/pos-to-linecolumn.js":{"path":"/home/travis/build/npmtest/node-npmtest-ng-annotate/node_modules/ng-annotate/pos-to-linecolumn.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":1,"34":0,"35":0,"36":1,"37":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"PosToLineColumn","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}}},"2":{"name":"(anonymous_2)","line":51,"loc":{"start":{"line":51,"column":35},"end":{"line":51,"column":49}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":37},"end":{"line":56,"column":51}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":41},"end":{"line":61,"column":55}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":33}},"3":{"start":{"line":11,"column":0},"end":{"line":49,"column":1}},"4":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":56}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":22}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":24}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":17}},"9":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":27}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":17}},"12":{"start":{"line":24,"column":4},"end":{"line":24,"column":19}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":23}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":21}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":10}},"16":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"17":{"start":{"line":29,"column":4},"end":{"line":40,"column":5}},"18":{"start":{"line":30,"column":8},"end":{"line":30,"column":28}},"19":{"start":{"line":31,"column":8},"end":{"line":31,"column":24}},"20":{"start":{"line":33,"column":8},"end":{"line":39,"column":9}},"21":{"start":{"line":34,"column":12},"end":{"line":34,"column":16}},"22":{"start":{"line":35,"column":12},"end":{"line":35,"column":19}},"23":{"start":{"line":36,"column":12},"end":{"line":36,"column":23}},"24":{"start":{"line":38,"column":12},"end":{"line":38,"column":21}},"25":{"start":{"line":43,"column":4},"end":{"line":43,"column":24}},"26":{"start":{"line":44,"column":4},"end":{"line":44,"column":20}},"27":{"start":{"line":46,"column":4},"end":{"line":46,"column":26}},"28":{"start":{"line":47,"column":4},"end":{"line":47,"column":27}},"29":{"start":{"line":48,"column":4},"end":{"line":48,"column":23}},"30":{"start":{"line":51,"column":0},"end":{"line":54,"column":2}},"31":{"start":{"line":52,"column":4},"end":{"line":52,"column":40}},"32":{"start":{"line":53,"column":4},"end":{"line":53,"column":27}},"33":{"start":{"line":56,"column":0},"end":{"line":59,"column":2}},"34":{"start":{"line":57,"column":4},"end":{"line":57,"column":40}},"35":{"start":{"line":58,"column":4},"end":{"line":58,"column":29}},"36":{"start":{"line":61,"column":0},"end":{"line":66,"column":2}},"37":{"start":{"line":62,"column":4},"end":{"line":65,"column":6}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":8}},{"start":{"line":33,"column":8},"end":{"line":33,"column":8}}]},"3":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":11},"end":{"line":52,"column":19}},{"start":{"line":52,"column":23},"end":{"line":52,"column":38}}]},"4":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":11},"end":{"line":57,"column":19}},{"start":{"line":57,"column":23},"end":{"line":57,"column":38}}]}},"code":["// pos-to-linecolumn.js","// MIT licensed, see LICENSE file","// Copyright (c) 2014-2016 Olov Lassus <olov.lassus@gmail.com>","","\"use strict\";","","const assert = require(\"assert\");","","module.exports = PosToLineColumn;","","function PosToLineColumn(str) {","    if (!(this instanceof PosToLineColumn)) {","        throw new Error(\"PosToLineColumn requires new\");","    }","    str = String(str);","","    const newlines = [];","    let pos = -1;","    while ((pos = str.indexOf(\"\\n\", pos + 1)) >= 0) {","        newlines.push(pos);","    }","","    let line = 1;","    let column = 0;","    const columns = [];","    const lines = [];","    let i;","    let j = 0;","    for (i = 0; i < str.length; i++) {","        columns[i] = column;","        lines[i] = line;","","        if (i === newlines[j]) {","            ++j;","            ++line;","            column = 0;","        } else {","            ++column;","        }","    }","","    // add extra entry to support pos === str.length","    columns[i] = column;","    lines[i] = line;","","    this.len = str.length;","    this.columns = columns;","    this.lines = lines;","}","","PosToLineColumn.prototype.toLine = function(pos) {","    assert(pos >= 0 && pos <= this.len);","    return this.lines[pos];","};","","PosToLineColumn.prototype.toColumn = function(pos) {","    assert(pos >= 0 && pos <= this.len);","    return this.columns[pos];","};","","PosToLineColumn.prototype.toLineColumn = function(pos) {","    return {","        line: this.toLine(pos),","        column: this.toColumn(pos),","    };","};","","","/*","const tst = \"asdf\\n\" +","    \"abc\\n\" +","    \"d\\n\" +","    \"\\n\\n\" +","    \"efghi a\\r\\n\" +","    \"x\";","const instance = new PosToLineColumn(tst);","console.dir(instance.toLineColumn(0));","console.dir(instance.toLineColumn(tst.length));","*/",""],"l":{"7":1,"9":1,"11":1,"12":0,"13":0,"15":0,"17":0,"18":0,"19":0,"20":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"38":0,"43":0,"44":0,"46":0,"47":0,"48":0,"51":1,"52":0,"53":0,"56":1,"57":0,"58":0,"61":1,"62":0}}}